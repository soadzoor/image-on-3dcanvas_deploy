(()=>{var Ra=Object.defineProperty,Ca=Object.assign,ou=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),au=e=>Ra(e,"__esModule",{value:!0}),cu=(e,t)=>{au(e);for(var n in t)Ra(e,n,{get:t[n],enumerable:!0})};var Pa=ou(lu=>{cu(lu,{App:()=>uo});class uo{constructor(){}Initialize(e,t){this._sceneManager=new nn(e,t)}UploadImage(e){return new Promise((t,n)=>{this._img=document.createElement("img"),this._img.crossOrigin="Anonymous",this._img.src=e,this._img.onload=()=>{t(this._img)},this._img.onerror=i=>{console.error(i),n()}})}ShowScene(){this._sceneManager.init(this._img)}}window.app=uo});Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e});Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e});"name"in Function.prototype===!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let n=1;n<arguments.length;n++){const i=arguments[n];if(i!=null)for(const r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t});const uu="120",hu=0,Ia=1,du=2,Da=1,fu=2,sr=3,bn=0,nt=1,di=2,Na=1,or=0,ar=1,Oa=2,Ba=3,Fa=4,pu=5,fi=100,mu=101,gu=102,Ga=103,Ua=104,vu=200,yu=201,xu=202,bu=203,za=204,ka=205,_u=206,wu=207,Mu=208,Tu=209,Su=210,Eu=0,Au=1,Lu=2,ho=3,Ru=4,Cu=5,Pu=6,Iu=7,ts=0,Du=1,Nu=2,cr=0,Ou=1,Bu=2,Fu=3,Gu=4,Uu=5,fo=300,ns=301,is=302,lr=303,po=304,rs=306,ss=307,_n=1e3,ot=1001,pi=1002,et=1003,ur=1004,hr=1005,Ke=1006,os=1007,wn=1008,mo=1009,zu=1010,ku=1011,as=1012,Hu=1013,cs=1014,Mn=1015,ls=1016,Vu=1017,Wu=1018,ju=1019,dr=1020,qu=1021,rn=1022,Bt=1023,Xu=1024,Yu=1025,mi=1026,fr=1027,Zu=1028,Ju=1029,Ku=1030,Qu=1031,$u=1032,eh=1033,Ha=33776,Va=33777,Wa=33778,ja=33779,qa=35840,Xa=35841,Ya=35842,Za=35843,th=36196,Ja=37492,Ka=37496,nh=37808,ih=37809,rh=37810,sh=37811,oh=37812,ah=37813,ch=37814,lh=37815,uh=37816,hh=37817,dh=37818,fh=37819,ph=37820,mh=37821,gh=36492,vh=37840,yh=37841,xh=37842,bh=37843,_h=37844,wh=37845,Mh=37846,Th=37847,Sh=37848,Eh=37849,Ah=37850,Lh=37851,Rh=37852,Ch=37853,Ph=2200,Ih=2201,Dh=2202,gi=2300,Wn=2301,go=2302,vi=2400,yi=2401,us=2402,vo=2500,Qa=2501,Nh=0,$a=1,yo=2,xi=3e3,Tn=3001,hs=3007,ec=3002,Oh=3003,tc=3004,nc=3005,ic=3006,Bh=3200,Fh=3201,Sn=0,Gh=1,xo=7680,Uh=519,ds=35044,pr=35048,rc="300 es";function sn(){}Object.assign(sn.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;const n=this._listeners,i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}},dispatchEvent:function(e){if(this._listeners===void 0)return;const t=this._listeners,n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,e)}}});const it=[];for(let e=0;e<256;e++)it[e]=(e<16?"0":"")+e.toString(16);let fs=1234567;const Se={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0,r=it[e&255]+it[e>>8&255]+it[e>>16&255]+it[e>>24&255]+"-"+it[t&255]+it[t>>8&255]+"-"+it[t>>16&15|64]+it[t>>24&255]+"-"+it[n&63|128]+it[n>>8&255]+"-"+it[n>>16&255]+it[n>>24&255]+it[i&255]+it[i>>8&255]+it[i>>16&255]+it[i>>24&255];return r.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return e!==void 0&&(fs=e%2147483647),fs=fs*16807%2147483647,(fs-1)/2147483646},degToRad:function(e){return e*Se.DEG2RAD},radToDeg:function(e){return e*Se.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),c=o(n/2),l=s((t+i)/2),h=o((t+i)/2),u=s((t-i)/2),f=o((t-i)/2),d=s((i-t)/2),m=o((i-t)/2);switch(r){case"XYX":e.set(a*h,c*u,c*f,a*l);break;case"YZY":e.set(c*f,a*h,c*u,a*l);break;case"ZXZ":e.set(c*u,c*f,a*h,a*l);break;case"XZX":e.set(a*h,c*m,c*d,a*l);break;case"YXY":e.set(c*d,a*h,c*m,a*l);break;case"ZYZ":e.set(c*m,c*d,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class ${constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*n-s*i+e.x,this.y=r*i+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class pt{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,s,o,a,c){const l=this.elements;return l[0]=e,l[1]=i,l[2]=o,l[3]=t,l[4]=r,l[5]=a,l[6]=n,l[7]=s,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],f=n[5],d=n[8],m=i[0],y=i[3],v=i[6],g=i[1],p=i[4],_=i[7],E=i[2],R=i[5],w=i[8];return r[0]=s*m+o*g+a*E,r[3]=s*y+o*p+a*R,r[6]=s*v+o*_+a*w,r[1]=c*m+l*g+h*E,r[4]=c*y+l*p+h*R,r[7]=c*v+l*_+h*w,r[2]=u*m+f*g+d*E,r[5]=u*y+f*p+d*R,r[8]=u*v+f*_+d*w,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*s*l-t*o*c-n*r*l+n*o*a+i*r*c-i*s*a}getInverse(e,t){t!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=e.elements,i=this.elements,r=n[0],s=n[1],o=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7],f=n[8],d=f*c-l*u,m=l*h-f*a,y=u*a-c*h,v=r*d+s*m+o*y;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/v;return i[0]=d*g,i[1]=(o*u-f*s)*g,i[2]=(l*s-o*c)*g,i[3]=m*g,i[4]=(f*r-o*h)*g,i[5]=(o*a-l*r)*g,i[6]=y*g,i[7]=(s*h-u*r)*g,i[8]=(c*r-s*a)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).getInverse(this).transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,s,o){const a=Math.cos(r),c=Math.sin(r);this.set(n*a,n*c,-n*(a*s+c*o)+s+e,-i*c,i*a,-i*(-c*s+a*o)+o+t,0,0,1)}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],s=i[3],o=i[6],a=i[1],c=i[4],l=i[7];return i[0]=t*r+n*a,i[3]=t*s+n*c,i[6]=t*o+n*l,i[1]=-n*r+t*a,i[4]=-n*s+t*c,i[7]=-n*o+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t){t===void 0&&(t=0);for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}let bi;const jn={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if(typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{bi===void 0&&(bi=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),bi.width=e.width,bi.height=e.height;const n=bi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=bi}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let zh=0;function Ue(e,t,n,i,r,s,o,a,c,l){Object.defineProperty(this,"id",{value:zh++}),this.uuid=Se.generateUUID(),this.name="",this.image=e!==void 0?e:Ue.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Ue.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:ot,this.wrapT=i!==void 0?i:ot,this.magFilter=r!==void 0?r:Ke,this.minFilter=s!==void 0?s:wn,this.anisotropy=c!==void 0?c:1,this.format=o!==void 0?o:Bt,this.internalFormat=null,this.type=a!==void 0?a:mo,this.offset=new $(0,0),this.repeat=new $(1,1),this.center=new $(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:xi,this.version=0,this.onUpdate=null}Ue.DEFAULT_IMAGE=void 0;Ue.DEFAULT_MAPPING=fo;Ue.prototype=Object.assign(Object.create(sn.prototype),{constructor:Ue,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Se.generateUUID()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)r.push(jn.getDataURL(i[s]))}else r=jn.getDataURL(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==fo)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case _n:e.x=e.x-Math.floor(e.x);break;case ot:e.x=e.x<0?0:1;break;case pi:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case _n:e.y=e.y-Math.floor(e.y);break;case ot:e.y=e.y<0?0:1;break;case pi:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}});Object.defineProperty(Ue.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});class ze{constructor(e=0,t=0,n=0,i=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const s=.01,o=.1,a=e.elements,c=a[0],l=a[4],h=a[8],u=a[1],f=a[5],d=a[9],m=a[2],y=a[6],v=a[10];if(Math.abs(l-u)<s&&Math.abs(h-m)<s&&Math.abs(d-y)<s){if(Math.abs(l+u)<o&&Math.abs(h+m)<o&&Math.abs(d+y)<o&&Math.abs(c+f+v-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const p=(c+1)/2,_=(f+1)/2,E=(v+1)/2,R=(l+u)/4,w=(h+m)/4,P=(d+y)/4;return p>_&&p>E?p<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(p),i=R/n,r=w/n):_>E?_<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=R/i,r=P/i):E<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=w/r,i=P/r),this.set(n,i,r,t),this}let g=Math.sqrt((y-d)*(y-d)+(h-m)*(h-m)+(u-l)*(u-l));return Math.abs(g)<.001&&(g=1),this.x=(y-d)/g,this.y=(h-m)/g,this.z=(u-l)/g,this.w=Math.acos((c+f+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function Ft(e,t,n){this.width=e,this.height=t,this.scissor=new ze(0,0,e,t),this.scissorTest=!1,this.viewport=new ze(0,0,e,t),n=n||{},this.texture=new Ue(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Ke,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Ft.prototype=Object.assign(Object.create(sn.prototype),{constructor:Ft,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function sc(e,t,n){Ft.call(this,e,t,n),this.samples=4}sc.prototype=Object.assign(Object.create(Ft.prototype),{constructor:sc,isWebGLMultisampleRenderTarget:!0,copy:function(e){return Ft.prototype.copy.call(this,e),this.samples=e.samples,this}});class lt{constructor(e=0,t=0,n=0,i=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return n.copy(e).slerp(t,i)}static slerpFlat(e,t,n,i,r,s,o){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[s+0],f=r[s+1],d=r[s+2],m=r[s+3];if(h!==m||a!==u||c!==f||l!==d){let y=1-o;const v=a*u+c*f+l*d+h*m,g=v>=0?1:-1,p=1-v*v;if(p>Number.EPSILON){const E=Math.sqrt(p),R=Math.atan2(E,v*g);y=Math.sin(y*R)/E,o=Math.sin(o*R)/E}const _=o*g;if(a=a*y+u*_,c=c*y+f*_,l=l*y+d*_,h=h*y+m*_,y===1-o){const E=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=E,c*=E,l*=E,h*=E}}e[t]=a,e[t+1]=c,e[t+2]=l,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,s){const o=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[s],u=r[s+1],f=r[s+2],d=r[s+3];return e[t]=o*d+l*h+a*f-c*u,e[t+1]=a*d+l*u+c*h-o*f,e[t+2]=c*d+l*f+o*u-a*h,e[t+3]=l*d-o*h-a*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,s=e._order,o=Math.cos,a=Math.sin,c=o(n/2),l=o(i/2),h=o(r/2),u=a(n/2),f=a(i/2),d=a(r/2);switch(s){case"XYZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"YXZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"ZXY":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"ZYX":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"YZX":this._x=u*l*h+c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h-u*f*d;break;case"XZY":this._x=u*l*h-c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h+u*f*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],o=t[5],a=t[9],c=t[2],l=t[6],h=t[10],u=n+o+h;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(l-a)*f,this._y=(r-c)*f,this._z=(s-i)*f}else if(n>o&&n>h){const f=2*Math.sqrt(1+n-o-h);this._w=(l-a)/f,this._x=.25*f,this._y=(i+s)/f,this._z=(r+c)/f}else if(o>h){const f=2*Math.sqrt(1+o-n-h);this._w=(r-c)/f,this._x=(i+s)/f,this._y=.25*f,this._z=(a+l)/f}else{const f=2*Math.sqrt(1+h-n-o);this._w=(s-i)/f,this._x=(r+c)/f,this._y=(a+l)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){const n=1e-6;let i=e.dot(t)+1;return i<n?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Se.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w,o=t._x,a=t._y,c=t._z,l=t._w;return this._x=n*l+s*o+i*c-r*a,this._y=i*l+s*a+r*o-n*c,this._z=r*l+s*c+n*a-i*o,this._w=s*l-n*o-i*a-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let o=s*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const a=1-o*o;if(a<=Number.EPSILON){const f=1-t;return this._w=f*s+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,o),h=Math.sin((1-t)*l)/c,u=Math.sin(t*l)/c;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class T{constructor(e=0,t=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(oc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(oc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,s=e.y,o=e.z,a=e.w,c=a*t+s*i-o*n,l=a*n+o*t-r*i,h=a*i+r*n-s*t,u=-r*t-s*n-o*i;return this.x=c*a+u*-r+l*-o-h*-s,this.y=l*a+u*-s+h*-r-c*-o,this.z=h*a+u*-o+c*-s-l*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,s=t.x,o=t.y,a=t.z;return this.x=i*a-r*o,this.y=r*s-n*a,this.z=n*o-i*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return bo.copy(this).projectOnVector(e),this.sub(bo)}reflect(e){return this.sub(bo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Se.clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const bo=new T,oc=new lt;class Gt{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new T(Infinity,Infinity,Infinity),this.max=t!==void 0?t:new T(-Infinity,-Infinity,-Infinity)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,n=Infinity,i=Infinity,r=-Infinity,s=-Infinity,o=-Infinity;for(let a=0,c=e.length;a<c;a+=3){const l=e[a],h=e[a+1],u=e[a+2];l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>s&&(s=h),u>o&&(o=u)}return this.min.set(t,n,i),this.max.set(r,s,o),this}setFromBufferAttribute(e){let t=Infinity,n=Infinity,i=Infinity,r=-Infinity,s=-Infinity,o=-Infinity;for(let a=0,c=e.count;a<c;a++){const l=e.getX(a),h=e.getY(a),u=e.getZ(a);l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>s&&(s=h),u>o&&(o=u)}return this.min.set(t,n,i),this.max.set(r,s,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=mr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new T),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new T),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),wo.copy(t.boundingBox),wo.applyMatrix4(e.matrixWorld),this.union(wo));const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new T),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,mr),mr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gr),ps.subVectors(this.max,gr),_i.subVectors(e.a,gr),wi.subVectors(e.b,gr),Mi.subVectors(e.c,gr),En.subVectors(wi,_i),An.subVectors(Mi,wi),qn.subVectors(_i,Mi);let t=[0,-En.z,En.y,0,-An.z,An.y,0,-qn.z,qn.y,En.z,0,-En.x,An.z,0,-An.x,qn.z,0,-qn.x,-En.y,En.x,0,-An.y,An.x,0,-qn.y,qn.x,0];return _o(t,_i,wi,Mi,ps)?(t=[1,0,0,0,1,0,0,0,1],_o(t,_i,wi,Mi,ps)?(ms.crossVectors(En,An),t=[ms.x,ms.y,ms.z],_o(t,_i,wi,Mi,ps)):!1):!1}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new T),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=mr.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(mr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(on[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),on[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),on[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),on[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),on[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),on[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),on[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),on[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(on),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function _o(e,t,n,i,r){for(let s=0,o=e.length-3;s<=o;s+=3){Xn.fromArray(e,s);const a=r.x*Math.abs(Xn.x)+r.y*Math.abs(Xn.y)+r.z*Math.abs(Xn.z),c=t.dot(Xn),l=n.dot(Xn),h=i.dot(Xn);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const on=[new T,new T,new T,new T,new T,new T,new T,new T],mr=new T,wo=new Gt,_i=new T,wi=new T,Mi=new T,En=new T,An=new T,qn=new T,gr=new T,ps=new T,ms=new T,Xn=new T,kh=new Gt;class jt{constructor(e,t){this.center=e!==void 0?e:new T,this.radius=t!==void 0?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):kh.setFromPoints(e).getCenter(n);let i=0;for(let r=0,s=e.length;r<s;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new T),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Gt),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const an=new T,Mo=new T,gs=new T,Ln=new T,To=new T,vs=new T,So=new T;class vr{constructor(e,t){this.origin=e!==void 0?e:new T,this.direction=t!==void 0?t:new T(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new T),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,an)),this}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new T),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=an.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(an.copy(this.direction).multiplyScalar(t).add(this.origin),an.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Mo.copy(e).add(t).multiplyScalar(.5),gs.copy(t).sub(e).normalize(),Ln.copy(this.origin).sub(Mo);const r=e.distanceTo(t)*.5,s=-this.direction.dot(gs),o=Ln.dot(this.direction),a=-Ln.dot(gs),c=Ln.lengthSq(),l=Math.abs(1-s*s);let h,u,f,d;if(l>0)if(h=s*a-o,u=s*o-a,d=r*l,h>=0)if(u>=-d)if(u<=d){const m=1/l;h*=m,u*=m,f=h*(h+s*u+2*o)+u*(s*h+u+2*a)+c}else u=r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;else u<=-d?(h=Math.max(0,-(-s*r+o)),u=h>0?-r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c):u<=d?(h=0,u=Math.min(Math.max(-r,-a),r),f=u*(u+2*a)+c):(h=Math.max(0,-(s*r+o)),u=h>0?r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c);else u=s>0?-r:r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(gs).multiplyScalar(u).add(Mo),f}intersectSphere(e,t){an.subVectors(e.center,this.origin);const n=an.dot(this.direction),i=an.dot(an)-n*n,r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i),o=n-s,a=n+s;return o<0&&a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(t===0)return!0;const n=e.normal.dot(this.direction);return n*t<0}intersectBox(e,t){let n,i,r,s,o,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(e.min.x-u.x)*c,i=(e.max.x-u.x)*c):(n=(e.max.x-u.x)*c,i=(e.min.x-u.x)*c),l>=0?(r=(e.min.y-u.y)*l,s=(e.max.y-u.y)*l):(r=(e.max.y-u.y)*l,s=(e.min.y-u.y)*l),n>s||r>i?null:((r>n||n!==n)&&(n=r),(s<i||i!==i)&&(i=s),h>=0?(o=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),n>a||o>i?null:((o>n||n!==n)&&(n=o),(a<i||i!==i)&&(i=a),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return this.intersectBox(e,an)!==null}intersectTriangle(e,t,n,i,r){To.subVectors(t,e),vs.subVectors(n,e),So.crossVectors(To,vs);let s=this.direction.dot(So),o;if(s>0){if(i)return null;o=1}else if(s<0)o=-1,s=-s;else return null;Ln.subVectors(this.origin,e);const a=o*this.direction.dot(vs.crossVectors(Ln,vs));if(a<0)return null;const c=o*this.direction.dot(To.cross(Ln));if(c<0)return null;if(a+c>s)return null;const l=-o*Ln.dot(So);return l<0?null:this.at(l/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Re{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,s,o,a,c,l,h,u,f,d,m,y){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=s,v[9]=o,v[13]=a,v[2]=c,v[6]=l,v[10]=h,v[14]=u,v[3]=f,v[7]=d,v[11]=m,v[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Re().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ti.setFromMatrixColumn(e,0).length(),r=1/Ti.setFromMatrixColumn(e,1).length(),s=1/Ti.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,s=Math.cos(n),o=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const u=s*l,f=s*h,d=o*l,m=o*h;t[0]=a*l,t[4]=-a*h,t[8]=c,t[1]=f+d*c,t[5]=u-m*c,t[9]=-o*a,t[2]=m-u*c,t[6]=d+f*c,t[10]=s*a}else if(e.order==="YXZ"){const u=a*l,f=a*h,d=c*l,m=c*h;t[0]=u+m*o,t[4]=d*o-f,t[8]=s*c,t[1]=s*h,t[5]=s*l,t[9]=-o,t[2]=f*o-d,t[6]=m+u*o,t[10]=s*a}else if(e.order==="ZXY"){const u=a*l,f=a*h,d=c*l,m=c*h;t[0]=u-m*o,t[4]=-s*h,t[8]=d+f*o,t[1]=f+d*o,t[5]=s*l,t[9]=m-u*o,t[2]=-s*c,t[6]=o,t[10]=s*a}else if(e.order==="ZYX"){const u=s*l,f=s*h,d=o*l,m=o*h;t[0]=a*l,t[4]=d*c-f,t[8]=u*c+m,t[1]=a*h,t[5]=m*c+u,t[9]=f*c-d,t[2]=-c,t[6]=o*a,t[10]=s*a}else if(e.order==="YZX"){const u=s*a,f=s*c,d=o*a,m=o*c;t[0]=a*l,t[4]=m-u*h,t[8]=d*h+f,t[1]=h,t[5]=s*l,t[9]=-o*l,t[2]=-c*l,t[6]=f*h+d,t[10]=u-m*h}else if(e.order==="XZY"){const u=s*a,f=s*c,d=o*a,m=o*c;t[0]=a*l,t[4]=-h,t[8]=c*l,t[1]=u*h+m,t[5]=s*l,t[9]=f*h-d,t[2]=d*h-f,t[6]=o*l,t[10]=m*h+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Hh,e,Vh)}lookAt(e,t,n){const i=this.elements;return _t.subVectors(e,t),_t.lengthSq()===0&&(_t.z=1),_t.normalize(),Rn.crossVectors(n,_t),Rn.lengthSq()===0&&(Math.abs(n.z)===1?_t.x+=1e-4:_t.z+=1e-4,_t.normalize(),Rn.crossVectors(n,_t)),Rn.normalize(),ys.crossVectors(_t,Rn),i[0]=Rn.x,i[4]=ys.x,i[8]=_t.x,i[1]=Rn.y,i[5]=ys.y,i[9]=_t.y,i[2]=Rn.z,i[6]=ys.z,i[10]=_t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],f=n[13],d=n[2],m=n[6],y=n[10],v=n[14],g=n[3],p=n[7],_=n[11],E=n[15],R=i[0],w=i[4],P=i[8],X=i[12],B=i[1],oe=i[5],H=i[9],Y=i[13],W=i[2],z=i[6],G=i[10],K=i[14],ie=i[3],re=i[7],ue=i[11],ae=i[15];return r[0]=s*R+o*B+a*W+c*ie,r[4]=s*w+o*oe+a*z+c*re,r[8]=s*P+o*H+a*G+c*ue,r[12]=s*X+o*Y+a*K+c*ae,r[1]=l*R+h*B+u*W+f*ie,r[5]=l*w+h*oe+u*z+f*re,r[9]=l*P+h*H+u*G+f*ue,r[13]=l*X+h*Y+u*K+f*ae,r[2]=d*R+m*B+y*W+v*ie,r[6]=d*w+m*oe+y*z+v*re,r[10]=d*P+m*H+y*G+v*ue,r[14]=d*X+m*Y+y*K+v*ae,r[3]=g*R+p*B+_*W+E*ie,r[7]=g*w+p*oe+_*z+E*re,r[11]=g*P+p*H+_*G+E*ue,r[15]=g*X+p*Y+_*K+E*ae,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],s=e[1],o=e[5],a=e[9],c=e[13],l=e[2],h=e[6],u=e[10],f=e[14],d=e[3],m=e[7],y=e[11],v=e[15];return d*(+r*a*h-i*c*h-r*o*u+n*c*u+i*o*f-n*a*f)+m*(+t*a*f-t*c*u+r*s*u-i*s*f+i*c*l-r*a*l)+y*(+t*c*h-t*o*f-r*s*h+n*s*f+r*o*l-n*c*l)+v*(-i*o*l-t*a*h+t*o*u+i*s*h-n*s*u+n*a*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}getInverse(e,t){t!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],f=i[8],d=i[9],m=i[10],y=i[11],v=i[12],g=i[13],p=i[14],_=i[15],E=d*p*u-g*m*u+g*h*y-l*p*y-d*h*_+l*m*_,R=v*m*u-f*p*u-v*h*y+c*p*y+f*h*_-c*m*_,w=f*g*u-v*d*u+v*l*y-c*g*y-f*l*_+c*d*_,P=v*d*h-f*g*h-v*l*m+c*g*m+f*l*p-c*d*p,X=r*E+s*R+o*w+a*P;if(X===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const B=1/X;return n[0]=E*B,n[1]=(g*m*a-d*p*a-g*o*y+s*p*y+d*o*_-s*m*_)*B,n[2]=(l*p*a-g*h*a+g*o*u-s*p*u-l*o*_+s*h*_)*B,n[3]=(d*h*a-l*m*a-d*o*u+s*m*u+l*o*y-s*h*y)*B,n[4]=R*B,n[5]=(f*p*a-v*m*a+v*o*y-r*p*y-f*o*_+r*m*_)*B,n[6]=(v*h*a-c*p*a-v*o*u+r*p*u+c*o*_-r*h*_)*B,n[7]=(c*m*a-f*h*a+f*o*u-r*m*u-c*o*y+r*h*y)*B,n[8]=w*B,n[9]=(v*d*a-f*g*a-v*s*y+r*g*y+f*s*_-r*d*_)*B,n[10]=(c*g*a-v*l*a+v*s*u-r*g*u-c*s*_+r*l*_)*B,n[11]=(f*l*a-c*d*a-f*s*u+r*d*u+c*s*y-r*l*y)*B,n[12]=P*B,n[13]=(f*g*o-v*d*o+v*s*m-r*g*m-f*s*p+r*d*p)*B,n[14]=(v*l*o-c*g*o-v*s*h+r*g*h+c*s*p-r*l*p)*B,n[15]=(c*d*o-f*l*o+f*s*h-r*d*h-c*s*m+r*l*m)*B,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,s=e.x,o=e.y,a=e.z,c=r*s,l=r*o;return this.set(c*s+n,c*o-i*a,c*a+i*o,0,c*o+i*a,l*o+n,l*a-i*s,0,c*a-i*o,l*a+i*s,r*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,s=t._y,o=t._z,a=t._w,c=r+r,l=s+s,h=o+o,u=r*c,f=r*l,d=r*h,m=s*l,y=s*h,v=o*h,g=a*c,p=a*l,_=a*h,E=n.x,R=n.y,w=n.z;return i[0]=(1-(m+v))*E,i[1]=(f+_)*E,i[2]=(d-p)*E,i[3]=0,i[4]=(f-_)*R,i[5]=(1-(u+v))*R,i[6]=(y+g)*R,i[7]=0,i[8]=(d+p)*w,i[9]=(y-g)*w,i[10]=(1-(u+m))*w,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Ti.set(i[0],i[1],i[2]).length();const s=Ti.set(i[4],i[5],i[6]).length(),o=Ti.set(i[8],i[9],i[10]).length(),a=this.determinant();a<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ut.copy(this);const c=1/r,l=1/s,h=1/o;return Ut.elements[0]*=c,Ut.elements[1]*=c,Ut.elements[2]*=c,Ut.elements[4]*=l,Ut.elements[5]*=l,Ut.elements[6]*=l,Ut.elements[8]*=h,Ut.elements[9]*=h,Ut.elements[10]*=h,t.setFromRotationMatrix(Ut),n.x=r,n.y=s,n.z=o,this}makePerspective(e,t,n,i,r,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*r/(t-e),c=2*r/(n-i),l=(t+e)/(t-e),h=(n+i)/(n-i),u=-(s+r)/(s-r),f=-2*s*r/(s-r);return o[0]=a,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,s){const o=this.elements,a=1/(t-e),c=1/(n-i),l=1/(s-r),h=(t+e)*a,u=(n+i)*c,f=(s+r)*l;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t){t===void 0&&(t=0);for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ti=new T,Ut=new Re,Hh=new T(0,0,0),Vh=new T(1,1,1),Rn=new T,ys=new T,_t=new T;class xs{constructor(e=0,t=0,n=0,i=xs.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=Se.clamp,r=e.elements,s=r[0],o=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],f=r[6],d=r[10];t=t||this._order;switch(t){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ac.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ac,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return cc.setFromEuler(this),this.setFromQuaternion(cc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new T(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}xs.DefaultOrder="XYZ";xs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const ac=new Re,cc=new lt;class lc{constructor(){this.mask=1|0}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let Wh=0;const uc=new T,Si=new lt,cn=new Re,bs=new T,yr=new T,jh=new T,qh=new lt,hc=new T(1,0,0),dc=new T(0,1,0),fc=new T(0,0,1),Xh={type:"added"},Yh={type:"removed"};function xe(){Object.defineProperty(this,"id",{value:Wh++}),this.uuid=Se.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xe.DefaultUp.clone();const e=new T,t=new xs,n=new lt,i=new T(1,1,1);function r(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Re},normalMatrix:{value:new pt}}),this.matrix=new Re,this.matrixWorld=new Re,this.matrixAutoUpdate=xe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new lc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}xe.DefaultUp=new T(0,1,0);xe.DefaultMatrixAutoUpdate=!0;xe.prototype=Object.assign(Object.create(sn.prototype),{constructor:xe,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Si.setFromAxisAngle(e,t),this.quaternion.multiply(Si),this},rotateOnWorldAxis:function(e,t){return Si.setFromAxisAngle(e,t),this.quaternion.premultiply(Si),this},rotateX:function(e){return this.rotateOnAxis(hc,e)},rotateY:function(e){return this.rotateOnAxis(dc,e)},rotateZ:function(e){return this.rotateOnAxis(fc,e)},translateOnAxis:function(e,t){return uc.copy(e).applyQuaternion(this.quaternion),this.position.add(uc.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(hc,e)},translateY:function(e){return this.translateOnAxis(dc,e)},translateZ:function(e){return this.translateOnAxis(fc,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(cn.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?bs.copy(e):bs.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),yr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?cn.lookAt(yr,bs,this.up):cn.lookAt(bs,yr,this.up),this.quaternion.setFromRotationMatrix(cn),i&&(cn.extractRotation(i.matrixWorld),Si.setFromRotationMatrix(cn),this.quaternion.premultiply(Si.inverse()))},add:function(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Xh)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Yh)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),cn.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),cn.multiply(e.parent.matrixWorld)),e.applyMatrix4(cn),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n],s=r.getObjectByProperty(e,t);if(s!==void 0)return s}return},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new T),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new lt),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yr,e,jh),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new T),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yr,qh,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new T),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(e)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(e.shapes,h)}else r(e.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,c=this.material.length;a<c;a++)o.push(r(e.materials,this.material[a]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(t){const o=s(e.geometries),a=s(e.materials),c=s(e.textures),l=s(e.images),h=s(e.shapes);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h)}return n.object=i,n;function s(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}});const Eo=new T,Zh=new T,Jh=new pt;class ln{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new T(1,0,0),this.constant=t!==void 0?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Eo.subVectors(n,t).cross(Zh.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new T),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new T);const n=e.delta(Eo),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?void 0:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new T),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Jh.getNormalMatrix(e),i=this.coplanarPoint(Eo).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const zt=new T,un=new T,Ao=new T,hn=new T,Ei=new T,Ai=new T,pc=new T,Lo=new T,Ro=new T,Co=new T;class mt{constructor(e,t,n){this.a=e!==void 0?e:new T,this.b=t!==void 0?t:new T,this.c=n!==void 0?n:new T}static getNormal(e,t,n,i){i===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new T),i.subVectors(n,t),zt.subVectors(e,t),i.cross(zt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){zt.subVectors(i,t),un.subVectors(n,t),Ao.subVectors(e,t);const s=zt.dot(zt),o=zt.dot(un),a=zt.dot(Ao),c=un.dot(un),l=un.dot(Ao),h=s*c-o*o;if(r===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new T),h===0)return r.set(-2,-1,-1);const u=1/h,f=(c*a-o*l)*u,d=(s*l-o*a)*u;return r.set(1-f-d,d,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,hn),hn.x>=0&&hn.y>=0&&hn.x+hn.y<=1}static getUV(e,t,n,i,r,s,o,a){return this.getBarycoord(e,t,n,i,hn),a.set(0,0),a.addScaledVector(r,hn.x),a.addScaledVector(s,hn.y),a.addScaledVector(o,hn.z),a}static isFrontFacing(e,t,n,i){return zt.subVectors(n,t),un.subVectors(e,t),zt.cross(un).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return zt.subVectors(this.c,this.b),un.subVectors(this.a,this.b),zt.cross(un).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new T),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return mt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new ln),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return mt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return mt.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return mt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return mt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new T);const n=this.a,i=this.b,r=this.c;let s,o;Ei.subVectors(i,n),Ai.subVectors(r,n),Lo.subVectors(e,n);const a=Ei.dot(Lo),c=Ai.dot(Lo);if(a<=0&&c<=0)return t.copy(n);Ro.subVectors(e,i);const l=Ei.dot(Ro),h=Ai.dot(Ro);if(l>=0&&h<=l)return t.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return s=a/(a-l),t.copy(n).addScaledVector(Ei,s);Co.subVectors(e,r);const f=Ei.dot(Co),d=Ai.dot(Co);if(d>=0&&f<=d)return t.copy(r);const m=f*c-a*d;if(m<=0&&c>=0&&d<=0)return o=c/(c-d),t.copy(n).addScaledVector(Ai,o);const y=l*d-f*h;if(y<=0&&h-l>=0&&f-d>=0)return pc.subVectors(r,i),o=(h-l)/(h-l+(f-d)),t.copy(i).addScaledVector(pc,o);const v=1/(y+m+u);return s=m*v,o=u*v,t.copy(n).addScaledVector(Ei,s).addScaledVector(Ai,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const mc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={h:0,s:0,l:0},_s={h:0,s:0,l:0};function Po(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function Io(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Do(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}class de{constructor(e,t,n){return Object.defineProperty(this,"isColor",{value:!0}),t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Se.euclideanModulo(e,1),t=Se.clamp(t,0,1),n=Se.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Po(r,i,e+1/3),this.g=Po(r,i,e),this.b=Po(r,i,e-1/3)}return this}setStyle(e){function t(i){if(i===void 0)return;parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let i;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)){const o=parseFloat(i[1])/360,a=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return t(i[5]),this.setHSL(o,a,c)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){const i=n[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=mc[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t){t===void 0&&(t=2);const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Io(e.r),this.g=Io(e.g),this.b=Io(e.b),this}copyLinearToSRGB(e){return this.r=Do(e.r),this.g=Do(e.g),this.b=Do(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),s=Math.min(t,n,i);let o,a;const c=(s+r)/2;if(s===r)o=0,a=0;else{const l=r-s;a=c<=.5?l/(r+s):l/(2-r-s);switch(r){case t:o=(n-i)/l+(n<i?6:0);break;case n:o=(i-t)/l+2;break;case i:o=(t-n)/l+4;break}o/=6}return e.h=o,e.s=a,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(kt),kt.h+=e,kt.s+=t,kt.l+=n,this.setHSL(kt.h,kt.s,kt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(kt),e.getHSL(_s);const n=Se.lerp(kt.h,_s.h,t),i=Se.lerp(kt.s,_s.s,t),r=Se.lerp(kt.l,_s.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}de.NAMES=mc;de.prototype.r=1;de.prototype.g=1;de.prototype.b=1;class No{constructor(e,t,n,i,r,s){this.a=e,this.b=t,this.c=n,this.normal=i&&i.isVector3?i:new T,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new de,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=s!==void 0?s:0}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let Kh=0;function we(){Object.defineProperty(this,"id",{value:Kh++}),this.uuid=Se.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=ar,this.side=bn,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=za,this.blendDst=ka,this.blendEquation=fi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ho,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Uh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=xo,this.stencilZFail=xo,this.stencilZPass=xo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}we.prototype=Object.assign(Object.create(sn.prototype),{constructor:we,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e===void 0)return;for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Na;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}},toJSON:function(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ar&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==bn&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(t){const r=i(e.textures),s=i(e.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(we.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function wt(e){we.call(this),this.type="MeshBasicMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}wt.prototype=Object.create(we.prototype);wt.prototype.constructor=wt;wt.prototype.isMeshBasicMaterial=!0;wt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Ve=new T,ws=new $;function Te(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=ds,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Te.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Te.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new de),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new $),t[n++]=s.x,t[n++]=s.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new T),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new ze),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this},applyMatrix3:function(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ws.fromBufferAttribute(this,t),ws.applyMatrix3(e),this.setXY(t,ws.x,ws.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ve.fromBufferAttribute(this,t),Ve.applyMatrix3(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.applyMatrix4(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.applyNormalMatrix(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.transformDirection(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Oo(e,t,n){Te.call(this,new Int8Array(e),t,n)}Oo.prototype=Object.create(Te.prototype);Oo.prototype.constructor=Oo;function Bo(e,t,n){Te.call(this,new Uint8Array(e),t,n)}Bo.prototype=Object.create(Te.prototype);Bo.prototype.constructor=Bo;function Fo(e,t,n){Te.call(this,new Uint8ClampedArray(e),t,n)}Fo.prototype=Object.create(Te.prototype);Fo.prototype.constructor=Fo;function Go(e,t,n){Te.call(this,new Int16Array(e),t,n)}Go.prototype=Object.create(Te.prototype);Go.prototype.constructor=Go;function xr(e,t,n){Te.call(this,new Uint16Array(e),t,n)}xr.prototype=Object.create(Te.prototype);xr.prototype.constructor=xr;function Uo(e,t,n){Te.call(this,new Int32Array(e),t,n)}Uo.prototype=Object.create(Te.prototype);Uo.prototype.constructor=Uo;function br(e,t,n){Te.call(this,new Uint32Array(e),t,n)}br.prototype=Object.create(Te.prototype);br.prototype.constructor=br;function ve(e,t,n){Te.call(this,new Float32Array(e),t,n)}ve.prototype=Object.create(Te.prototype);ve.prototype.constructor=ve;function zo(e,t,n){Te.call(this,new Float64Array(e),t,n)}zo.prototype=Object.create(Te.prototype);zo.prototype.constructor=zo;class Qh{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let n,i,r;const s=e.faces;for(i=0;i<s.length;i++){const o=s[i];o.materialIndex!==r&&(r=o.materialIndex,n!==void 0&&(n.count=i*3-n.start,t.push(n)),n={start:i*3,materialIndex:r})}n!==void 0&&(n.count=i*3-n.start,t.push(n)),this.groups=t}fromGeometry(e){const t=e.faces,n=e.vertices,i=e.faceVertexUvs,r=i[0]&&i[0].length>0,s=i[1]&&i[1].length>0,o=e.morphTargets,a=o.length;let c;if(a>0){c=[];for(let v=0;v<a;v++)c[v]={name:o[v].name,data:[]};this.morphTargets.position=c}const l=e.morphNormals,h=l.length;let u;if(h>0){u=[];for(let v=0;v<h;v++)u[v]={name:l[v].name,data:[]};this.morphTargets.normal=u}const f=e.skinIndices,d=e.skinWeights,m=f.length===n.length,y=d.length===n.length;n.length>0&&t.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<t.length;v++){const g=t[v];this.vertices.push(n[g.a],n[g.b],n[g.c]);const p=g.vertexNormals;if(p.length===3)this.normals.push(p[0],p[1],p[2]);else{const E=g.normal;this.normals.push(E,E,E)}const _=g.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{const E=g.color;this.colors.push(E,E,E)}if(r===!0){const E=i[0][v];E!==void 0?this.uvs.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new $,new $,new $))}if(s===!0){const E=i[1][v];E!==void 0?this.uvs2.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new $,new $,new $))}for(let E=0;E<a;E++){const R=o[E].vertices;c[E].data.push(R[g.a],R[g.b],R[g.c])}for(let E=0;E<h;E++){const R=l[E].vertexNormals[v];u[E].data.push(R.a,R.b,R.c)}m&&this.skinIndices.push(f[g.a],f[g.b],f[g.c]),y&&this.skinWeights.push(d[g.a],d[g.b],d[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}function gc(e){if(e.length===0)return-Infinity;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let $h=1;const qt=new Re,ko=new xe,Li=new T,Mt=new Gt,_r=new Gt,tt=new T;function Ee(){Object.defineProperty(this,"id",{value:$h+=2}),this.uuid=Se.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}Ee.prototype=Object.assign(Object.create(sn.prototype),{constructor:Ee,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(gc(e)>65535?br:xr)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new pt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return qt.makeRotationX(e),this.applyMatrix4(qt),this},rotateY:function(e){return qt.makeRotationY(e),this.applyMatrix4(qt),this},rotateZ:function(e){return qt.makeRotationZ(e),this.applyMatrix4(qt),this},translate:function(e,t,n){return qt.makeTranslation(e,t,n),this.applyMatrix4(qt),this},scale:function(e,t,n){return qt.makeScale(e,t,n),this.applyMatrix4(qt),this},lookAt:function(e){return ko.lookAt(e),ko.updateMatrix(),this.applyMatrix4(ko.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Li).negate(),this.translate(Li.x,Li.y,Li.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const n=new ve(t.vertices.length*3,3),i=new ve(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const r=new ve(t.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&(t&&t.isGeometry&&this.fromGeometry(t));return this},setFromPoints:function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ve(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new Qh().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new Te(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new Te(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(e.colors.length*3);this.setAttribute("color",new Te(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new Te(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new Te(n,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const n in e.morphTargets){const i=[],r=e.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],c=new ve(a.data.length*3,3);c.name=a.name,i.push(c.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(e.skinIndices.length>0){const n=new ve(e.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new ve(e.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Gt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-Infinity,-Infinity,-Infinity),new T(Infinity,Infinity,Infinity));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Mt.setFromBufferAttribute(r),this.morphTargetsRelative?(tt.addVectors(this.boundingBox.min,Mt.min),this.boundingBox.expandByPoint(tt),tt.addVectors(this.boundingBox.max,Mt.max),this.boundingBox.expandByPoint(tt)):(this.boundingBox.expandByPoint(Mt.min),this.boundingBox.expandByPoint(Mt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new jt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,Infinity);return}if(e){const n=this.boundingSphere.center;if(Mt.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const o=t[r];_r.setFromBufferAttribute(o),this.morphTargetsRelative?(tt.addVectors(Mt.min,_r.min),Mt.expandByPoint(tt),tt.addVectors(Mt.max,_r.max),Mt.expandByPoint(tt)):(Mt.expandByPoint(_r.min),Mt.expandByPoint(_r.max))}Mt.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)tt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(tt));if(t)for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.morphTargetsRelative;for(let c=0,l=o.count;c<l;c++)tt.fromBufferAttribute(o,c),a&&(Li.fromBufferAttribute(e,c),tt.add(Li)),i=Math.max(i,n.distanceToSquared(tt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Te(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new T,r=new T,s=new T,o=new T,a=new T,c=new T,l=new T,h=new T;if(e)for(let u=0,f=e.count;u<f;u+=3){const d=e.getX(u+0),m=e.getX(u+1),y=e.getX(u+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,m),s.fromBufferAttribute(t,y),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,y),o.add(l),a.add(l),c.add(l),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(y,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),s.fromBufferAttribute(t,u+2),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),n.setXYZ(u+0,l.x,l.y,l.z),n.setXYZ(u+1,l.x,l.y,l.z),n.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const r=n[i],s=r.array,o=e.attributes[i],a=o.array,c=o.itemSize*t,l=Math.min(a.length,s.length-c);for(let h=0,u=c;h<l;h++,u++)s[u]=a[h]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)tt.fromBufferAttribute(e,t),tt.normalize(),e.setXYZ(t,tt.x,tt.y,tt.z)},toNonIndexed:function(){function e(o,a){const c=o.array,l=o.itemSize,h=o.normalized,u=new c.constructor(a.length*l);let f=0,d=0;for(let m=0,y=a.length;m<y;m++){f=a[m]*l;for(let v=0;v<l;v++)u[d++]=c[f++]}return new Te(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new Ee,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],c=e(a,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const a=[],c=r[o];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=e(u,n);a.push(f)}t.morphAttributes[o]=a}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const c=s[o];t.addGroup(c.start,c.count,c.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(e[c]=a[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const c=n[a],l=c.toJSON(e.data);c.name!==""&&(l.name=c.name),e.data.attributes[a]=l}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=f.toJSON(e.data);f.name!==""&&(d.name=f.name),l.push(d)}l.length>0&&(i[a]=l,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new Ee().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(t))}const r=e.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(t));this.morphAttributes[c]=l}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,l=s.length;c<l;c++){const h=s[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const vc=new Re,Yn=new vr,Ho=new jt,Cn=new T,Pn=new T,In=new T,Vo=new T,Wo=new T,jo=new T,Ms=new T,Ts=new T,Ss=new T,Ri=new $,Ci=new $,Pi=new $,wr=new T,Es=new T;function qe(e,t){xe.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new Ee,this.material=t!==void 0?t:new wt,this.updateMorphTargets()}qe.prototype=Object.assign(Object.create(xe.prototype),{constructor:qe,isMesh:!0,copy:function(e){return xe.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0)return;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ho.copy(n.boundingSphere),Ho.applyMatrix4(r),e.ray.intersectsSphere(Ho)===!1)return;if(vc.getInverse(r),Yn.copy(e.ray).applyMatrix4(vc),n.boundingBox!==null&&Yn.intersectsBox(n.boundingBox)===!1)return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(i))for(let m=0,y=f.length;m<y;m++){const v=f[m],g=i[v.materialIndex],p=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let E=p,R=_;E<R;E+=3){const w=o.getX(E),P=o.getX(E+1),X=o.getX(E+2);s=As(this,g,e,Yn,a,c,l,h,u,w,P,X),s&&(s.faceIndex=Math.floor(E/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const m=Math.max(0,d.start),y=Math.min(o.count,d.start+d.count);for(let v=m,g=y;v<g;v+=3){const p=o.getX(v),_=o.getX(v+1),E=o.getX(v+2);s=As(this,i,e,Yn,a,c,l,h,u,p,_,E),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let m=0,y=f.length;m<y;m++){const v=f[m],g=i[v.materialIndex],p=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let E=p,R=_;E<R;E+=3){const w=E,P=E+1,X=E+2;s=As(this,g,e,Yn,a,c,l,h,u,w,P,X),s&&(s.faceIndex=Math.floor(E/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const m=Math.max(0,d.start),y=Math.min(a.count,d.start+d.count);for(let v=m,g=y;v<g;v+=3){const p=v,_=v+1,E=v+2;s=As(this,i,e,Yn,a,c,l,h,u,p,_,E),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,c=n.faces;let l;const h=n.faceVertexUvs[0];h.length>0&&(l=h);for(let u=0,f=c.length;u<f;u++){const d=c[u],m=o?i[d.materialIndex]:i;if(m===void 0)continue;const y=a[d.a],v=a[d.b],g=a[d.c];if(s=yc(this,m,e,Yn,y,v,g,wr),s){if(l&&l[u]){const p=l[u];Ri.copy(p[0]),Ci.copy(p[1]),Pi.copy(p[2]),s.uv=mt.getUV(wr,y,v,g,Ri,Ci,Pi,new $)}s.face=d,s.faceIndex=u,t.push(s)}}}}});function yc(e,t,n,i,r,s,o,a){let c;if(t.side===nt?c=i.intersectTriangle(o,s,r,!0,a):c=i.intersectTriangle(r,s,o,t.side!==di,a),c===null)return null;Es.copy(a),Es.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Es);return l<n.near||l>n.far?null:{distance:l,point:Es.clone(),object:e}}function As(e,t,n,i,r,s,o,a,c,l,h,u){Cn.fromBufferAttribute(r,l),Pn.fromBufferAttribute(r,h),In.fromBufferAttribute(r,u);const f=e.morphTargetInfluences;if(t.morphTargets&&s&&f){Ms.set(0,0,0),Ts.set(0,0,0),Ss.set(0,0,0);for(let m=0,y=s.length;m<y;m++){const v=f[m],g=s[m];if(v===0)continue;Vo.fromBufferAttribute(g,l),Wo.fromBufferAttribute(g,h),jo.fromBufferAttribute(g,u),o?(Ms.addScaledVector(Vo,v),Ts.addScaledVector(Wo,v),Ss.addScaledVector(jo,v)):(Ms.addScaledVector(Vo.sub(Cn),v),Ts.addScaledVector(Wo.sub(Pn),v),Ss.addScaledVector(jo.sub(In),v))}Cn.add(Ms),Pn.add(Ts),In.add(Ss)}e.isSkinnedMesh&&(e.boneTransform(l,Cn),e.boneTransform(h,Pn),e.boneTransform(u,In));const d=yc(e,t,n,i,Cn,Pn,In,wr);if(d){a&&(Ri.fromBufferAttribute(a,l),Ci.fromBufferAttribute(a,h),Pi.fromBufferAttribute(a,u),d.uv=mt.getUV(wr,Cn,Pn,In,Ri,Ci,Pi,new $)),c&&(Ri.fromBufferAttribute(c,l),Ci.fromBufferAttribute(c,h),Pi.fromBufferAttribute(c,u),d.uv2=mt.getUV(wr,Cn,Pn,In,Ri,Ci,Pi,new $));const m=new No(l,h,u);mt.getNormal(Cn,Pn,In,m.normal),d.face=m}return d}let ed=0;const Xt=new Re,qo=new xe,Ls=new T;function Ge(){Object.defineProperty(this,"id",{value:ed+=2}),this.uuid=Se.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ge.prototype=Object.assign(Object.create(sn.prototype),{constructor:Ge,isGeometry:!0,applyMatrix4:function(e){const t=new pt().getNormalMatrix(e);for(let n=0,i=this.vertices.length;n<i;n++){const r=this.vertices[n];r.applyMatrix4(e)}for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(t).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Xt.makeRotationX(e),this.applyMatrix4(Xt),this},rotateY:function(e){return Xt.makeRotationY(e),this.applyMatrix4(Xt),this},rotateZ:function(e){return Xt.makeRotationZ(e),this.applyMatrix4(Xt),this},translate:function(e,t,n){return Xt.makeTranslation(e,t,n),this.applyMatrix4(Xt),this},scale:function(e,t,n){return Xt.makeScale(e,t,n),this.applyMatrix4(Xt),this},lookAt:function(e){return qo.lookAt(e),qo.updateMatrix(),this.applyMatrix4(qo.matrix),this},fromBufferGeometry:function(e){const t=this,n=e.index!==null?e.index:void 0,i=e.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,c=i.uv2;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)t.vertices.push(new T().fromBufferAttribute(r,u)),o!==void 0&&t.colors.push(new de().fromBufferAttribute(o,u));function l(u,f,d,m){const y=o===void 0?[]:[t.colors[u].clone(),t.colors[f].clone(),t.colors[d].clone()],v=s===void 0?[]:[new T().fromBufferAttribute(s,u),new T().fromBufferAttribute(s,f),new T().fromBufferAttribute(s,d)],g=new No(u,f,d,v,y,m);t.faces.push(g),a!==void 0&&t.faceVertexUvs[0].push([new $().fromBufferAttribute(a,u),new $().fromBufferAttribute(a,f),new $().fromBufferAttribute(a,d)]),c!==void 0&&t.faceVertexUvs[1].push([new $().fromBufferAttribute(c,u),new $().fromBufferAttribute(c,f),new $().fromBufferAttribute(c,d)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const f=h[u],d=f.start,m=f.count;for(let y=d,v=d+m;y<v;y+=3)n!==void 0?l(n.getX(y),n.getX(y+1),n.getX(y+2),f.materialIndex):l(y,y+1,y+2,f.materialIndex)}else if(n!==void 0)for(let u=0;u<n.count;u+=3)l(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ls).negate(),this.translate(Ls.x,Ls.y,Ls.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new Re;return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const e=new T,t=new T;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),t.subVectors(s,o),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);const t=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)t[n]=new T;if(e){const n=new T,i=new T;for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c];n.subVectors(l,c),i.subVectors(a,c),n.cross(i),t[o.a].add(n),t[o.b].add(n),t[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)t[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(t[r.a]),s[1].copy(t[r.b]),s[2].copy(t[r.c])):(s[0]=t[r.a].clone(),s[1]=t[r.b].clone(),s[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const n=this.faces[e],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const e=new Ge;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const r=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const c=new T,l={a:new T,b:new T,c:new T};r.push(c),s.push(l)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],c=i.vertexNormals[r];a.copy(o.normal),c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Gt),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new jt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let i;const r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,c=e.faces,l=this.colors,h=e.colors;n===void 0&&(n=0),t!==void 0&&(i=new pt().getNormalMatrix(t));for(let u=0,f=o.length;u<f;u++){const d=o[u],m=d.clone();t!==void 0&&m.applyMatrix4(t),s.push(m)}for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone());for(let u=0,f=c.length;u<f;u++){const d=c[u];let m,y;const v=d.vertexNormals,g=d.vertexColors,p=new No(d.a+r,d.b+r,d.c+r);p.normal.copy(d.normal),i!==void 0&&p.normal.applyMatrix3(i).normalize();for(let _=0,E=v.length;_<E;_++)m=v[_].clone(),i!==void 0&&m.applyMatrix3(i).normalize(),p.vertexNormals.push(m);p.color.copy(d.color);for(let _=0,E=g.length;_<E;_++)y=g[_],p.vertexColors.push(y.clone());p.materialIndex=d.materialIndex+n,a.push(p)}for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,y=d.length;m<y;m++){const v=d[m],g=[];for(let p=0,_=v.length;p<_;p++)g.push(v[p].clone());this.faceVertexUvs[u].push(g)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){const e={},t=[],n=[],i=4,r=Math.pow(10,i);for(let a=0,c=this.vertices.length;a<c;a++){const l=this.vertices[a],h=Math.round(l.x*r)+"_"+Math.round(l.y*r)+"_"+Math.round(l.z*r);e[h]===void 0?(e[h]=a,t.push(this.vertices[a]),n[a]=t.length-1):n[a]=n[e[h]]}const s=[];for(let a=0,c=this.faces.length;a<c;a++){const l=this.faces[a];l.a=n[l.a],l.b=n[l.b],l.c=n[l.c];const h=[l.a,l.b,l.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const c=s[a];this.faces.splice(c,1);for(let l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(c,1)}const o=this.vertices.length-t.length;return this.vertices=t,o},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const i=e[t];this.vertices.push(new T(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let a=0;a<t;a++)e[a]._id=a;function n(a,c){return a.materialIndex-c.materialIndex}e.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===t&&(s=[]),r&&r.length===t&&(o=[]);for(let a=0;a<t;a++){const c=e[a]._id;s&&s.push(i[c]),o&&o.push(r[c])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const d=this.parameters;for(const m in d)d[m]!==void 0&&(e[m]=d[m]);return e}const t=[];for(let d=0;d<this.vertices.length;d++){const m=this.vertices[d];t.push(m.x,m.y,m.z)}const n=[],i=[],r={},s=[],o={},a=[],c={};for(let d=0;d<this.faces.length;d++){const m=this.faces[d],y=!0,v=!1,g=this.faceVertexUvs[0][d]!==void 0,p=m.normal.length()>0,_=m.vertexNormals.length>0,E=m.color.r!==1||m.color.g!==1||m.color.b!==1,R=m.vertexColors.length>0;let w=0;if(w=l(w,0,0),w=l(w,1,y),w=l(w,2,v),w=l(w,3,g),w=l(w,4,p),w=l(w,5,_),w=l(w,6,E),w=l(w,7,R),n.push(w),n.push(m.a,m.b,m.c),n.push(m.materialIndex),g){const P=this.faceVertexUvs[0][d];n.push(f(P[0]),f(P[1]),f(P[2]))}if(p&&n.push(h(m.normal)),_){const P=m.vertexNormals;n.push(h(P[0]),h(P[1]),h(P[2]))}if(E&&n.push(u(m.color)),R){const P=m.vertexColors;n.push(u(P[0]),u(P[1]),u(P[2]))}}function l(d,m,y){return y?d|1<<m:d&~(1<<m)}function h(d){const m=d.x.toString()+d.y.toString()+d.z.toString();return r[m]!==void 0||(r[m]=i.length/3,i.push(d.x,d.y,d.z)),r[m]}function u(d){const m=d.r.toString()+d.g.toString()+d.b.toString();return o[m]!==void 0||(o[m]=s.length,s.push(d.getHex())),o[m]}function f(d){const m=d.x.toString()+d.y.toString();return c[m]!==void 0||(c[m]=a.length/2,a.push(d.x,d.y)),c[m]}return e.data={},e.data.vertices=t,e.data.normals=i,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e},clone:function(){return new Ge().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,f=t.length;u<f;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,f=n.length;u<f;u++)this.colors.push(n[u].clone());const i=e.faces;for(let u=0,f=i.length;u<f;u++)this.faces.push(i[u].clone());for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,y=d.length;m<y;m++){const v=d[m],g=[];for(let p=0,_=v.length;p<_;p++){const E=v[p];g.push(E.clone())}this.faceVertexUvs[u].push(g)}}const r=e.morphTargets;for(let u=0,f=r.length;u<f;u++){const d={};if(d.name=r[u].name,r[u].vertices!==void 0){d.vertices=[];for(let m=0,y=r[u].vertices.length;m<y;m++)d.vertices.push(r[u].vertices[m].clone())}if(r[u].normals!==void 0){d.normals=[];for(let m=0,y=r[u].normals.length;m<y;m++)d.normals.push(r[u].normals[m].clone())}this.morphTargets.push(d)}const s=e.morphNormals;for(let u=0,f=s.length;u<f;u++){const d={};if(s[u].vertexNormals!==void 0){d.vertexNormals=[];for(let m=0,y=s[u].vertexNormals.length;m<y;m++){const v=s[u].vertexNormals[m],g={};g.a=v.a.clone(),g.b=v.b.clone(),g.c=v.c.clone(),d.vertexNormals.push(g)}}if(s[u].faceNormals!==void 0){d.faceNormals=[];for(let m=0,y=s[u].faceNormals.length;m<y;m++)d.faceNormals.push(s[u].faceNormals[m].clone())}this.morphNormals.push(d)}const o=e.skinWeights;for(let u=0,f=o.length;u<f;u++)this.skinWeights.push(o[u].clone());const a=e.skinIndices;for(let u=0,f=a.length;u<f;u++)this.skinIndices.push(a[u].clone());const c=e.lineDistances;for(let u=0,f=c.length;u<f;u++)this.lineDistances.push(c[u]);const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class td extends Ge{constructor(e,t,n,i,r,s){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s},this.fromBufferGeometry(new Rs(e,t,n,i,r,s)),this.mergeVertices()}}class Rs extends Ee{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super();this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const o=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const a=[],c=[],l=[],h=[];let u=0,f=0;d("z","y","x",-1,-1,n,t,e,s,r,0),d("z","y","x",1,-1,n,t,-e,s,r,1),d("x","z","y",1,1,e,n,t,i,s,2),d("x","z","y",1,-1,e,n,-t,i,s,3),d("x","y","z",1,-1,e,t,n,i,r,4),d("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(a),this.setAttribute("position",new ve(c,3)),this.setAttribute("normal",new ve(l,3)),this.setAttribute("uv",new ve(h,2));function d(m,y,v,g,p,_,E,R,w,P,X){const B=_/w,oe=E/P,H=_/2,Y=E/2,W=R/2,z=w+1,G=P+1;let K=0,ie=0;const re=new T;for(let ue=0;ue<G;ue++){const ae=ue*oe-Y;for(let ge=0;ge<z;ge++){const Ce=ge*B-H;re[m]=Ce*g,re[y]=ae*p,re[v]=W,c.push(re.x,re.y,re.z),re[m]=0,re[y]=0,re[v]=R>0?1:-1,l.push(re.x,re.y,re.z),h.push(ge/w),h.push(1-ue/P),K+=1}}for(let ue=0;ue<P;ue++)for(let ae=0;ae<w;ae++){const ge=u+ae+z*ue,Ce=u+ae+z*(ue+1),Ae=u+(ae+1)+z*(ue+1),M=u+(ae+1)+z*ue;a.push(ge,Ce,M),a.push(Ce,Ae,M),ie+=6}o.addGroup(f,ie,X),f+=ie,u+=K}}}function Ii(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function at(e){const t={};for(let n=0;n<e.length;n++){const i=Ii(e[n]);for(const r in i)t[r]=i[r]}return t}const nd={clone:Ii,merge:at};var id=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,rd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function gt(e){we.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=id,this.fragmentShader=rd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}gt.prototype=Object.create(we.prototype);gt.prototype.constructor=gt;gt.prototype.isShaderMaterial=!0;gt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ii(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this};gt.prototype.toJSON=function(e){const t=we.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i],s=r.value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t};function dn(){xe.call(this),this.type="Camera",this.matrixWorldInverse=new Re,this.projectionMatrix=new Re,this.projectionMatrixInverse=new Re}dn.prototype=Object.assign(Object.create(xe.prototype),{constructor:dn,isCamera:!0,copy:function(e,t){return xe.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new T),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){xe.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){xe.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Ye(e,t,n,i){dn.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Ye.prototype=Object.assign(Object.create(dn.prototype),{constructor:Ye,isPerspectiveCamera:!0,copy:function(e,t){return dn.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=Se.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(Se.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Se.RAD2DEG*2*Math.atan(Math.tan(Se.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(Se.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,c=s.fullHeight;r+=s.offsetX*i/a,t-=s.offsetY*n/c,i*=s.width/a,n*=s.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Di=90,Ni=1;function Mr(e,t,n){if(xe.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Ye(Di,Ni,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new T(1,0,0)),this.add(i);const r=new Ye(Di,Ni,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new T(-1,0,0)),this.add(r);const s=new Ye(Di,Ni,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new T(0,1,0)),this.add(s);const o=new Ye(Di,Ni,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new T(0,-1,0)),this.add(o);const a=new Ye(Di,Ni,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new T(0,0,1)),this.add(a);const c=new Ye(Di,Ni,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new T(0,0,-1)),this.add(c),this.update=function(l,h){this.parent===null&&this.updateMatrixWorld();const u=l.xr.enabled,f=l.getRenderTarget();l.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,l.setRenderTarget(n,0),l.render(h,i),l.setRenderTarget(n,1),l.render(h,r),l.setRenderTarget(n,2),l.render(h,s),l.setRenderTarget(n,3),l.render(h,o),l.setRenderTarget(n,4),l.render(h,a),n.texture.generateMipmaps=d,l.setRenderTarget(n,5),l.render(h,c),l.setRenderTarget(f),l.xr.enabled=u},this.clear=function(l,h,u,f){const d=l.getRenderTarget();for(let m=0;m<6;m++)l.setRenderTarget(n,m),l.clear(h,u,f);l.setRenderTarget(d)}}Mr.prototype=Object.create(xe.prototype);Mr.prototype.constructor=Mr;function Oi(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),Ft.call(this,e,e,t),this.texture.isWebGLCubeRenderTargetTexture=!0}Oi.prototype=Object.create(Ft.prototype);Oi.prototype.constructor=Oi;Oi.prototype.isWebGLCubeRenderTarget=!0;Oi.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=Bt,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Rs(5,5,5),r=new gt({name:"CubemapFromEquirect",uniforms:Ii(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:nt,blending:or});r.uniforms.tEquirect.value=t;const s=new qe(i,r),o=t.minFilter;t.minFilter===wn&&(t.minFilter=Ke);const a=new Mr(1,10,this);return a.update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};function Bi(e,t,n,i,r,s,o,a,c,l,h,u){Ue.call(this,null,s,o,a,c,l,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=c!==void 0?c:et,this.minFilter=l!==void 0?l:et,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Bi.prototype=Object.create(Ue.prototype);Bi.prototype.constructor=Bi;Bi.prototype.isDataTexture=!0;const Fi=new jt,Cs=new T;class Ps{constructor(e,t,n,i,r,s){this.planes=[e!==void 0?e:new ln,t!==void 0?t:new ln,n!==void 0?n:new ln,i!==void 0?i:new ln,r!==void 0?r:new ln,s!==void 0?s:new ln]}set(e,t,n,i,r,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(s),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],s=n[2],o=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],f=n[9],d=n[10],m=n[11],y=n[12],v=n[13],g=n[14],p=n[15];return t[0].setComponents(o-i,h-a,m-u,p-y).normalize(),t[1].setComponents(o+i,h+a,m+u,p+y).normalize(),t[2].setComponents(o+r,h+c,m+f,p+v).normalize(),t[3].setComponents(o-r,h-c,m-f,p-v).normalize(),t[4].setComponents(o-s,h-l,m-d,p-g).normalize(),t[5].setComponents(o+s,h+l,m+d,p+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Fi)}intersectsSprite(e){return Fi.center.set(0,0,0),Fi.radius=.7071067811865476,Fi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Fi)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++){const s=t[r].distanceToPoint(n);if(s<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Cs.x=i.normal.x>0?e.max.x:e.min.x,Cs.y=i.normal.y>0?e.max.y:e.min.y,Cs.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Cs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}function xc(){let e=null,t=!1,n=null,i=null;function r(s,o){n(s,o),i=e.requestAnimationFrame(r)}return{start:function(){if(t===!0)return;if(n===null)return;i=e.requestAnimationFrame(r),t=!0},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(s){n=s},setContext:function(s){e=s}}}function sd(e,t){const n=t.isWebGL2,i=new WeakMap;function r(l,h){const u=l.array,f=l.usage,d=e.createBuffer();e.bindBuffer(h,d),e.bufferData(h,u,f),l.onUploadCallback();let m=5126;return u instanceof Float32Array?m=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?m=5123:u instanceof Int16Array?m=5122:u instanceof Uint32Array?m=5125:u instanceof Int32Array?m=5124:u instanceof Int8Array?m=5120:u instanceof Uint8Array&&(m=5121),{buffer:d,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function s(l,h,u){const f=h.array,d=h.updateRange;e.bindBuffer(u,l),d.count===-1?e.bufferSubData(u,0,f):(n?e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=i.get(l);h&&(e.deleteBuffer(h.buffer),i.delete(l))}function c(l,h){if(l.isGLBufferAttribute){var u=i.get(l);(!u||u.version<l.version)&&i.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const f=i.get(l);f===void 0?i.set(l,r(l,h)):f.version<l.version&&(s(f.buffer,l,h),f.version=l.version)}return{get:o,remove:a,update:c}}class od extends Ge{constructor(e,t,n,i){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new Tr(e,t,n,i)),this.mergeVertices()}}class Tr extends Ee{constructor(e,t,n,i){super();this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},e=e||1,t=t||1;const r=e/2,s=t/2,o=Math.floor(n)||1,a=Math.floor(i)||1,c=o+1,l=a+1,h=e/o,u=t/a,f=[],d=[],m=[],y=[];for(let v=0;v<l;v++){const g=v*u-s;for(let p=0;p<c;p++){const _=p*h-r;d.push(_,-g,0),m.push(0,0,1),y.push(p/o),y.push(1-v/a)}}for(let v=0;v<a;v++)for(let g=0;g<o;g++){const p=g+c*v,_=g+c*(v+1),E=g+1+c*(v+1),R=g+1+c*v;f.push(p,_,R),f.push(_,E,R)}this.setIndex(f),this.setAttribute("position",new ve(d,3)),this.setAttribute("normal",new ve(m,3)),this.setAttribute("uv",new ve(y,2))}}var ad=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,cd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ld=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,ud=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,hd=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,dd="vec3 transformed = vec3( position );",fd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,pd=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,md=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,vd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,yd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,xd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,bd=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,_d=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,wd=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Md=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Td=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Sd=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ed=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Ad=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ld=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Rd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Cd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Pd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Id=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Dd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Nd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Od=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Bd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Fd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Gd=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,Ud=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,zd=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,kd=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Hd=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Vd=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,Wd=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,jd=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,qd=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,Xd=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,Yd=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Zd=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Jd=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Kd=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Qd=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,$d=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ef=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,tf=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,nf=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,rf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,sf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,of=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,af=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,cf=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,lf=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,uf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,hf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,df=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,ff=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,pf=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,mf=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,gf=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,vf=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,yf=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,xf=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,bf=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,_f=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,wf=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Mf=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Tf=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sf=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ef=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Af=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Lf=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Rf=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Cf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Pf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,If=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Df=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Nf=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Of=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Bf=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ff=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Gf=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Uf=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,zf=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,kf=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Hf=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,Vf=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,Wf=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,jf=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,qf=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Xf=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Yf=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Zf=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Jf=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,Kf=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Qf=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$f=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ep=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,tp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,np=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ip=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,rp=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,sp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,op=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ap=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lp=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,up=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,hp=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dp=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pp=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,mp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gp=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vp=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yp=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xp=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bp=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_p=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,wp=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Mp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tp=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Sp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ep=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ap=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Lp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const De={alphamap_fragment:ad,alphamap_pars_fragment:cd,alphatest_fragment:ld,aomap_fragment:ud,aomap_pars_fragment:hd,begin_vertex:dd,beginnormal_vertex:fd,bsdfs:pd,bumpmap_pars_fragment:md,clipping_planes_fragment:gd,clipping_planes_pars_fragment:vd,clipping_planes_pars_vertex:yd,clipping_planes_vertex:xd,color_fragment:bd,color_pars_fragment:_d,color_pars_vertex:wd,color_vertex:Md,common:Td,cube_uv_reflection_fragment:Sd,defaultnormal_vertex:Ed,displacementmap_pars_vertex:Ad,displacementmap_vertex:Ld,emissivemap_fragment:Rd,emissivemap_pars_fragment:Cd,encodings_fragment:Pd,encodings_pars_fragment:Id,envmap_fragment:Dd,envmap_common_pars_fragment:Nd,envmap_pars_fragment:Od,envmap_pars_vertex:Bd,envmap_physical_pars_fragment:Xd,envmap_vertex:Fd,fog_vertex:Gd,fog_pars_vertex:Ud,fog_fragment:zd,fog_pars_fragment:kd,gradientmap_pars_fragment:Hd,lightmap_fragment:Vd,lightmap_pars_fragment:Wd,lights_lambert_vertex:jd,lights_pars_begin:qd,lights_toon_fragment:Yd,lights_toon_pars_fragment:Zd,lights_phong_fragment:Jd,lights_phong_pars_fragment:Kd,lights_physical_fragment:Qd,lights_physical_pars_fragment:$d,lights_fragment_begin:ef,lights_fragment_maps:tf,lights_fragment_end:nf,logdepthbuf_fragment:rf,logdepthbuf_pars_fragment:sf,logdepthbuf_pars_vertex:of,logdepthbuf_vertex:af,map_fragment:cf,map_pars_fragment:lf,map_particle_fragment:uf,map_particle_pars_fragment:hf,metalnessmap_fragment:df,metalnessmap_pars_fragment:ff,morphnormal_vertex:pf,morphtarget_pars_vertex:mf,morphtarget_vertex:gf,normal_fragment_begin:vf,normal_fragment_maps:yf,normalmap_pars_fragment:xf,clearcoat_normal_fragment_begin:bf,clearcoat_normal_fragment_maps:_f,clearcoat_pars_fragment:wf,packing:Mf,premultiplied_alpha_fragment:Tf,project_vertex:Sf,dithering_fragment:Ef,dithering_pars_fragment:Af,roughnessmap_fragment:Lf,roughnessmap_pars_fragment:Rf,shadowmap_pars_fragment:Cf,shadowmap_pars_vertex:Pf,shadowmap_vertex:If,shadowmask_pars_fragment:Df,skinbase_vertex:Nf,skinning_pars_vertex:Of,skinning_vertex:Bf,skinnormal_vertex:Ff,specularmap_fragment:Gf,specularmap_pars_fragment:Uf,tonemapping_fragment:zf,tonemapping_pars_fragment:kf,transmissionmap_fragment:Hf,transmissionmap_pars_fragment:Vf,uv_pars_fragment:Wf,uv_pars_vertex:jf,uv_vertex:qf,uv2_pars_fragment:Xf,uv2_pars_vertex:Yf,uv2_vertex:Zf,worldpos_vertex:Jf,background_frag:Kf,background_vert:Qf,cube_frag:$f,cube_vert:ep,depth_frag:tp,depth_vert:np,distanceRGBA_frag:ip,distanceRGBA_vert:rp,equirect_frag:sp,equirect_vert:op,linedashed_frag:ap,linedashed_vert:cp,meshbasic_frag:lp,meshbasic_vert:up,meshlambert_frag:hp,meshlambert_vert:dp,meshmatcap_frag:fp,meshmatcap_vert:pp,meshtoon_frag:mp,meshtoon_vert:gp,meshphong_frag:vp,meshphong_vert:yp,meshphysical_frag:xp,meshphysical_vert:bp,normal_frag:_p,normal_vert:wp,points_frag:Mp,points_vert:Tp,shadow_frag:Sp,shadow_vert:Ep,sprite_frag:Ap,sprite_vert:Lp},fe={common:{diffuse:{value:new de(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new pt},uv2Transform:{value:new pt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new de(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new de(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pt}},sprite:{diffuse:{value:new de(15658734)},opacity:{value:1},center:{value:new $(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pt}}},Yt={basic:{uniforms:at([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.fog]),vertexShader:De.meshbasic_vert,fragmentShader:De.meshbasic_frag},lambert:{uniforms:at([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.fog,fe.lights,{emissive:{value:new de(0)}}]),vertexShader:De.meshlambert_vert,fragmentShader:De.meshlambert_frag},phong:{uniforms:at([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,fe.lights,{emissive:{value:new de(0)},specular:{value:new de(1118481)},shininess:{value:30}}]),vertexShader:De.meshphong_vert,fragmentShader:De.meshphong_frag},standard:{uniforms:at([fe.common,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.roughnessmap,fe.metalnessmap,fe.fog,fe.lights,{emissive:{value:new de(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag},toon:{uniforms:at([fe.common,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.gradientmap,fe.fog,fe.lights,{emissive:{value:new de(0)}}]),vertexShader:De.meshtoon_vert,fragmentShader:De.meshtoon_frag},matcap:{uniforms:at([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,{matcap:{value:null}}]),vertexShader:De.meshmatcap_vert,fragmentShader:De.meshmatcap_frag},points:{uniforms:at([fe.points,fe.fog]),vertexShader:De.points_vert,fragmentShader:De.points_frag},dashed:{uniforms:at([fe.common,fe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:De.linedashed_vert,fragmentShader:De.linedashed_frag},depth:{uniforms:at([fe.common,fe.displacementmap]),vertexShader:De.depth_vert,fragmentShader:De.depth_frag},normal:{uniforms:at([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,{opacity:{value:1}}]),vertexShader:De.normal_vert,fragmentShader:De.normal_frag},sprite:{uniforms:at([fe.sprite,fe.fog]),vertexShader:De.sprite_vert,fragmentShader:De.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null}},vertexShader:De.background_vert,fragmentShader:De.background_frag},cube:{uniforms:at([fe.envmap,{opacity:{value:1}}]),vertexShader:De.cube_vert,fragmentShader:De.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:De.equirect_vert,fragmentShader:De.equirect_frag},distanceRGBA:{uniforms:at([fe.common,fe.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:De.distanceRGBA_vert,fragmentShader:De.distanceRGBA_frag},shadow:{uniforms:at([fe.lights,fe.fog,{color:{value:new de(0)},opacity:{value:1}}]),vertexShader:De.shadow_vert,fragmentShader:De.shadow_frag}};Yt.physical={uniforms:at([Yt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new de(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag};function Rp(e,t,n,i,r){const s=new de(0);let o=0,a,c,l=null,h=0,u=null;function f(m,y,v,g){let p=y.isScene===!0?y.background:null;p&&p.isTexture&&(p=t.get(p));const _=e.xr,E=_.getSession&&_.getSession();E&&E.environmentBlendMode==="additive"&&(p=null),p===null?d(s,o):p&&p.isColor&&(d(p,1),g=!0),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),p&&(p.isCubeTexture||p.isWebGLCubeRenderTarget||p.isWebGLCubeRenderTargetTexture||p.mapping===rs)?(c===void 0&&(c=new qe(new Rs(1,1,1),new gt({name:"BackgroundCubeMaterial",uniforms:Ii(Yt.cube.uniforms),vertexShader:Yt.cube.vertexShader,fragmentShader:Yt.cube.fragmentShader,side:nt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(R,w,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),p.isWebGLCubeRenderTarget&&(p=p.texture),c.material.uniforms.envMap.value=p,c.material.uniforms.flipEnvMap.value=p.isCubeTexture?-1:1,(l!==p||h!==p.version||u!==e.toneMapping)&&(c.material.needsUpdate=!0,l=p,h=p.version,u=e.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null)):p&&p.isTexture&&(a===void 0&&(a=new qe(new Tr(2,2),new gt({name:"BackgroundMaterial",uniforms:Ii(Yt.background.uniforms),vertexShader:Yt.background.vertexShader,fragmentShader:Yt.background.fragmentShader,side:bn,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),(l!==p||h!==p.version||u!==e.toneMapping)&&(a.material.needsUpdate=!0,l=p,h=p.version,u=e.toneMapping),m.unshift(a,a.geometry,a.material,0,0,null))}function d(m,y){n.buffers.color.setClear(m.r,m.g,m.b,y,r)}return{getClearColor:function(){return s},setClearColor:function(m,y){s.set(m),o=y!==void 0?y:1,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,d(s,o)},render:f}}function Cp(e,t,n,i){const r=e.getParameter(34921),s=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},c=y(null);let l=c;function h(W,z,G,K,ie){let re=!1;if(o){const ue=m(K,G,z);l!==ue&&(l=ue,f(l.object)),re=v(K,ie),re&&g(K,ie)}else{const ue=z.wireframe===!0;(l.geometry!==K.id||l.program!==G.id||l.wireframe!==ue)&&(l.geometry=K.id,l.program=G.id,l.wireframe=ue,re=!0)}W.isInstancedMesh===!0&&(re=!0),ie!==null&&n.update(ie,34963),re&&(P(W,z,G,K),ie!==null&&e.bindBuffer(34963,n.get(ie).buffer))}function u(){return i.isWebGL2?e.createVertexArray():s.createVertexArrayOES()}function f(W){return i.isWebGL2?e.bindVertexArray(W):s.bindVertexArrayOES(W)}function d(W){return i.isWebGL2?e.deleteVertexArray(W):s.deleteVertexArrayOES(W)}function m(W,z,G){const K=G.wireframe===!0;let ie=a[W.id];ie===void 0&&(ie={},a[W.id]=ie);let re=ie[z.id];re===void 0&&(re={},ie[z.id]=re);let ue=re[K];return ue===void 0&&(ue=y(u()),re[K]=ue),ue}function y(W){const z=[],G=[],K=[];for(let ie=0;ie<r;ie++)z[ie]=0,G[ie]=0,K[ie]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:G,attributeDivisors:K,object:W,attributes:{},index:null}}function v(W,z){const G=l.attributes,K=W.attributes;if(Object.keys(G).length!==Object.keys(K).length)return!0;for(const ie in K){const re=G[ie],ue=K[ie];if(re===void 0)return!0;if(re.attribute!==ue)return!0;if(re.data!==ue.data)return!0}return l.index!==z}function g(W,z){const G={},K=W.attributes;for(const ie in K){const re=K[ie],ue={};ue.attribute=re,re.data&&(ue.data=re.data),G[ie]=ue}l.attributes=G,l.index=z}function p(){const W=l.newAttributes;for(let z=0,G=W.length;z<G;z++)W[z]=0}function _(W){E(W,0)}function E(W,z){const G=l.newAttributes,K=l.enabledAttributes,ie=l.attributeDivisors;if(G[W]=1,K[W]===0&&(e.enableVertexAttribArray(W),K[W]=1),ie[W]!==z){const re=i.isWebGL2?e:t.get("ANGLE_instanced_arrays");re[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,z),ie[W]=z}}function R(){const W=l.newAttributes,z=l.enabledAttributes;for(let G=0,K=z.length;G<K;G++)z[G]!==W[G]&&(e.disableVertexAttribArray(G),z[G]=0)}function w(W,z,G,K,ie,re){i.isWebGL2===!0&&(G===5124||G===5125)?e.vertexAttribIPointer(W,z,G,ie,re):e.vertexAttribPointer(W,z,G,K,ie,re)}function P(W,z,G,K){if(i.isWebGL2===!1&&(W.isInstancedMesh||K.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;p();const ie=K.attributes,re=G.getAttributes(),ue=z.defaultAttributeValues;for(const ae in re){const ge=re[ae];if(ge>=0){const Ce=ie[ae];if(Ce!==void 0){const Ae=Ce.normalized,M=Ce.itemSize,x=n.get(Ce);if(x===void 0)continue;const I=x.buffer,A=x.type,D=x.bytesPerElement;if(Ce.isInterleavedBufferAttribute){const N=Ce.data,F=N.stride,C=Ce.offset;N&&N.isInstancedInterleavedBuffer?(E(ge,N.meshPerAttribute),K._maxInstanceCount===void 0&&(K._maxInstanceCount=N.meshPerAttribute*N.count)):_(ge),e.bindBuffer(34962,I),w(ge,M,A,Ae,F*D,C*D)}else Ce.isInstancedBufferAttribute?(E(ge,Ce.meshPerAttribute),K._maxInstanceCount===void 0&&(K._maxInstanceCount=Ce.meshPerAttribute*Ce.count)):_(ge),e.bindBuffer(34962,I),w(ge,M,A,Ae,0,0)}else if(ae==="instanceMatrix"){const Ae=n.get(W.instanceMatrix);if(Ae===void 0)continue;const M=Ae.buffer,x=Ae.type;E(ge+0,1),E(ge+1,1),E(ge+2,1),E(ge+3,1),e.bindBuffer(34962,M),e.vertexAttribPointer(ge+0,4,x,!1,64,0),e.vertexAttribPointer(ge+1,4,x,!1,64,16),e.vertexAttribPointer(ge+2,4,x,!1,64,32),e.vertexAttribPointer(ge+3,4,x,!1,64,48)}else if(ae==="instanceColor"){const Ae=n.get(W.instanceColor);if(Ae===void 0)continue;const M=Ae.buffer,x=Ae.type;E(ge,1),e.bindBuffer(34962,M),e.vertexAttribPointer(ge,3,x,!1,12,0)}else if(ue!==void 0){const Ae=ue[ae];if(Ae!==void 0)switch(Ae.length){case 2:e.vertexAttrib2fv(ge,Ae);break;case 3:e.vertexAttrib3fv(ge,Ae);break;case 4:e.vertexAttrib4fv(ge,Ae);break;default:e.vertexAttrib1fv(ge,Ae)}}}}R()}function X(){H();for(const W in a){const z=a[W];for(const G in z){const K=z[G];for(const ie in K)d(K[ie].object),delete K[ie];delete z[G]}delete a[W]}}function B(W){if(a[W.id]===void 0)return;const z=a[W.id];for(const G in z){const K=z[G];for(const ie in K)d(K[ie].object),delete K[ie];delete z[G]}delete a[W.id]}function oe(W){for(const z in a){const G=a[z];if(G[W.id]===void 0)continue;const K=G[W.id];for(const ie in K)d(K[ie].object),delete K[ie];delete G[W.id]}}function H(){if(Y(),l===c)return;l=c,f(l.object)}function Y(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:H,resetDefaultState:Y,dispose:X,releaseStatesOfGeometry:B,releaseStatesOfProgram:oe,initAttributes:p,enableAttribute:_,disableUnusedAttributes:R}}function Pp(e,t,n,i){const r=i.isWebGL2;let s;function o(l){s=l}function a(l,h){e.drawArrays(s,l,h),n.update(h,s,1)}function c(l,h,u){if(u===0)return;let f,d;if(r)f=e,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,l,h,u),n.update(h,s,u)}this.setMode=o,this.render=a,this.renderInstances=c}function Ip(e,t,n){let i;function r(){if(i!==void 0)return i;const w=t.get("EXT_texture_filter_anisotropic");return w!==null?i=e.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(w){if(w==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";w="mediump"}return w==="mediump"&&(e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0)?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&e instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=n.logarithmicDepthBuffer===!0,h=e.getParameter(34930),u=e.getParameter(35660),f=e.getParameter(3379),d=e.getParameter(34076),m=e.getParameter(34921),y=e.getParameter(36347),v=e.getParameter(36348),g=e.getParameter(36349),p=u>0,_=o||!!t.get("OES_texture_float"),E=p&&_,R=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:m,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:p,floatFragmentTextures:_,floatVertexTextures:E,maxSamples:R}}function Dp(e){const t=this;let n=null,i=0,r=!1,s=!1;const o=new ln,a=new pt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,d){const m=u.length!==0||f||i!==0||r;return r=f,n=h(u,d,0),i=u.length,m},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(u,f,d){const m=u.clippingPlanes,y=u.clipIntersection,v=u.clipShadows,g=e.get(u);if(!r||m===null||m.length===0||s&&!v)s?h(null):l();else{const p=s?0:i,_=p*4;let E=g.clippingState||null;c.value=E,E=h(m,f,_,d);for(let R=0;R!==_;++R)E[R]=n[R];g.clippingState=E,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=p}};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(u,f,d,m){const y=u!==null?u.length:0;let v=null;if(y!==0){if(v=c.value,m!==!0||v===null){const g=d+y*4,p=f.matrixWorldInverse;a.getNormalMatrix(p),(v===null||v.length<g)&&(v=new Float32Array(g));for(let _=0,E=d;_!==y;++_,E+=4)o.copy(u[_]).applyMatrix4(p,a),o.normal.toArray(v,E),v[E+3]=o.constant}c.value=v,c.needsUpdate=!0}return t.numPlanes=y,t.numIntersection=0,v}}function Np(e){let t=new WeakMap;function n(s,o){return o===lr?s.mapping=ns:o===po&&(s.mapping=is),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===lr||o===po)if(t.has(s)){const a=t.get(s).texture;return n(a,s.mapping)}else{const a=s.image;if(a&&a.height>0){const c=e.getRenderList(),l=e.getRenderTarget(),h=e.getRenderState(),u=new Oi(a.height/2);return u.fromEquirectangularTexture(e,s),t.set(s,u),e.setRenderTarget(l),e.setRenderList(c),e.setRenderState(h),n(u.texture,s.mapping)}else return null}}return s}function r(){t=new WeakMap}return{get:i,dispose:r}}function Op(e){const t={};return{has:function(n){if(t[n]!==void 0)return t[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]}}}function Bp(e,t,n,i){const r=new WeakMap,s=new WeakMap;function o(u){const f=u.target,d=r.get(f);d.index!==null&&t.remove(d.index);for(const y in d.attributes)t.remove(d.attributes[y]);f.removeEventListener("dispose",o),r.delete(f);const m=s.get(d);m&&(t.remove(m),s.delete(d)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function a(u,f){let d=r.get(f);return d||(f.addEventListener("dispose",o),f.isBufferGeometry?d=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new Ee().setFromObject(u)),d=f._bufferGeometry),r.set(f,d),n.memory.geometries++,d)}function c(u){const f=u.attributes;for(const m in f)t.update(f[m],34962);const d=u.morphAttributes;for(const m in d){const y=d[m];for(let v=0,g=y.length;v<g;v++)t.update(y[v],34962)}}function l(u){const f=[],d=u.index,m=u.attributes.position;let y=0;if(d!==null){const p=d.array;y=d.version;for(let _=0,E=p.length;_<E;_+=3){const R=p[_+0],w=p[_+1],P=p[_+2];f.push(R,w,w,P,P,R)}}else{const p=m.array;y=m.version;for(let _=0,E=p.length/3-1;_<E;_+=3){const R=_+0,w=_+1,P=_+2;f.push(R,w,w,P,P,R)}}const v=new(gc(f)>65535?br:xr)(f,1);v.version=y;const g=s.get(u);g&&t.remove(g),s.set(u,v)}function h(u){const f=s.get(u);if(f){const d=u.index;d!==null&&(f.version<d.version&&l(u))}else l(u);return s.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function Fp(e,t,n,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,d){e.drawElements(s,d,a,f*c),n.update(d,s,1)}function u(f,d,m){if(m===0)return;let y,v;if(r)y=e,v="drawElementsInstanced";else if(y=t.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[v](s,d,a,f*c,m),n.update(d,s,m)}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u}function Gp(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){n.calls++;switch(o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function Up(e,t){return e[0]-t[0]}function zp(e,t){return Math.abs(t[1])-Math.abs(e[1])}function kp(e){const t={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,c){const l=s.morphTargetInfluences,h=l===void 0?0:l.length;let u=t[o.id];if(u===void 0){u=[];for(let v=0;v<h;v++)u[v]=[v,0];t[o.id]=u}for(let v=0;v<h;v++){const g=u[v];g[0]=v,g[1]=l[v]}u.sort(zp);for(let v=0;v<8;v++)v<h&&u[v][1]?(i[v][0]=u[v][0],i[v][1]=u[v][1]):(i[v][0]=Number.MAX_SAFE_INTEGER,i[v][1]=0);i.sort(Up);const f=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let m=0;for(let v=0;v<8;v++){const g=i[v],p=g[0],_=g[1];p!==Number.MAX_SAFE_INTEGER&&_?(f&&o.getAttribute("morphTarget"+v)!==f[p]&&o.setAttribute("morphTarget"+v,f[p]),d&&o.getAttribute("morphNormal"+v)!==d[p]&&o.setAttribute("morphNormal"+v,d[p]),n[v]=_,m+=_):(f&&o.getAttribute("morphTarget"+v)!==void 0&&o.deleteAttribute("morphTarget"+v),d&&o.getAttribute("morphNormal"+v)!==void 0&&o.deleteAttribute("morphNormal"+v),n[v]=0)}const y=o.morphTargetsRelative?1:1-m;c.getUniforms().setValue(e,"morphTargetBaseInfluence",y),c.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:r}}function Hp(e,t,n,i){let r=new WeakMap;function s(a){const c=i.render.frame,l=a.geometry,h=t.get(a,l);return r.get(h)!==c&&(l.isGeometry&&h.updateFromObject(a),t.update(h),r.set(h,c)),a.isInstancedMesh&&(n.update(a.instanceMatrix,34962),a.instanceColor!==null&&n.update(a.instanceColor,34962)),h}function o(){r=new WeakMap}return{update:s,dispose:o}}function Dn(e,t,n,i,r,s,o,a,c,l){e=e!==void 0?e:[],t=t!==void 0?t:ns,o=o!==void 0?o:rn,Ue.call(this,e,t,n,i,r,s,o,a,c,l),this.flipY=!1}Dn.prototype=Object.create(Ue.prototype);Dn.prototype.constructor=Dn;Dn.prototype.isCubeTexture=!0;Object.defineProperty(Dn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function Sr(e,t,n,i){Ue.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=et,this.minFilter=et,this.wrapR=ot,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Sr.prototype=Object.create(Ue.prototype);Sr.prototype.constructor=Sr;Sr.prototype.isDataTexture2DArray=!0;function Er(e,t,n,i){Ue.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=et,this.minFilter=et,this.wrapR=ot,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Er.prototype=Object.create(Ue.prototype);Er.prototype.constructor=Er;Er.prototype.isDataTexture3D=!0;const bc=new Ue,Vp=new Sr,Wp=new Er,_c=new Dn,wc=[],Mc=[],Tc=new Float32Array(16),Sc=new Float32Array(9),Ec=new Float32Array(4);function Gi(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=wc[r];if(s===void 0&&(s=new Float32Array(r),wc[r]=s),t!==0){i.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=n,e[o].toArray(s,a)}return s}function Pt(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Tt(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Ac(e,t){let n=Mc[t];n===void 0&&(n=new Int32Array(t),Mc[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function jp(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1f(this.addr,t),n[0]=t}function qp(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Pt(n,t))return;e.uniform2fv(this.addr,t),Tt(n,t)}}function Xp(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Pt(n,t))return;e.uniform3fv(this.addr,t),Tt(n,t)}}function Yp(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Pt(n,t))return;e.uniform4fv(this.addr,t),Tt(n,t)}}function Zp(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Pt(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Tt(n,t)}else{if(Pt(n,i))return;Ec.set(i),e.uniformMatrix2fv(this.addr,!1,Ec),Tt(n,i)}}function Jp(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Pt(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Tt(n,t)}else{if(Pt(n,i))return;Sc.set(i),e.uniformMatrix3fv(this.addr,!1,Sc),Tt(n,i)}}function Kp(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Pt(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Tt(n,t)}else{if(Pt(n,i))return;Tc.set(i),e.uniformMatrix4fv(this.addr,!1,Tc),Tt(n,i)}}function Qp(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||bc,r)}function $p(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Vp,r)}function em(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||Wp,r)}function tm(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||_c,r)}function nm(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1i(this.addr,t),n[0]=t}function im(e,t){const n=this.cache;if(Pt(n,t))return;e.uniform2iv(this.addr,t),Tt(n,t)}function rm(e,t){const n=this.cache;if(Pt(n,t))return;e.uniform3iv(this.addr,t),Tt(n,t)}function sm(e,t){const n=this.cache;if(Pt(n,t))return;e.uniform4iv(this.addr,t),Tt(n,t)}function om(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1ui(this.addr,t),n[0]=t}function am(e){switch(e){case 5126:return jp;case 35664:return qp;case 35665:return Xp;case 35666:return Yp;case 35674:return Zp;case 35675:return Jp;case 35676:return Kp;case 5124:case 35670:return nm;case 35667:case 35671:return im;case 35668:case 35672:return rm;case 35669:case 35673:return sm;case 5125:return om;case 35678:case 36198:case 36298:case 36306:case 35682:return Qp;case 35679:case 36299:case 36307:return em;case 35680:case 36300:case 36308:case 36293:return tm;case 36289:case 36303:case 36311:case 36292:return $p}}function cm(e,t){e.uniform1fv(this.addr,t)}function lm(e,t){e.uniform1iv(this.addr,t)}function um(e,t){e.uniform2iv(this.addr,t)}function hm(e,t){e.uniform3iv(this.addr,t)}function dm(e,t){e.uniform4iv(this.addr,t)}function fm(e,t){const n=Gi(t,this.size,2);e.uniform2fv(this.addr,n)}function pm(e,t){const n=Gi(t,this.size,3);e.uniform3fv(this.addr,n)}function mm(e,t){const n=Gi(t,this.size,4);e.uniform4fv(this.addr,n)}function gm(e,t){const n=Gi(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function vm(e,t){const n=Gi(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function ym(e,t){const n=Gi(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function xm(e,t,n){const i=t.length,r=Ac(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(t[s]||bc,r[s])}function bm(e,t,n){const i=t.length,r=Ac(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(t[s]||_c,r[s])}function _m(e){switch(e){case 5126:return cm;case 35664:return fm;case 35665:return pm;case 35666:return mm;case 35674:return gm;case 35675:return vm;case 35676:return ym;case 5124:case 35670:return lm;case 35667:case 35671:return um;case 35668:case 35672:return hm;case 35669:case 35673:return dm;case 35678:case 36198:case 36298:case 36306:case 35682:return xm;case 35680:case 36300:case 36308:case 36293:return bm}}function wm(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=am(t.type)}function Lc(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=_m(t.type)}Lc.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Tt(t,e)};function Rc(e){this.id=e,this.seq=[],this.map={}}Rc.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(e,t[o.id],n)}};const Xo=/([\w\d_]+)(\])?(\[|\.)?/g;function Cc(e,t){e.seq.push(t),e.map[t.id]=t}function Mm(e,t,n){const i=e.name,r=i.length;for(Xo.lastIndex=0;;){const s=Xo.exec(i),o=Xo.lastIndex;let a=s[1];const c=s[2]==="]",l=s[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===r){Cc(n,l===void 0?new wm(a,e,t):new Lc(a,e,t));break}else{const h=n.map;let u=h[a];u===void 0&&(u=new Rc(a),Cc(n,u)),n=u}}}function Nn(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),s=e.getUniformLocation(t,r.name);Mm(r,s,this)}}Nn.prototype.setValue=function(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)};Nn.prototype.setOptional=function(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)};Nn.upload=function(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const o=t[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(e,a.value,i)}};Nn.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const s=e[i];s.id in t&&n.push(s)}return n};function Pc(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let Tm=0;function Sm(e){const t=e.split(`
`);for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function Ic(e){switch(e){case xi:return["Linear","( value )"];case Tn:return["sRGB","( value )"];case ec:return["RGBE","( value )"];case tc:return["RGBM","( value, 7.0 )"];case nc:return["RGBM","( value, 16.0 )"];case ic:return["RGBD","( value, 256.0 )"];case hs:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Oh:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Dc(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Sm(s)}function Ar(e,t){const n=Ic(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Em(e,t){const n=Ic(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Am(e,t){let n;switch(t){case Ou:n="Linear";break;case Bu:n="Reinhard";break;case Fu:n="OptimizedCineon";break;case Gu:n="ACESFilmic";break;case Uu:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Lm(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Lr).join(`
`)}function Rm(e){const t=[];for(const n in e){const i=e[n];if(i===!1)continue;t.push("#define "+n+" "+i)}return t.join(`
`)}function Cm(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const s=e.getActiveAttrib(t,r),o=s.name;n[o]=e.getAttribLocation(t,o)}return n}function Lr(e){return e!==""}function Nc(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Oc(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Pm=/^[ \t]*#include +<([\w\d./]+)>/gm;function Yo(e){return e.replace(Pm,Im)}function Im(e,t){const n=De[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return Yo(n)}const Dm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Nm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Fc(e){return e.replace(Nm,Bc).replace(Dm,Om)}function Om(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Bc(e,t,n,i)}function Bc(e,t,n,i){let r="";for(let s=parseInt(t);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Gc(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function Bm(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Da?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===fu?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===sr&&(t="SHADOWMAP_TYPE_VSM"),t}function Fm(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case ns:case is:t="ENVMAP_TYPE_CUBE";break;case rs:case ss:t="ENVMAP_TYPE_CUBE_UV";break}return t}function Gm(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case is:case ss:t="ENVMAP_MODE_REFRACTION";break}return t}function Um(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ts:t="ENVMAP_BLENDING_MULTIPLY";break;case Du:t="ENVMAP_BLENDING_MIX";break;case Nu:t="ENVMAP_BLENDING_ADD";break}return t}function zm(e,t,n,i){const r=e.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const c=Bm(n),l=Fm(n),h=Gm(n),u=Um(n),f=e.gammaFactor>0?e.gammaFactor:1,d=n.isWebGL2?"":Lm(n),m=Rm(s),y=r.createProgram();let v,g,p=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(v=[m].filter(Lr).join(`
`),v.length>0&&(v+=`
`),g=[d,m].filter(Lr).join(`
`),g.length>0&&(g+=`
`)):(v=[Gc(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Lr).join(`
`),g=[d,Gc(n),"#define SHADER_NAME "+n.shaderName,m,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==cr?"#define TONE_MAPPING":"",n.toneMapping!==cr?De.tonemapping_pars_fragment:"",n.toneMapping!==cr?Am("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",De.encodings_pars_fragment,n.map?Ar("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ar("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ar("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ar("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Ar("lightMapTexelToLinear",n.lightMapEncoding):"",Em("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Lr).join(`
`)),o=Yo(o),o=Nc(o,n),o=Oc(o,n),a=Yo(a),a=Nc(a,n),a=Oc(a,n),o=Fc(o),a=Fc(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(p=`#version 300 es
`,v=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,g=["#define varying in",n.glslVersion===rc?"":"out highp vec4 pc_fragColor;",n.glslVersion===rc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const _=p+v+o,E=p+g+a,R=Pc(r,35633,_),w=Pc(r,35632,E);if(r.attachShader(y,R),r.attachShader(y,w),n.index0AttributeName!==void 0?r.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y),e.debug.checkShaderErrors){const B=r.getProgramInfoLog(y).trim(),oe=r.getShaderInfoLog(R).trim(),H=r.getShaderInfoLog(w).trim();let Y=!0,W=!0;if(r.getProgramParameter(y,35714)===!1){Y=!1;const z=Dc(r,R,"vertex"),G=Dc(r,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(y,35715),"gl.getProgramInfoLog",B,z,G)}else B!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",B):(oe===""||H==="")&&(W=!1);W&&(this.diagnostics={runnable:Y,programLog:B,vertexShader:{log:oe,prefix:v},fragmentShader:{log:H,prefix:g}})}r.deleteShader(R),r.deleteShader(w);let P;this.getUniforms=function(){return P===void 0&&(P=new Nn(r,y)),P};let X;return this.getAttributes=function(){return X===void 0&&(X=Cm(r,y)),X},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=Tm++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=R,this.fragmentShader=w,this}function km(e,t,n,i,r,s){const o=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(w){const P=w.skeleton,X=P.bones;if(l)return 1024;{const B=h,oe=Math.floor((B-20)/4),H=Math.min(oe,X.length);return H<X.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+X.length+" bones. This GPU supports "+H+"."),0):H}}function v(w){let P;return w?w.isTexture?P=w.encoding:w.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),P=w.texture.encoding):P=xi,P}function g(w,P,X,B,oe){const H=B.fog,Y=w.isMeshStandardMaterial?B.environment:null,W=t.get(w.envMap||Y),z=d[w.type],G=oe.isSkinnedMesh?y(oe):0;w.precision!==null&&(f=i.getMaxPrecision(w.precision),f!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",f,"instead."));let K,ie;if(z){const ae=Yt[z];K=ae.vertexShader,ie=ae.fragmentShader}else K=w.vertexShader,ie=w.fragmentShader;const re=e.getRenderTarget(),ue={isWebGL2:a,shaderID:z,shaderName:w.type,vertexShader:K,fragmentShader:ie,defines:w.defines,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:f,instancing:oe.isInstancedMesh===!0,instancingColor:oe.isInstancedMesh===!0&&oe.instanceColor!==null,supportsVertexTextures:u,outputEncoding:re!==null?v(re.texture):e.outputEncoding,map:!!w.map,mapEncoding:v(w.map),matcap:!!w.matcap,matcapEncoding:v(w.matcap),envMap:!!W,envMapMode:W&&W.mapping,envMapEncoding:v(W),envMapCubeUV:!!W&&(W.mapping===rs||W.mapping===ss),lightMap:!!w.lightMap,lightMapEncoding:v(w.lightMap),aoMap:!!w.aoMap,emissiveMap:!!w.emissiveMap,emissiveMapEncoding:v(w.emissiveMap),bumpMap:!!w.bumpMap,normalMap:!!w.normalMap,objectSpaceNormalMap:w.normalMapType===Gh,tangentSpaceNormalMap:w.normalMapType===Sn,clearcoatMap:!!w.clearcoatMap,clearcoatRoughnessMap:!!w.clearcoatRoughnessMap,clearcoatNormalMap:!!w.clearcoatNormalMap,displacementMap:!!w.displacementMap,roughnessMap:!!w.roughnessMap,metalnessMap:!!w.metalnessMap,specularMap:!!w.specularMap,alphaMap:!!w.alphaMap,gradientMap:!!w.gradientMap,sheen:!!w.sheen,transmissionMap:!!w.transmissionMap,combine:w.combine,vertexTangents:w.normalMap&&w.vertexTangents,vertexColors:w.vertexColors,vertexUvs:!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatMap||!!w.clearcoatRoughnessMap||!!w.clearcoatNormalMap||!!w.displacementMap||!!w.transmissionMap,uvsVertexOnly:!(!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatNormalMap||!!w.transmissionMap)&&!!w.displacementMap,fog:!!H,useFog:w.fog,fogExp2:H&&H.isFogExp2,flatShading:w.flatShading,sizeAttenuation:w.sizeAttenuation,logarithmicDepthBuffer:c,skinning:w.skinning&&G>0,maxBones:G,useVertexTexture:l,morphTargets:w.morphTargets,morphNormals:w.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:P.directional.length,numPointLights:P.point.length,numSpotLights:P.spot.length,numRectAreaLights:P.rectArea.length,numHemiLights:P.hemi.length,numDirLightShadows:P.directionalShadowMap.length,numPointLightShadows:P.pointShadowMap.length,numSpotLightShadows:P.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:w.dithering,shadowMapEnabled:e.shadowMap.enabled&&X.length>0,shadowMapType:e.shadowMap.type,toneMapping:w.toneMapped?e.toneMapping:cr,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:w.premultipliedAlpha,alphaTest:w.alphaTest,doubleSided:w.side===di,flipSided:w.side===nt,depthPacking:w.depthPacking!==void 0?w.depthPacking:!1,index0AttributeName:w.index0AttributeName,extensionDerivatives:w.extensions&&w.extensions.derivatives,extensionFragDepth:w.extensions&&w.extensions.fragDepth,extensionDrawBuffers:w.extensions&&w.extensions.drawBuffers,extensionShaderTextureLOD:w.extensions&&w.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:w.customProgramCacheKey()};return ue}function p(w){const P=[];if(w.shaderID?P.push(w.shaderID):(P.push(w.fragmentShader),P.push(w.vertexShader)),w.defines!==void 0)for(const X in w.defines)P.push(X),P.push(w.defines[X]);if(w.isRawShaderMaterial===!1){for(let X=0;X<m.length;X++)P.push(w[m[X]]);P.push(e.outputEncoding),P.push(e.gammaFactor)}return P.push(w.customProgramCacheKey),P.join()}function _(w){const P=d[w.type];let X;if(P){const B=Yt[P];X=nd.clone(B.uniforms)}else X=w.uniforms;return X}function E(w,P){let X;for(let B=0,oe=o.length;B<oe;B++){const H=o[B];if(H.cacheKey===P){X=H,++X.usedTimes;break}}return X===void 0&&(X=new zm(e,P,w,r),o.push(X)),X}function R(w){if(--w.usedTimes===0){const P=o.indexOf(w);o[P]=o[o.length-1],o.pop(),w.destroy()}}return{getParameters:g,getProgramCacheKey:p,getUniforms:_,acquireProgram:E,releaseProgram:R,programs:o}}function Hm(){let e=new WeakMap;function t(s){let o=e.get(s);return o===void 0&&(o={},e.set(s,o)),o}function n(s){e.delete(s)}function i(s,o,a){e.get(s)[o]=a}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function Vm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Wm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Uc(e){const t=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(f,d,m,y,v,g){let p=t[n];const _=e.get(m);return p===void 0?(p={id:f.id,object:f,geometry:d,material:m,program:_.program||s,groupOrder:y,renderOrder:f.renderOrder,z:v,group:g},t[n]=p):(p.id=f.id,p.object=f,p.geometry=d,p.material=m,p.program=_.program||s,p.groupOrder=y,p.renderOrder=f.renderOrder,p.z=v,p.group=g),n++,p}function c(f,d,m,y,v,g){const p=a(f,d,m,y,v,g);(m.transparent===!0?r:i).push(p)}function l(f,d,m,y,v,g){const p=a(f,d,m,y,v,g);(m.transparent===!0?r:i).unshift(p)}function h(f,d){i.length>1&&i.sort(f||Vm),r.length>1&&r.sort(d||Wm)}function u(){for(let f=n,d=t.length;f<d;f++){const m=t[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.program=null,m.group=null}}return{opaque:i,transparent:r,init:o,push:c,unshift:l,finish:u,sort:h}}function jm(e){let t=new WeakMap;function n(r,s){const o=t.get(r);let a;return o===void 0?(a=new Uc(e),t.set(r,new WeakMap),t.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new Uc(e),o.set(s,a))),a}function i(){t=new WeakMap}return{get:n,dispose:i}}function qm(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new T,color:new de};break;case"SpotLight":n={position:new T,direction:new T,color:new de,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new T,color:new de,distance:0,decay:0};break;case"HemisphereLight":n={direction:new T,skyColor:new de,groundColor:new de};break;case"RectAreaLight":n={color:new de,position:new T,halfWidth:new T,halfHeight:new T};break}return e[t.id]=n,n}}}function Xm(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let Ym=0;function Zm(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Jm(){const e=new qm,t=Xm(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new T);const i=new T,r=new Re,s=new Re;function o(a,c,l){let h=0,u=0,f=0;for(let P=0;P<9;P++)n.probe[P].set(0,0,0);let d=0,m=0,y=0,v=0,g=0,p=0,_=0,E=0;const R=l.matrixWorldInverse;a.sort(Zm);for(let P=0,X=a.length;P<X;P++){const B=a[P],oe=B.color,H=B.intensity,Y=B.distance,W=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)h+=oe.r*H,u+=oe.g*H,f+=oe.b*H;else if(B.isLightProbe)for(let z=0;z<9;z++)n.probe[z].addScaledVector(B.sh.coefficients[z],H);else if(B.isDirectionalLight){const z=e.get(B);if(z.color.copy(B.color).multiplyScalar(B.intensity),z.direction.setFromMatrixPosition(B.matrixWorld),i.setFromMatrixPosition(B.target.matrixWorld),z.direction.sub(i),z.direction.transformDirection(R),B.castShadow){const G=B.shadow,K=t.get(B);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.directionalShadow[d]=K,n.directionalShadowMap[d]=W,n.directionalShadowMatrix[d]=B.shadow.matrix,p++}n.directional[d]=z,d++}else if(B.isSpotLight){const z=e.get(B);if(z.position.setFromMatrixPosition(B.matrixWorld),z.position.applyMatrix4(R),z.color.copy(oe).multiplyScalar(H),z.distance=Y,z.direction.setFromMatrixPosition(B.matrixWorld),i.setFromMatrixPosition(B.target.matrixWorld),z.direction.sub(i),z.direction.transformDirection(R),z.coneCos=Math.cos(B.angle),z.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),z.decay=B.decay,B.castShadow){const G=B.shadow,K=t.get(B);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.spotShadow[y]=K,n.spotShadowMap[y]=W,n.spotShadowMatrix[y]=B.shadow.matrix,E++}n.spot[y]=z,y++}else if(B.isRectAreaLight){const z=e.get(B);z.color.copy(oe).multiplyScalar(H),z.position.setFromMatrixPosition(B.matrixWorld),z.position.applyMatrix4(R),s.identity(),r.copy(B.matrixWorld),r.premultiply(R),s.extractRotation(r),z.halfWidth.set(B.width*.5,0,0),z.halfHeight.set(0,B.height*.5,0),z.halfWidth.applyMatrix4(s),z.halfHeight.applyMatrix4(s),n.rectArea[v]=z,v++}else if(B.isPointLight){const z=e.get(B);if(z.position.setFromMatrixPosition(B.matrixWorld),z.position.applyMatrix4(R),z.color.copy(B.color).multiplyScalar(B.intensity),z.distance=B.distance,z.decay=B.decay,B.castShadow){const G=B.shadow,K=t.get(B);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,K.shadowCameraNear=G.camera.near,K.shadowCameraFar=G.camera.far,n.pointShadow[m]=K,n.pointShadowMap[m]=W,n.pointShadowMatrix[m]=B.shadow.matrix,_++}n.point[m]=z,m++}else if(B.isHemisphereLight){const z=e.get(B);z.direction.setFromMatrixPosition(B.matrixWorld),z.direction.transformDirection(R),z.direction.normalize(),z.skyColor.copy(B.color).multiplyScalar(H),z.groundColor.copy(B.groundColor).multiplyScalar(H),n.hemi[g]=z,g++}}v>0&&(n.rectAreaLTC1=fe.LTC_1,n.rectAreaLTC2=fe.LTC_2),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const w=n.hash;(w.directionalLength!==d||w.pointLength!==m||w.spotLength!==y||w.rectAreaLength!==v||w.hemiLength!==g||w.numDirectionalShadows!==p||w.numPointShadows!==_||w.numSpotShadows!==E)&&(n.directional.length=d,n.spot.length=y,n.rectArea.length=v,n.point.length=m,n.hemi.length=g,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=_,n.pointShadowMap.length=_,n.spotShadow.length=E,n.spotShadowMap.length=E,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=_,n.spotShadowMatrix.length=E,w.directionalLength=d,w.pointLength=m,w.spotLength=y,w.rectAreaLength=v,w.hemiLength=g,w.numDirectionalShadows=p,w.numPointShadows=_,w.numSpotShadows=E,n.version=Ym++)}return{setup:o,state:n}}function zc(){const e=new Jm,t=[],n=[];function i(){t.length=0,n.length=0}function r(c){t.push(c)}function s(c){n.push(c)}function o(c){e.setup(t,n,c)}const a={lightsArray:t,shadowsArray:n,lights:e};return{init:i,state:a,setupLights:o,pushLight:r,pushShadow:s}}function Km(){let e=new WeakMap;function t(i,r){let s;return e.has(i)===!1?(s=new zc,e.set(i,new WeakMap),e.get(i).set(r,s)):e.get(i).has(r)===!1?(s=new zc,e.get(i).set(r,s)):s=e.get(i).get(r),s}function n(){e=new WeakMap}return{get:t,dispose:n}}function Zn(e){we.call(this),this.type="MeshDepthMaterial",this.depthPacking=Bh,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}Zn.prototype=Object.create(we.prototype);Zn.prototype.constructor=Zn;Zn.prototype.isMeshDepthMaterial=!0;Zn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function Jn(e){we.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}Jn.prototype=Object.create(we.prototype);Jn.prototype.constructor=Jn;Jn.prototype.isMeshDistanceMaterial=!0;Jn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var Qm=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,$m=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function kc(e,t,n){let i=new Ps;const r=new $,s=new $,o=new ze,a=[],c=[],l={},h={0:nt,1:bn,2:di},u=new gt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new $},radius:{value:4}},vertexShader:$m,fragmentShader:Qm}),f=u.clone();f.defines.HORIZONAL_PASS=1;const d=new Ee;d.setAttribute("position",new Te(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new qe(d,u),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Da,this.render=function(R,w,P){if(y.enabled===!1)return;if(y.autoUpdate===!1&&y.needsUpdate===!1)return;if(R.length===0)return;const X=e.getRenderTarget(),B=e.getActiveCubeFace(),oe=e.getActiveMipmapLevel(),H=e.state;H.setBlending(or),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);for(let Y=0,W=R.length;Y<W;Y++){const z=R[Y],G=z.shadow;if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;if(G===void 0){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}r.copy(G.mapSize);const K=G.getFrameExtents();if(r.multiply(K),s.copy(G.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/K.x),r.x=s.x*K.x,G.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/K.y),r.y=s.y*K.y,G.mapSize.y=s.y)),G.map===null&&!G.isPointLightShadow&&this.type===sr){const re={minFilter:Ke,magFilter:Ke,format:Bt};G.map=new Ft(r.x,r.y,re),G.map.texture.name=z.name+".shadowMap",G.mapPass=new Ft(r.x,r.y,re),G.camera.updateProjectionMatrix()}if(G.map===null){const re={minFilter:et,magFilter:et,format:Bt};G.map=new Ft(r.x,r.y,re),G.map.texture.name=z.name+".shadowMap",G.camera.updateProjectionMatrix()}e.setRenderTarget(G.map),e.clear();const ie=G.getViewportCount();for(let re=0;re<ie;re++){const ue=G.getViewport(re);o.set(s.x*ue.x,s.y*ue.y,s.x*ue.z,s.y*ue.w),H.viewport(o),G.updateMatrices(z,re),i=G.getFrustum(),E(w,P,G.camera,z,this.type)}!G.isPointLightShadow&&this.type===sr&&v(G,P),G.needsUpdate=!1}y.needsUpdate=!1,e.setRenderTarget(X,B,oe)};function v(R,w){const P=t.update(m);u.uniforms.shadow_pass.value=R.map.texture,u.uniforms.resolution.value=R.mapSize,u.uniforms.radius.value=R.radius,e.setRenderTarget(R.mapPass),e.clear(),e.renderBufferDirect(w,null,P,u,m,null),f.uniforms.shadow_pass.value=R.mapPass.texture,f.uniforms.resolution.value=R.mapSize,f.uniforms.radius.value=R.radius,e.setRenderTarget(R.map),e.clear(),e.renderBufferDirect(w,null,P,f,m,null)}function g(R,w,P){const X=R<<0|w<<1|P<<2;let B=a[X];return B===void 0&&(B=new Zn({depthPacking:Fh,morphTargets:R,skinning:w}),a[X]=B),B}function p(R,w,P){const X=R<<0|w<<1|P<<2;let B=c[X];return B===void 0&&(B=new Jn({morphTargets:R,skinning:w}),c[X]=B),B}function _(R,w,P,X,B,oe,H){let Y=null,W=g,z=R.customDepthMaterial;if(X.isPointLight===!0&&(W=p,z=R.customDistanceMaterial),z===void 0){let G=!1;P.morphTargets===!0&&(G=w.morphAttributes&&w.morphAttributes.position&&w.morphAttributes.position.length>0);let K=!1;R.isSkinnedMesh===!0&&(P.skinning===!0?K=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",R));const ie=R.isInstancedMesh===!0;Y=W(G,K,ie)}else Y=z;if(e.localClippingEnabled&&P.clipShadows===!0&&P.clippingPlanes.length!==0){const G=Y.uuid,K=P.uuid;let ie=l[G];ie===void 0&&(ie={},l[G]=ie);let re=ie[K];re===void 0&&(re=Y.clone(),ie[K]=re),Y=re}return Y.visible=P.visible,Y.wireframe=P.wireframe,H===sr?Y.side=P.shadowSide!==null?P.shadowSide:P.side:Y.side=P.shadowSide!==null?P.shadowSide:h[P.side],Y.clipShadows=P.clipShadows,Y.clippingPlanes=P.clippingPlanes,Y.clipIntersection=P.clipIntersection,Y.wireframeLinewidth=P.wireframeLinewidth,Y.linewidth=P.linewidth,X.isPointLight===!0&&Y.isMeshDistanceMaterial===!0&&(Y.referencePosition.setFromMatrixPosition(X.matrixWorld),Y.nearDistance=B,Y.farDistance=oe),Y}function E(R,w,P,X,B){if(R.visible===!1)return;const oe=R.layers.test(w.layers);if(oe&&(R.isMesh||R.isLine||R.isPoints)&&((R.castShadow||R.receiveShadow&&B===sr)&&(!R.frustumCulled||i.intersectsObject(R)))){R.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,R.matrixWorld);const Y=t.update(R),W=R.material;if(Array.isArray(W)){const z=Y.groups;for(let G=0,K=z.length;G<K;G++){const ie=z[G],re=W[ie.materialIndex];if(re&&re.visible){const ue=_(R,Y,re,X,P.near,P.far,B);e.renderBufferDirect(P,null,Y,ue,R,ie)}}}else if(W.visible){const z=_(R,Y,W,X,P.near,P.far,B);e.renderBufferDirect(P,null,Y,z,R,null)}}const H=R.children;for(let Y=0,W=H.length;Y<W;Y++)E(H[Y],w,P,X,B)}}function eg(e,t,n){const i=n.isWebGL2;function r(){let O=!1;const ne=new ze;let se=null;const ye=new ze(0,0,0,0);return{setMask:function(ce){se!==ce&&!O&&(e.colorMask(ce,ce,ce,ce),se=ce)},setLocked:function(ce){O=ce},setClear:function(ce,pe,me,Me,le){le===!0&&(ce*=Me,pe*=Me,me*=Me),ne.set(ce,pe,me,Me),ye.equals(ne)===!1&&(e.clearColor(ce,pe,me,Me),ye.copy(ne))},reset:function(){O=!1,se=null,ye.set(-1,0,0,0)}}}function s(){let O=!1,ne=null,se=null,ye=null;return{setTest:function(ce){ce?ae(2929):ge(2929)},setMask:function(ce){ne!==ce&&!O&&(e.depthMask(ce),ne=ce)},setFunc:function(ce){if(se!==ce){if(ce)switch(ce){case Eu:e.depthFunc(512);break;case Au:e.depthFunc(519);break;case Lu:e.depthFunc(513);break;case ho:e.depthFunc(515);break;case Ru:e.depthFunc(514);break;case Cu:e.depthFunc(518);break;case Pu:e.depthFunc(516);break;case Iu:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);se=ce}},setLocked:function(ce){O=ce},setClear:function(ce){ye!==ce&&(e.clearDepth(ce),ye=ce)},reset:function(){O=!1,ne=null,se=null,ye=null}}}function o(){let O=!1,ne=null,se=null,ye=null,ce=null,pe=null,me=null,Me=null,le=null;return{setTest:function(_e){O||(_e?ae(2960):ge(2960))},setMask:function(_e){ne!==_e&&!O&&(e.stencilMask(_e),ne=_e)},setFunc:function(_e,Fe,Qe){(se!==_e||ye!==Fe||ce!==Qe)&&(e.stencilFunc(_e,Fe,Qe),se=_e,ye=Fe,ce=Qe)},setOp:function(_e,Fe,Qe){(pe!==_e||me!==Fe||Me!==Qe)&&(e.stencilOp(_e,Fe,Qe),pe=_e,me=Fe,Me=Qe)},setLocked:function(_e){O=_e},setClear:function(_e){le!==_e&&(e.clearStencil(_e),le=_e)},reset:function(){O=!1,ne=null,se=null,ye=null,ce=null,pe=null,me=null,Me=null,le=null}}}const a=new r,c=new s,l=new o;let h={},u=null,f=null,d=null,m=null,y=null,v=null,g=null,p=null,_=null,E=!1,R=null,w=null,P=null,X=null,B=null;const oe=e.getParameter(35661);let H=!1,Y=0;const W=e.getParameter(7938);W.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL\ ([0-9])/.exec(W)[1]),H=Y>=1):W.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(W)[1]),H=Y>=2);let z=null,G={};const K=new ze,ie=new ze;function re(O,ne,se){const ye=new Uint8Array(4),ce=e.createTexture();e.bindTexture(O,ce),e.texParameteri(O,10241,9728),e.texParameteri(O,10240,9728);for(let pe=0;pe<se;pe++)e.texImage2D(ne+pe,0,6408,1,1,0,6408,5121,ye);return ce}const ue={};ue[3553]=re(3553,3553,1),ue[34067]=re(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),ae(2929),c.setFunc(ho),A(!1),D(Ia),ae(2884),x(or);function ae(O){h[O]!==!0&&(e.enable(O),h[O]=!0)}function ge(O){h[O]!==!1&&(e.disable(O),h[O]=!1)}function Ce(O){return u!==O?(e.useProgram(O),u=O,!0):!1}const Ae={[fi]:32774,[mu]:32778,[gu]:32779};if(i)Ae[Ga]=32775,Ae[Ua]=32776;else{const O=t.get("EXT_blend_minmax");O!==null&&(Ae[Ga]=O.MIN_EXT,Ae[Ua]=O.MAX_EXT)}const M={[vu]:0,[yu]:1,[xu]:768,[za]:770,[Su]:776,[Mu]:774,[_u]:772,[bu]:769,[ka]:771,[Tu]:775,[wu]:773};function x(O,ne,se,ye,ce,pe,me,Me){if(O===or){f&&(ge(3042),f=!1);return}if(f||(ae(3042),f=!0),O!==pu){if(O!==d||Me!==E){if((m!==fi||g!==fi)&&(e.blendEquation(32774),m=fi,g=fi),Me)switch(O){case ar:e.blendFuncSeparate(1,771,1,771);break;case Oa:e.blendFunc(1,1);break;case Ba:e.blendFuncSeparate(0,0,769,771);break;case Fa:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case ar:e.blendFuncSeparate(770,771,1,771);break;case Oa:e.blendFunc(770,1);break;case Ba:e.blendFunc(0,769);break;case Fa:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}y=null,v=null,p=null,_=null,d=O,E=Me}return}ce=ce||ne,pe=pe||se,me=me||ye,(ne!==m||ce!==g)&&(e.blendEquationSeparate(Ae[ne],Ae[ce]),m=ne,g=ce),(se!==y||ye!==v||pe!==p||me!==_)&&(e.blendFuncSeparate(M[se],M[ye],M[pe],M[me]),y=se,v=ye,p=pe,_=me),d=O,E=null}function I(O,ne){O.side===di?ge(2884):ae(2884);let se=O.side===nt;ne&&(se=!se),A(se),O.blending===ar&&O.transparent===!1?x(or):x(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha),c.setFunc(O.depthFunc),c.setTest(O.depthTest),c.setMask(O.depthWrite),a.setMask(O.colorWrite);const ye=O.stencilWrite;l.setTest(ye),ye&&(l.setMask(O.stencilWriteMask),l.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),l.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),F(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits)}function A(O){R!==O&&(O?e.frontFace(2304):e.frontFace(2305),R=O)}function D(O){O!==hu?(ae(2884),O!==w&&(O===Ia?e.cullFace(1029):O===du?e.cullFace(1028):e.cullFace(1032))):ge(2884),w=O}function N(O){O!==P&&(H&&e.lineWidth(O),P=O)}function F(O,ne,se){O?(ae(32823),(X!==ne||B!==se)&&(e.polygonOffset(ne,se),X=ne,B=se)):ge(32823)}function C(O){O?ae(3089):ge(3089)}function U(O){O===void 0&&(O=33984+oe-1),z!==O&&(e.activeTexture(O),z=O)}function k(O,ne){z===null&&U();let se=G[z];se===void 0&&(se={type:void 0,texture:void 0},G[z]=se),(se.type!==O||se.texture!==ne)&&(e.bindTexture(O,ne||ue[O]),se.type=O,se.texture=ne)}function j(){const O=G[z];O!==void 0&&O.type!==void 0&&(e.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function V(){try{e.compressedTexImage2D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ee(){try{e.texImage2D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function b(){try{e.texImage3D.apply(e,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function S(O){K.equals(O)===!1&&(e.scissor(O.x,O.y,O.z,O.w),K.copy(O))}function Q(O){ie.equals(O)===!1&&(e.viewport(O.x,O.y,O.z,O.w),ie.copy(O))}function J(){h={},z=null,G={},u=null,d=null,R=null,w=null,a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:ae,disable:ge,useProgram:Ce,setBlending:x,setMaterial:I,setFlipSided:A,setCullFace:D,setLineWidth:N,setPolygonOffset:F,setScissorTest:C,activeTexture:U,bindTexture:k,unbindTexture:j,compressedTexImage2D:V,texImage2D:ee,texImage3D:b,scissor:S,viewport:Q,reset:J}}function tg(e,t,n,i,r,s,o){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let d,m=!1;try{m=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(b){}function y(b,S){return m?new OffscreenCanvas(b,S):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(b,S,Q,J){let O=1;if((b.width>J||b.height>J)&&(O=J/Math.max(b.width,b.height)),O<1||S===!0)if(typeof HTMLImageElement!="undefined"&&b instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&b instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&b instanceof ImageBitmap){const ne=S?Se.floorPowerOfTwo:Math.floor,se=ne(O*b.width),ye=ne(O*b.height);d===void 0&&(d=y(se,ye));const ce=Q?y(se,ye):d;ce.width=se,ce.height=ye;const pe=ce.getContext("2d");return pe.drawImage(b,0,0,se,ye),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+b.width+"x"+b.height+") to ("+se+"x"+ye+")."),ce}else return"data"in b&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+b.width+"x"+b.height+")."),b;return b}function g(b){return Se.isPowerOfTwo(b.width)&&Se.isPowerOfTwo(b.height)}function p(b){return a?!1:b.wrapS!==ot||b.wrapT!==ot||b.minFilter!==et&&b.minFilter!==Ke}function _(b,S){return b.generateMipmaps&&S&&b.minFilter!==et&&b.minFilter!==Ke}function E(b,S,Q,J){e.generateMipmap(b);const O=i.get(S);O.__maxMipLevel=Math.log(Math.max(Q,J))*Math.LOG2E}function R(b,S,Q){if(a===!1)return S;if(b!==null){if(e[b]!==void 0)return e[b];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+b+"'")}let J=S;return S===6403&&(Q===5126&&(J=33326),Q===5131&&(J=33325),Q===5121&&(J=33321)),S===6407&&(Q===5126&&(J=34837),Q===5131&&(J=34843),Q===5121&&(J=32849)),S===6408&&(Q===5126&&(J=34836),Q===5131&&(J=34842),Q===5121&&(J=32856)),(J===33325||J===33326||J===34842||J===34836)&&t.get("EXT_color_buffer_float"),J}function w(b){return b===et||b===ur||b===hr?9728:9729}function P(b){const S=b.target;S.removeEventListener("dispose",P),B(S),S.isVideoTexture&&f.delete(S),o.memory.textures--}function X(b){const S=b.target;S.removeEventListener("dispose",X),oe(S),o.memory.textures--}function B(b){const S=i.get(b);if(S.__webglInit===void 0)return;e.deleteTexture(S.__webglTexture),i.remove(b)}function oe(b){const S=i.get(b),Q=i.get(b.texture);if(!b)return;if(Q.__webglTexture!==void 0&&e.deleteTexture(Q.__webglTexture),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let J=0;J<6;J++)e.deleteFramebuffer(S.__webglFramebuffer[J]),S.__webglDepthbuffer&&e.deleteRenderbuffer(S.__webglDepthbuffer[J]);else e.deleteFramebuffer(S.__webglFramebuffer),S.__webglDepthbuffer&&e.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&e.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer&&e.deleteRenderbuffer(S.__webglColorRenderbuffer),S.__webglDepthRenderbuffer&&e.deleteRenderbuffer(S.__webglDepthRenderbuffer);i.remove(b.texture),i.remove(b)}let H=0;function Y(){H=0}function W(){const b=H;return b>=c&&console.warn("THREE.WebGLTextures: Trying to use "+b+" texture units while this GPU supports only "+c),H+=1,b}function z(b,S){const Q=i.get(b);if(b.isVideoTexture&&U(b),b.version>0&&Q.__version!==b.version){const J=b.image;if(J===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(J.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(Q,b,S);return}}n.activeTexture(33984+S),n.bindTexture(3553,Q.__webglTexture)}function G(b,S){const Q=i.get(b);if(b.version>0&&Q.__version!==b.version){Ae(Q,b,S);return}n.activeTexture(33984+S),n.bindTexture(35866,Q.__webglTexture)}function K(b,S){const Q=i.get(b);if(b.version>0&&Q.__version!==b.version){Ae(Q,b,S);return}n.activeTexture(33984+S),n.bindTexture(32879,Q.__webglTexture)}function ie(b,S){if(b.image.length!==6)return;const Q=i.get(b);if(b.version>0&&Q.__version!==b.version){Ce(Q,b),n.activeTexture(33984+S),n.bindTexture(34067,Q.__webglTexture),e.pixelStorei(37440,b.flipY);const J=b&&(b.isCompressedTexture||b.image[0].isCompressedTexture),O=b.image[0]&&b.image[0].isDataTexture,ne=[];for(let le=0;le<6;le++)!J&&!O?ne[le]=v(b.image[le],!1,!0,l):ne[le]=O?b.image[le].image:b.image[le];const se=ne[0],ye=g(se)||a,ce=s.convert(b.format),pe=s.convert(b.type),me=R(b.internalFormat,ce,pe);ge(34067,b,ye);let Me;if(J){for(let le=0;le<6;le++){Me=ne[le].mipmaps;for(let _e=0;_e<Me.length;_e++){const Fe=Me[_e];b.format!==Bt&&b.format!==rn?ce!==null?n.compressedTexImage2D(34069+le,_e,me,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+le,_e,me,Fe.width,Fe.height,0,ce,pe,Fe.data)}}Q.__maxMipLevel=Me.length-1}else{Me=b.mipmaps;for(let le=0;le<6;le++)if(O){n.texImage2D(34069+le,0,me,ne[le].width,ne[le].height,0,ce,pe,ne[le].data);for(let _e=0;_e<Me.length;_e++){const Fe=Me[_e],Qe=Fe.image[le].image;n.texImage2D(34069+le,_e+1,me,Qe.width,Qe.height,0,ce,pe,Qe.data)}}else{n.texImage2D(34069+le,0,me,ce,pe,ne[le]);for(let _e=0;_e<Me.length;_e++){const Fe=Me[_e];n.texImage2D(34069+le,_e+1,me,ce,pe,Fe.image[le])}}Q.__maxMipLevel=Me.length}_(b,ye)&&E(34067,b,se.width,se.height),Q.__version=b.version,b.onUpdate&&b.onUpdate(b)}else n.activeTexture(33984+S),n.bindTexture(34067,Q.__webglTexture)}function re(b,S){n.activeTexture(33984+S),n.bindTexture(34067,i.get(b).__webglTexture)}const ue={[_n]:10497,[ot]:33071,[pi]:33648},ae={[et]:9728,[ur]:9984,[hr]:9986,[Ke]:9729,[os]:9985,[wn]:9987};function ge(b,S,Q){Q?(e.texParameteri(b,10242,ue[S.wrapS]),e.texParameteri(b,10243,ue[S.wrapT]),(b===32879||b===35866)&&e.texParameteri(b,32882,ue[S.wrapR]),e.texParameteri(b,10240,ae[S.magFilter]),e.texParameteri(b,10241,ae[S.minFilter])):(e.texParameteri(b,10242,33071),e.texParameteri(b,10243,33071),(b===32879||b===35866)&&e.texParameteri(b,32882,33071),(S.wrapS!==ot||S.wrapT!==ot)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(b,10240,w(S.magFilter)),e.texParameteri(b,10241,w(S.minFilter)),S.minFilter!==et&&S.minFilter!==Ke&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const J=t.get("EXT_texture_filter_anisotropic");if(J){if(S.type===Mn&&t.get("OES_texture_float_linear")===null)return;if(S.type===ls&&(a||t.get("OES_texture_half_float_linear"))===null)return;(S.anisotropy>1||i.get(S).__currentAnisotropy)&&(e.texParameterf(b,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,r.getMaxAnisotropy())),i.get(S).__currentAnisotropy=S.anisotropy)}}function Ce(b,S){b.__webglInit===void 0&&(b.__webglInit=!0,S.addEventListener("dispose",P),b.__webglTexture=e.createTexture(),o.memory.textures++)}function Ae(b,S,Q){let J=3553;S.isDataTexture2DArray&&(J=35866),S.isDataTexture3D&&(J=32879),Ce(b,S),n.activeTexture(33984+Q),n.bindTexture(J,b.__webglTexture),e.pixelStorei(37440,S.flipY),e.pixelStorei(37441,S.premultiplyAlpha),e.pixelStorei(3317,S.unpackAlignment);const O=p(S)&&g(S.image)===!1,ne=v(S.image,O,!1,h),se=g(ne)||a,ye=s.convert(S.format);let ce=s.convert(S.type),pe=R(S.internalFormat,ye,ce);ge(J,S,se);let me;const Me=S.mipmaps;if(S.isDepthTexture)pe=6402,a?S.type===Mn?pe=36012:S.type===cs?pe=33190:S.type===dr?pe=35056:pe=33189:S.type===Mn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===mi&&pe===6402&&(S.type!==as&&S.type!==cs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=as,ce=s.convert(S.type))),S.format===fr&&pe===6402&&(pe=34041,S.type!==dr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=dr,ce=s.convert(S.type))),n.texImage2D(3553,0,pe,ne.width,ne.height,0,ye,ce,null);else if(S.isDataTexture)if(Me.length>0&&se){for(let le=0,_e=Me.length;le<_e;le++)me=Me[le],n.texImage2D(3553,le,pe,me.width,me.height,0,ye,ce,me.data);S.generateMipmaps=!1,b.__maxMipLevel=Me.length-1}else n.texImage2D(3553,0,pe,ne.width,ne.height,0,ye,ce,ne.data),b.__maxMipLevel=0;else if(S.isCompressedTexture){for(let le=0,_e=Me.length;le<_e;le++)me=Me[le],S.format!==Bt&&S.format!==rn?ye!==null?n.compressedTexImage2D(3553,le,pe,me.width,me.height,0,me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,le,pe,me.width,me.height,0,ye,ce,me.data);b.__maxMipLevel=Me.length-1}else if(S.isDataTexture2DArray)n.texImage3D(35866,0,pe,ne.width,ne.height,ne.depth,0,ye,ce,ne.data),b.__maxMipLevel=0;else if(S.isDataTexture3D)n.texImage3D(32879,0,pe,ne.width,ne.height,ne.depth,0,ye,ce,ne.data),b.__maxMipLevel=0;else if(Me.length>0&&se){for(let le=0,_e=Me.length;le<_e;le++)me=Me[le],n.texImage2D(3553,le,pe,ye,ce,me);S.generateMipmaps=!1,b.__maxMipLevel=Me.length-1}else n.texImage2D(3553,0,pe,ye,ce,ne),b.__maxMipLevel=0;_(S,se)&&E(J,S,ne.width,ne.height),b.__version=S.version,S.onUpdate&&S.onUpdate(S)}function M(b,S,Q,J){const O=s.convert(S.texture.format),ne=s.convert(S.texture.type),se=R(S.texture.internalFormat,O,ne);n.texImage2D(J,0,se,S.width,S.height,0,O,ne,null),e.bindFramebuffer(36160,b),e.framebufferTexture2D(36160,Q,J,i.get(S.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function x(b,S,Q){if(e.bindRenderbuffer(36161,b),S.depthBuffer&&!S.stencilBuffer){let J=33189;if(Q){const O=S.depthTexture;O&&O.isDepthTexture&&(O.type===Mn?J=36012:O.type===cs&&(J=33190));const ne=C(S);e.renderbufferStorageMultisample(36161,ne,J,S.width,S.height)}else e.renderbufferStorage(36161,J,S.width,S.height);e.framebufferRenderbuffer(36160,36096,36161,b)}else if(S.depthBuffer&&S.stencilBuffer){if(Q){const J=C(S);e.renderbufferStorageMultisample(36161,J,35056,S.width,S.height)}else e.renderbufferStorage(36161,34041,S.width,S.height);e.framebufferRenderbuffer(36160,33306,36161,b)}else{const J=s.convert(S.texture.format),O=s.convert(S.texture.type),ne=R(S.texture.internalFormat,J,O);if(Q){const se=C(S);e.renderbufferStorageMultisample(36161,se,ne,S.width,S.height)}else e.renderbufferStorage(36161,ne,S.width,S.height)}e.bindRenderbuffer(36161,null)}function I(b,S){const Q=S&&S.isWebGLCubeRenderTarget;if(Q)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,b),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),z(S.depthTexture,0);const J=i.get(S.depthTexture).__webglTexture;if(S.depthTexture.format===mi)e.framebufferTexture2D(36160,36096,3553,J,0);else if(S.depthTexture.format===fr)e.framebufferTexture2D(36160,33306,3553,J,0);else throw new Error("Unknown depthTexture format")}function A(b){const S=i.get(b),Q=b.isWebGLCubeRenderTarget===!0;if(b.depthTexture){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");I(S.__webglFramebuffer,b)}else if(Q){S.__webglDepthbuffer=[];for(let J=0;J<6;J++)e.bindFramebuffer(36160,S.__webglFramebuffer[J]),S.__webglDepthbuffer[J]=e.createRenderbuffer(),x(S.__webglDepthbuffer[J],b,!1)}else e.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=e.createRenderbuffer(),x(S.__webglDepthbuffer,b,!1);e.bindFramebuffer(36160,null)}function D(b){const S=i.get(b),Q=i.get(b.texture);b.addEventListener("dispose",X),Q.__webglTexture=e.createTexture(),o.memory.textures++;const J=b.isWebGLCubeRenderTarget===!0,O=b.isWebGLMultisampleRenderTarget===!0,ne=g(b)||a;if(a&&b.texture.format===rn&&(b.texture.type===Mn||b.texture.type===ls)&&(b.texture.format=Bt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),J){S.__webglFramebuffer=[];for(let se=0;se<6;se++)S.__webglFramebuffer[se]=e.createFramebuffer()}else if(S.__webglFramebuffer=e.createFramebuffer(),O)if(a){S.__webglMultisampledFramebuffer=e.createFramebuffer(),S.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,S.__webglColorRenderbuffer);const se=s.convert(b.texture.format),ye=s.convert(b.texture.type),ce=R(b.texture.internalFormat,se,ye),pe=C(b);e.renderbufferStorageMultisample(36161,pe,ce,b.width,b.height),e.bindFramebuffer(36160,S.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,S.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),b.depthBuffer&&(S.__webglDepthRenderbuffer=e.createRenderbuffer(),x(S.__webglDepthRenderbuffer,b,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(J){n.bindTexture(34067,Q.__webglTexture),ge(34067,b.texture,ne);for(let se=0;se<6;se++)M(S.__webglFramebuffer[se],b,36064,34069+se);_(b.texture,ne)&&E(34067,b.texture,b.width,b.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Q.__webglTexture),ge(3553,b.texture,ne),M(S.__webglFramebuffer,b,36064,3553),_(b.texture,ne)&&E(3553,b.texture,b.width,b.height),n.bindTexture(3553,null);b.depthBuffer&&A(b)}function N(b){const S=b.texture,Q=g(b)||a;if(_(S,Q)){const J=b.isWebGLCubeRenderTarget?34067:3553,O=i.get(S).__webglTexture;n.bindTexture(J,O),E(J,S,b.width,b.height),n.bindTexture(J,null)}}function F(b){if(b.isWebGLMultisampleRenderTarget)if(a){const S=i.get(b);e.bindFramebuffer(36008,S.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,S.__webglFramebuffer);const Q=b.width,J=b.height;let O=16384;b.depthBuffer&&(O|=256),b.stencilBuffer&&(O|=1024),e.blitFramebuffer(0,0,Q,J,0,0,Q,J,O,9728),e.bindFramebuffer(36160,S.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function C(b){return a&&b.isWebGLMultisampleRenderTarget?Math.min(u,b.samples):0}function U(b){const S=o.render.frame;f.get(b)!==S&&(f.set(b,S),b.update())}let k=!1,j=!1;function V(b,S){b&&b.isWebGLRenderTarget&&(k===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),k=!0),b=b.texture),z(b,S)}function ee(b,S){b&&b.isWebGLCubeRenderTarget&&(j===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),j=!0),b=b.texture),b&&b.isCubeTexture||Array.isArray(b.image)&&b.image.length===6?ie(b,S):re(b,S)}this.allocateTextureUnit=W,this.resetTextureUnits=Y,this.setTexture2D=z,this.setTexture2DArray=G,this.setTexture3D=K,this.setTextureCube=ie,this.setTextureCubeDynamic=re,this.setupRenderTarget=D,this.updateRenderTargetMipmap=N,this.updateMultisampleRenderTarget=F,this.safeSetTexture2D=V,this.safeSetTextureCube=ee}function ng(e,t,n){const i=n.isWebGL2;function r(s){let o;if(s===mo)return 5121;if(s===Vu)return 32819;if(s===Wu)return 32820;if(s===ju)return 33635;if(s===zu)return 5120;if(s===ku)return 5122;if(s===as)return 5123;if(s===Hu)return 5124;if(s===cs)return 5125;if(s===Mn)return 5126;if(s===ls)return i?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===qu)return 6406;if(s===rn)return 6407;if(s===Bt)return 6408;if(s===Xu)return 6409;if(s===Yu)return 6410;if(s===mi)return 6402;if(s===fr)return 34041;if(s===Zu)return 6403;if(s===Ju)return 36244;if(s===Ku)return 33319;if(s===Qu)return 33320;if(s===$u)return 36248;if(s===eh)return 36249;if(s===Ha||s===Va||s===Wa||s===ja)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Ha)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Va)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Wa)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===ja)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===qa||s===Xa||s===Ya||s===Za)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===qa)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Xa)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Ya)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Za)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===th)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===Ja||s===Ka)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===Ja)return o.COMPRESSED_RGB8_ETC2;if(s===Ka)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===nh||s===ih||s===rh||s===sh||s===oh||s===ah||s===ch||s===lh||s===uh||s===hh||s===dh||s===fh||s===ph||s===mh||s===vh||s===yh||s===xh||s===bh||s===_h||s===wh||s===Mh||s===Th||s===Sh||s===Eh||s===Ah||s===Lh||s===Rh||s===Ch)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===gh)return o=t.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===dr)return i?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function Zo(e){Ye.call(this),this.cameras=e||[]}Zo.prototype=Object.assign(Object.create(Ye.prototype),{constructor:Zo,isArrayCamera:!0});function Ht(){xe.call(this),this.type="Group"}Ht.prototype=Object.assign(Object.create(xe.prototype),{constructor:Ht,isGroup:!0});function Rr(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Rr.prototype,{constructor:Rr,getHandSpace:function(){if(this._hand===null&&(this._hand=new Ht,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const t=new Ht;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new Ht,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new Ht,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(e,t,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,c=this._hand;if(e)if(c&&e.hand){s=!0;for(let l=0;l<=window.XRHand.LITTLE_PHALANX_TIP;l++)if(e.hand[l]){const h=t.getJointPose(e.hand[l],n),u=c.joints[l];h!==null&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=h!==null;const f=c.joints[window.XRHand.INDEX_PHALANX_TIP],d=c.joints[window.XRHand.THUMB_PHALANX_TIP],m=f.position.distanceTo(d.position),y=.02,v=.005;c.inputState.pinching&&m>y+v?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&m<=y-v&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),c!==null&&(c.visible=s!==null),this}});function Hc(e,t){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const c=[],l=new Map,h=new Ye;h.layers.enable(1),h.viewport=new ze;const u=new Ye;u.layers.enable(2),u.viewport=new ze;const f=[h,u],d=new Zo;d.layers.enable(1),d.layers.enable(2);let m=null,y=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let Y=c[H];return Y===void 0&&(Y=new Rr,c[H]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(H){let Y=c[H];return Y===void 0&&(Y=new Rr,c[H]=Y),Y.getGripSpace()},this.getHand=function(H){let Y=c[H];return Y===void 0&&(Y=new Rr,c[H]=Y),Y.getHandSpace()};function v(H){const Y=l.get(H.inputSource);Y&&Y.dispatchEvent({type:H.type})}function g(){l.forEach(function(H,Y){H.disconnect(Y)}),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),oe.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function p(H){s=H,oe.setContext(i),oe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(H){r=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){o=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(H){if(i=H,i!==null){i.addEventListener("select",v),i.addEventListener("selectstart",v),i.addEventListener("selectend",v),i.addEventListener("squeeze",v),i.addEventListener("squeezestart",v),i.addEventListener("squeezeend",v),i.addEventListener("end",g);const Y=t.getContextAttributes();Y.xrCompatible!==!0&&t.makeXRCompatible();const W={antialias:Y.antialias,alpha:Y.alpha,depth:Y.depth,stencil:Y.stencil,framebufferScaleFactor:r},z=new XRWebGLLayer(i,t,W);i.updateRenderState({baseLayer:z}),i.requestReferenceSpace(o).then(p),i.addEventListener("inputsourceschange",_)}};function _(H){const Y=i.inputSources;for(let W=0;W<c.length;W++)l.set(Y[W],c[W]);for(let W=0;W<H.removed.length;W++){const z=H.removed[W],G=l.get(z);G&&(G.dispatchEvent({type:"disconnected",data:z}),l.delete(z))}for(let W=0;W<H.added.length;W++){const z=H.added[W],G=l.get(z);G&&G.dispatchEvent({type:"connected",data:z})}}const E=new T,R=new T;function w(H,Y,W){E.setFromMatrixPosition(Y.matrixWorld),R.setFromMatrixPosition(W.matrixWorld);const z=E.distanceTo(R),G=Y.projectionMatrix.elements,K=W.projectionMatrix.elements,ie=G[14]/(G[10]-1),re=G[14]/(G[10]+1),ue=(G[9]+1)/G[5],ae=(G[9]-1)/G[5],ge=(G[8]-1)/G[0],Ce=(K[8]+1)/K[0],Ae=ie*ge,M=ie*Ce,x=z/(-ge+Ce),I=x*-ge;Y.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(I),H.translateZ(x),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.getInverse(H.matrixWorld);const A=ie+x,D=re+x,N=Ae-I,F=M+(z-I),C=ue*re/D*A,U=ae*re/D*A;H.projectionMatrix.makePerspective(N,F,C,U,A,D)}function P(H,Y){Y===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(Y.matrixWorld,H.matrix),H.matrixWorldInverse.getInverse(H.matrixWorld)}this.getCamera=function(H){d.near=u.near=h.near=H.near,d.far=u.far=h.far=H.far,(m!==d.near||y!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),m=d.near,y=d.far);const Y=H.parent,W=d.cameras;P(d,Y);for(let G=0;G<W.length;G++)P(W[G],Y);H.matrixWorld.copy(d.matrixWorld);const z=H.children;for(let G=0,K=z.length;G<K;G++)z[G].updateMatrixWorld(!0);return W.length===2?w(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let X=null;function B(H,Y){if(a=Y.getViewerPose(s),a!==null){const z=a.views,G=i.renderState.baseLayer;e.setFramebuffer(G.framebuffer);let K=!1;z.length!==d.cameras.length&&(d.cameras.length=0,K=!0);for(let ie=0;ie<z.length;ie++){const re=z[ie],ue=G.getViewport(re),ae=f[ie];ae.matrix.fromArray(re.transform.matrix),ae.projectionMatrix.fromArray(re.projectionMatrix),ae.viewport.set(ue.x,ue.y,ue.width,ue.height),ie===0&&d.matrix.copy(ae.matrix),K===!0&&d.cameras.push(ae)}}const W=i.inputSources;for(let z=0;z<c.length;z++){const G=c[z],K=W[z];G.update(K,Y,s)}X&&X(H,Y)}const oe=new xc;oe.setAnimationLoop(B),this.setAnimationLoop=function(H){X=H},this.dispose=function(){}}Object.assign(Hc.prototype,sn.prototype);function ig(e){function t(g,p){g.fogColor.value.copy(p.color),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function n(g,p,_,E){p.isMeshBasicMaterial?i(g,p):p.isMeshLambertMaterial?(i(g,p),c(g,p)):p.isMeshToonMaterial?(i(g,p),h(g,p)):p.isMeshPhongMaterial?(i(g,p),l(g,p)):p.isMeshStandardMaterial?(i(g,p),p.isMeshPhysicalMaterial?f(g,p):u(g,p)):p.isMeshMatcapMaterial?(i(g,p),d(g,p)):p.isMeshDepthMaterial?(i(g,p),m(g,p)):p.isMeshDistanceMaterial?(i(g,p),y(g,p)):p.isMeshNormalMaterial?(i(g,p),v(g,p)):p.isLineBasicMaterial?(r(g,p),p.isLineDashedMaterial&&s(g,p)):p.isPointsMaterial?o(g,p,_,E):p.isSpriteMaterial?a(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function i(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.specularMap&&(g.specularMap.value=p.specularMap);const _=e.get(p).envMap;if(_){g.envMap.value=_,g.flipEnvMap.value=_.isCubeTexture?-1:1,g.reflectivity.value=p.reflectivity,g.refractionRatio.value=p.refractionRatio;const w=e.get(_).__maxMipLevel;w!==void 0&&(g.maxMipLevel.value=w)}p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity);let E;p.map?E=p.map:p.specularMap?E=p.specularMap:p.displacementMap?E=p.displacementMap:p.normalMap?E=p.normalMap:p.bumpMap?E=p.bumpMap:p.roughnessMap?E=p.roughnessMap:p.metalnessMap?E=p.metalnessMap:p.alphaMap?E=p.alphaMap:p.emissiveMap?E=p.emissiveMap:p.clearcoatMap?E=p.clearcoatMap:p.clearcoatNormalMap?E=p.clearcoatNormalMap:p.clearcoatRoughnessMap&&(E=p.clearcoatRoughnessMap),E!==void 0&&(E.isWebGLRenderTarget&&(E=E.texture),E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uvTransform.value.copy(E.matrix));let R;p.aoMap?R=p.aoMap:p.lightMap&&(R=p.lightMap),R!==void 0&&(R.isWebGLRenderTarget&&(R=R.texture),R.matrixAutoUpdate===!0&&R.updateMatrix(),g.uv2Transform.value.copy(R.matrix))}function r(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity}function s(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function o(g,p,_,E){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*_,g.scale.value=E*.5,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap);let R;p.map?R=p.map:p.alphaMap&&(R=p.alphaMap),R!==void 0&&(R.matrixAutoUpdate===!0&&R.updateMatrix(),g.uvTransform.value.copy(R.matrix))}function a(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix))}function c(g,p){p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap)}function l(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===nt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===nt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function h(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===nt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===nt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function u(g,p){g.roughness.value=p.roughness,g.metalness.value=p.metalness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===nt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===nt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias);const _=e.get(p).envMap;_&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p){u(g,p),g.reflectivity.value=p.reflectivity,g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.sheen&&g.sheen.value.copy(p.sheen),p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),g.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===nt&&g.clearcoatNormalScale.value.negate()),g.transmission.value=p.transmission,p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap)}function d(g,p){p.matcap&&(g.matcap.value=p.matcap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===nt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===nt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function m(g,p){p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function y(g,p){p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),g.referencePosition.value.copy(p.referencePosition),g.nearDistance.value=p.nearDistance,g.farDistance.value=p.farDistance}function v(g,p){p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===nt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===nt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Ui(e){e=e||{};const t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,s=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,a=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,c=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,l=e.powerPreference!==void 0?e.powerPreference:"default",h=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1;let u=null,f=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=xi,this.physicallyCorrectLights=!1,this.toneMapping=cr,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const d=this;let m=!1,y=null,v=0,g=0,p=null,_=null,E=-1,R=null,w=null;const P=new ze,X=new ze;let B=null,oe=t.width,H=t.height,Y=1,W=null,z=null;const G=new ze(0,0,oe,H),K=new ze(0,0,oe,H);let ie=!1;const re=new Ps;let ue=!1,ae=!1;const ge=new Re,Ce=new T,Ae={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function M(){return p===null?Y:1}let x=n;function I(L,Z){for(let q=0;q<L.length;q++){const te=L[q],he=t.getContext(te,Z);if(he!==null)return he}return null}try{const L={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Fe,!1),t.addEventListener("webglcontextrestored",Qe,!1),x===null){const Z=["webgl2","webgl","experimental-webgl"];if(d.isWebGL1Renderer===!0&&Z.shift(),x=I(Z,L),x===null)throw I(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}x.getShaderPrecisionFormat===void 0&&(x.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let A,D,N,F,C,U,k,j,V,ee,b,S,Q,J,O,ne,se,ye,ce,pe,me;function Me(){A=new Op(x),D=new Ip(x,A,e),D.isWebGL2===!1&&(A.get("WEBGL_depth_texture"),A.get("OES_texture_float"),A.get("OES_texture_half_float"),A.get("OES_texture_half_float_linear"),A.get("OES_standard_derivatives"),A.get("OES_element_index_uint"),A.get("OES_vertex_array_object"),A.get("ANGLE_instanced_arrays")),A.get("OES_texture_float_linear"),pe=new ng(x,A,D),N=new eg(x,A,D),N.scissor(X.copy(K).multiplyScalar(Y).floor()),N.viewport(P.copy(G).multiplyScalar(Y).floor()),F=new Gp(x),C=new Hm,U=new tg(x,A,N,C,D,pe,F),k=new Np(d),j=new sd(x,D),me=new Cp(x,A,j,D),V=new Bp(x,j,F,me),ee=new Hp(x,V,j,F),se=new kp(x),O=new Dp(C),b=new km(d,k,A,D,me,O),S=new ig(C),Q=new jm(C),J=new Km,ne=new Rp(d,k,N,ee,a),ye=new Pp(x,A,F,D),ce=new Fp(x,A,F,D),F.programs=b.programs,d.capabilities=D,d.extensions=A,d.properties=C,d.renderLists=Q,d.state=N,d.info=F}Me();const le=new Hc(d,x);this.xr=le;const _e=new kc(d,ee,D.maxTextureSize);this.shadowMap=_e,this.getContext=function(){return x},this.getContextAttributes=function(){return x.getContextAttributes()},this.forceContextLoss=function(){const L=A.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=A.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(L){if(L===void 0)return;Y=L,this.setSize(oe,H,!1)},this.getSize=function(L){return L===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),L=new $),L.set(oe,H)},this.setSize=function(L,Z,q){if(le.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}oe=L,H=Z,t.width=Math.floor(L*Y),t.height=Math.floor(Z*Y),q!==!1&&(t.style.width=L+"px",t.style.height=Z+"px"),this.setViewport(0,0,L,Z)},this.getDrawingBufferSize=function(L){return L===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),L=new $),L.set(oe*Y,H*Y).floor()},this.setDrawingBufferSize=function(L,Z,q){oe=L,H=Z,Y=q,t.width=Math.floor(L*q),t.height=Math.floor(Z*q),this.setViewport(0,0,L,Z)},this.getCurrentViewport=function(L){return L===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),L=new ze),L.copy(P)},this.getViewport=function(L){return L.copy(G)},this.setViewport=function(L,Z,q,te){L.isVector4?G.set(L.x,L.y,L.z,L.w):G.set(L,Z,q,te),N.viewport(P.copy(G).multiplyScalar(Y).floor())},this.getScissor=function(L){return L.copy(K)},this.setScissor=function(L,Z,q,te){L.isVector4?K.set(L.x,L.y,L.z,L.w):K.set(L,Z,q,te),N.scissor(X.copy(K).multiplyScalar(Y).floor())},this.getScissorTest=function(){return ie},this.setScissorTest=function(L){N.setScissorTest(ie=L)},this.setOpaqueSort=function(L){W=L},this.setTransparentSort=function(L){z=L},this.getClearColor=function(){return ne.getClearColor()},this.setClearColor=function(){ne.setClearColor.apply(ne,arguments)},this.getClearAlpha=function(){return ne.getClearAlpha()},this.setClearAlpha=function(){ne.setClearAlpha.apply(ne,arguments)},this.clear=function(L,Z,q){let te=0;(L===void 0||L)&&(te|=16384),(Z===void 0||Z)&&(te|=256),(q===void 0||q)&&(te|=1024),x.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Fe,!1),t.removeEventListener("webglcontextrestored",Qe,!1),Q.dispose(),J.dispose(),C.dispose(),k.dispose(),ee.dispose(),me.dispose(),le.dispose(),Nt.stop()};function Fe(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Qe(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,Me()}function ci(L){const Z=L.target;Z.removeEventListener("dispose",ci),li(Z)}function li(L){$r(L),C.remove(L)}function $r(L){const Z=C.get(L).program;Z!==void 0&&b.releaseProgram(Z)}function co(L,Z){L.render(function(q){d.renderBufferImmediate(q,Z)})}this.renderBufferImmediate=function(L,Z){me.initAttributes();const q=C.get(L);L.hasPositions&&!q.position&&(q.position=x.createBuffer()),L.hasNormals&&!q.normal&&(q.normal=x.createBuffer()),L.hasUvs&&!q.uv&&(q.uv=x.createBuffer()),L.hasColors&&!q.color&&(q.color=x.createBuffer());const te=Z.getAttributes();L.hasPositions&&(x.bindBuffer(34962,q.position),x.bufferData(34962,L.positionArray,35048),me.enableAttribute(te.position),x.vertexAttribPointer(te.position,3,5126,!1,0,0)),L.hasNormals&&(x.bindBuffer(34962,q.normal),x.bufferData(34962,L.normalArray,35048),me.enableAttribute(te.normal),x.vertexAttribPointer(te.normal,3,5126,!1,0,0)),L.hasUvs&&(x.bindBuffer(34962,q.uv),x.bufferData(34962,L.uvArray,35048),me.enableAttribute(te.uv),x.vertexAttribPointer(te.uv,2,5126,!1,0,0)),L.hasColors&&(x.bindBuffer(34962,q.color),x.bufferData(34962,L.colorArray,35048),me.enableAttribute(te.color),x.vertexAttribPointer(te.color,3,5126,!1,0,0)),me.disableUnusedAttributes(),x.drawArrays(4,0,L.count),L.count=0},this.renderBufferDirect=function(L,Z,q,te,he,Ne){Z===null&&(Z=Ae);const Pe=he.isMesh&&he.matrixWorld.determinant()<0,Oe=es(L,Z,te,he);N.setMaterial(te,Pe);let Ie=q.index;const Je=q.attributes.position;if(Ie===null){if(Je===void 0||Je.count===0)return}else if(Ie.count===0)return;let Ze=1;te.wireframe===!0&&(Ie=V.getWireframeAttribute(q),Ze=2),(te.morphTargets||te.morphNormals)&&se.update(he,q,te,Oe),me.setup(he,te,Oe,q,Ie);let Le,ke=ye;Ie!==null&&(Le=j.get(Ie),ke=ce,ke.setIndex(Le));const tn=Ie!==null?Ie.count:Je.count,He=q.drawRange.start*Ze,Vn=q.drawRange.count*Ze,$e=Ne!==null?Ne.start*Ze:0,lo=Ne!==null?Ne.count*Ze:Infinity,ft=Math.max(He,$e),ir=Math.min(tn,He+Vn,$e+lo)-1,hi=Math.max(0,ir-ft+1);if(hi===0)return;if(he.isMesh)te.wireframe===!0?(N.setLineWidth(te.wireframeLinewidth*M()),ke.setMode(1)):ke.setMode(4);else if(he.isLine){let rr=te.linewidth;rr===void 0&&(rr=1),N.setLineWidth(rr*M()),he.isLineSegments?ke.setMode(1):he.isLineLoop?ke.setMode(2):ke.setMode(3)}else he.isPoints?ke.setMode(0):he.isSprite&&ke.setMode(4);if(he.isInstancedMesh)ke.renderInstances(ft,hi,he.count);else if(q.isInstancedBufferGeometry){const rr=Math.min(q.instanceCount,q._maxInstanceCount);ke.renderInstances(ft,hi,rr)}else ke.render(ft,hi)},this.compile=function(L,Z){f=J.get(L,Z),f.init(),L.traverse(function(te){te.isLight&&(f.pushLight(te),te.castShadow&&f.pushShadow(te))}),f.setupLights(Z);const q=new WeakMap;L.traverse(function(te){const he=te.material;if(he)if(Array.isArray(he))for(let Ne=0;Ne<he.length;Ne++){const Pe=he[Ne];q.has(Pe)===!1&&(bt(Pe,L,te),q.set(Pe))}else q.has(he)===!1&&(bt(he,L,te),q.set(he))})};let xn=null;function Dt(L){if(le.isPresenting)return;xn&&xn(L)}const Nt=new xc;Nt.setAnimationLoop(Dt),typeof window!="undefined"&&Nt.setContext(window),this.setAnimationLoop=function(L){xn=L,le.setAnimationLoop(L),L===null?Nt.stop():Nt.start()},this.render=function(L,Z){let q,te;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),q=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),te=arguments[3]),Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;me.resetDefaultState(),E=-1,R=null,L.autoUpdate===!0&&L.updateMatrixWorld(),Z.parent===null&&Z.updateMatrixWorld(),le.enabled===!0&&le.isPresenting===!0&&(Z=le.getCamera(Z)),L.isScene===!0&&L.onBeforeRender(d,L,Z,q||p),f=J.get(L,Z),f.init(),ge.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),re.setFromProjectionMatrix(ge),ae=this.localClippingEnabled,ue=O.init(this.clippingPlanes,ae,Z),u=Q.get(L,Z),u.init(),nr(L,Z,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(W,z),ue===!0&&O.beginShadows();const he=f.state.shadowsArray;_e.render(he,L,Z),f.setupLights(Z),ue===!0&&O.endShadows(),this.info.autoReset===!0&&this.info.reset(),q!==void 0&&this.setRenderTarget(q),ne.render(u,L,Z,te);const Ne=u.opaque,Pe=u.transparent;Ne.length>0&&Ot(Ne,L,Z),Pe.length>0&&Ot(Pe,L,Z),L.isScene===!0&&L.onAfterRender(d,L,Z),p!==null&&(U.updateRenderTargetMipmap(p),U.updateMultisampleRenderTarget(p)),N.buffers.depth.setTest(!0),N.buffers.depth.setMask(!0),N.buffers.color.setMask(!0),N.setPolygonOffset(!1),u=null,f=null};function nr(L,Z,q,te){if(L.visible===!1)return;const he=L.layers.test(Z.layers);if(he){if(L.isGroup)q=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(Z);else if(L.isLight)f.pushLight(L),L.castShadow&&f.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||re.intersectsSprite(L)){te&&Ce.setFromMatrixPosition(L.matrixWorld).applyMatrix4(ge);const Pe=ee.update(L),Oe=L.material;Oe.visible&&u.push(L,Pe,Oe,q,Ce.z,null)}}else if(L.isImmediateRenderObject)te&&Ce.setFromMatrixPosition(L.matrixWorld).applyMatrix4(ge),u.push(L,null,L.material,q,Ce.z,null);else if((L.isMesh||L.isLine||L.isPoints)&&(L.isSkinnedMesh&&(L.skeleton.frame!==F.render.frame&&(L.skeleton.update(),L.skeleton.frame=F.render.frame)),!L.frustumCulled||re.intersectsObject(L))){te&&Ce.setFromMatrixPosition(L.matrixWorld).applyMatrix4(ge);const Pe=ee.update(L),Oe=L.material;if(Array.isArray(Oe)){const Ie=Pe.groups;for(let Je=0,Ze=Ie.length;Je<Ze;Je++){const Le=Ie[Je],ke=Oe[Le.materialIndex];ke&&ke.visible&&u.push(L,Pe,ke,q,Ce.z,Le)}}else Oe.visible&&u.push(L,Pe,Oe,q,Ce.z,null)}}const Ne=L.children;for(let Pe=0,Oe=Ne.length;Pe<Oe;Pe++)nr(Ne[Pe],Z,q,te)}function Ot(L,Z,q){const te=Z.isScene===!0?Z.overrideMaterial:null;for(let he=0,Ne=L.length;he<Ne;he++){const Pe=L[he],Oe=Pe.object,Ie=Pe.geometry,Je=te===null?Pe.material:te,Ze=Pe.group;if(q.isArrayCamera){w=q;const Le=q.cameras;for(let ke=0,tn=Le.length;ke<tn;ke++){const He=Le[ke];Oe.layers.test(He.layers)&&(N.viewport(P.copy(He.viewport)),f.setupLights(He),ui(Oe,Z,He,Ie,Je,Ze))}}else w=null,ui(Oe,Z,q,Ie,Je,Ze)}}function ui(L,Z,q,te,he,Ne){if(L.onBeforeRender(d,Z,q,te,he,Ne),f=J.get(Z,w||q),L.modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),L.isImmediateRenderObject){const Pe=es(q,Z,he,L);N.setMaterial(he),me.reset(),co(L,Pe)}else d.renderBufferDirect(q,Z,te,he,L,Ne);L.onAfterRender(d,Z,q,te,he,Ne),f=J.get(Z,w||q)}function bt(L,Z,q){Z.isScene!==!0&&(Z=Ae);const te=C.get(L),he=f.state.lights,Ne=f.state.shadowsArray,Pe=he.state.version,Oe=b.getParameters(L,he.state,Ne,Z,q),Ie=b.getProgramCacheKey(Oe);let Je=te.program,Ze=!0;if(Je===void 0)L.addEventListener("dispose",ci);else if(Je.cacheKey!==Ie)$r(L);else if(te.lightsStateVersion!==Pe)Ze=!1;else if(Oe.shaderID!==void 0){const He=L.isMeshStandardMaterial?Z.environment:null;te.envMap=k.get(L.envMap||He);return}else Ze=!1;Ze&&(Oe.uniforms=b.getUniforms(L),L.onBeforeCompile(Oe,d),Je=b.acquireProgram(Oe,Ie),te.program=Je,te.uniforms=Oe.uniforms,te.outputEncoding=Oe.outputEncoding);const Le=te.uniforms;(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(te.numClippingPlanes=O.numPlanes,te.numIntersection=O.numIntersection,Le.clippingPlanes=O.uniform),te.environment=L.isMeshStandardMaterial?Z.environment:null,te.fog=Z.fog,te.envMap=k.get(L.envMap||te.environment),te.needsLights=su(L),te.lightsStateVersion=Pe,te.needsLights&&(Le.ambientLightColor.value=he.state.ambient,Le.lightProbe.value=he.state.probe,Le.directionalLights.value=he.state.directional,Le.directionalLightShadows.value=he.state.directionalShadow,Le.spotLights.value=he.state.spot,Le.spotLightShadows.value=he.state.spotShadow,Le.rectAreaLights.value=he.state.rectArea,Le.ltc_1.value=he.state.rectAreaLTC1,Le.ltc_2.value=he.state.rectAreaLTC2,Le.pointLights.value=he.state.point,Le.pointLightShadows.value=he.state.pointShadow,Le.hemisphereLights.value=he.state.hemi,Le.directionalShadowMap.value=he.state.directionalShadowMap,Le.directionalShadowMatrix.value=he.state.directionalShadowMatrix,Le.spotShadowMap.value=he.state.spotShadowMap,Le.spotShadowMatrix.value=he.state.spotShadowMatrix,Le.pointShadowMap.value=he.state.pointShadowMap,Le.pointShadowMatrix.value=he.state.pointShadowMatrix);const ke=te.program.getUniforms(),tn=Nn.seqWithValue(ke.seq,Le);te.uniformsList=tn}function es(L,Z,q,te){Z.isScene!==!0&&(Z=Ae),U.resetTextureUnits();const he=Z.fog,Ne=q.isMeshStandardMaterial?Z.environment:null,Pe=p===null?d.outputEncoding:p.texture.encoding,Oe=k.get(q.envMap||Ne),Ie=C.get(q),Je=f.state.lights;if(ue===!0&&(ae===!0||L!==R)){const $e=L===R&&q.id===E;O.setState(q,L,$e)}q.version===Ie.__version?(q.fog&&Ie.fog!==he||(Ie.environment!==Ne||(Ie.needsLights&&Ie.lightsStateVersion!==Je.state.version||(Ie.numClippingPlanes!==void 0&&(Ie.numClippingPlanes!==O.numPlanes||Ie.numIntersection!==O.numIntersection)||(Ie.outputEncoding!==Pe||Ie.envMap!==Oe)))))&&bt(q,Z,te):(bt(q,Z,te),Ie.__version=q.version);let Ze=!1,Le=!1,ke=!1;const tn=Ie.program,He=tn.getUniforms(),Vn=Ie.uniforms;if(N.useProgram(tn.program)&&(Ze=!0,Le=!0,ke=!0),q.id!==E&&(E=q.id,Le=!0),Ze||R!==L){if(He.setValue(x,"projectionMatrix",L.projectionMatrix),D.logarithmicDepthBuffer&&He.setValue(x,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),R!==L&&(R=L,Le=!0,ke=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const $e=He.map.cameraPosition;$e!==void 0&&$e.setValue(x,Ce.setFromMatrixPosition(L.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&He.setValue(x,"isOrthographic",L.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||q.skinning)&&He.setValue(x,"viewMatrix",L.matrixWorldInverse)}if(q.skinning){He.setOptional(x,te,"bindMatrix"),He.setOptional(x,te,"bindMatrixInverse");const $e=te.skeleton;if($e){const lo=$e.bones;if(D.floatVertexTextures){if($e.boneTexture===void 0){let ft=Math.sqrt(lo.length*4);ft=Se.ceilPowerOfTwo(ft),ft=Math.max(ft,4);const ir=new Float32Array(ft*ft*4);ir.set($e.boneMatrices);const hi=new Bi(ir,ft,ft,Bt,Mn);$e.boneMatrices=ir,$e.boneTexture=hi,$e.boneTextureSize=ft}He.setValue(x,"boneTexture",$e.boneTexture,U),He.setValue(x,"boneTextureSize",$e.boneTextureSize)}else He.setOptional(x,$e,"boneMatrices")}}return(Le||Ie.receiveShadow!==te.receiveShadow)&&(Ie.receiveShadow=te.receiveShadow,He.setValue(x,"receiveShadow",te.receiveShadow)),Le&&(He.setValue(x,"toneMappingExposure",d.toneMappingExposure),Ie.needsLights&&Hn(Vn,ke),he&&q.fog&&S.refreshFogUniforms(Vn,he),S.refreshMaterialUniforms(Vn,q,Y,H),Nn.upload(x,Ie.uniformsList,Vn,U)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(Nn.upload(x,Ie.uniformsList,Vn,U),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&He.setValue(x,"center",te.center),He.setValue(x,"modelViewMatrix",te.modelViewMatrix),He.setValue(x,"normalMatrix",te.normalMatrix),He.setValue(x,"modelMatrix",te.matrixWorld),tn}function Hn(L,Z){L.ambientLightColor.needsUpdate=Z,L.lightProbe.needsUpdate=Z,L.directionalLights.needsUpdate=Z,L.directionalLightShadows.needsUpdate=Z,L.pointLights.needsUpdate=Z,L.pointLightShadows.needsUpdate=Z,L.spotLights.needsUpdate=Z,L.spotLightShadows.needsUpdate=Z,L.rectAreaLights.needsUpdate=Z,L.hemisphereLights.needsUpdate=Z}function su(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.setFramebuffer=function(L){y!==L&&p===null&&x.bindFramebuffer(36160,L),y=L},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(L){u=L},this.getRenderState=function(){return f},this.setRenderState=function(L){f=L},this.getRenderTarget=function(){return p},this.setRenderTarget=function(L,Z=0,q=0){p=L,v=Z,g=q,L&&C.get(L).__webglFramebuffer===void 0&&U.setupRenderTarget(L);let te=y,he=!1;if(L){const Ne=C.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(te=Ne[Z],he=!0):L.isWebGLMultisampleRenderTarget?te=C.get(L).__webglMultisampledFramebuffer:te=Ne,P.copy(L.viewport),X.copy(L.scissor),B=L.scissorTest}else P.copy(G).multiplyScalar(Y).floor(),X.copy(K).multiplyScalar(Y).floor(),B=ie;if(_!==te&&(x.bindFramebuffer(36160,te),_=te),N.viewport(P),N.scissor(X),N.setScissorTest(B),he){const Ne=C.get(L.texture);x.framebufferTexture2D(36160,36064,34069+Z,Ne.__webglTexture,q)}},this.readRenderTargetPixels=function(L,Z,q,te,he,Ne,Pe){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Oe=C.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Pe!==void 0&&(Oe=Oe[Pe]),Oe){let Ie=!1;Oe!==_&&(x.bindFramebuffer(36160,Oe),Ie=!0);try{const Je=L.texture,Ze=Je.format,Le=Je.type;if(Ze!==Bt&&pe.convert(Ze)!==x.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Le!==mo&&pe.convert(Le)!==x.getParameter(35738)&&!(Le===Mn&&(D.isWebGL2||A.get("OES_texture_float")||A.get("WEBGL_color_buffer_float")))&&!(Le===ls&&(D.isWebGL2?A.get("EXT_color_buffer_float"):A.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}x.checkFramebufferStatus(36160)===36053?Z>=0&&Z<=L.width-te&&q>=0&&q<=L.height-he&&x.readPixels(Z,q,te,he,pe.convert(Ze),pe.convert(Le),Ne):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Ie&&x.bindFramebuffer(36160,_)}}},this.copyFramebufferToTexture=function(L,Z,q){q===void 0&&(q=0);const te=Math.pow(2,-q),he=Math.floor(Z.image.width*te),Ne=Math.floor(Z.image.height*te),Pe=pe.convert(Z.format);U.setTexture2D(Z,0),x.copyTexImage2D(3553,q,Pe,L.x,L.y,he,Ne,0),N.unbindTexture()},this.copyTextureToTexture=function(L,Z,q,te){te===void 0&&(te=0);const he=Z.image.width,Ne=Z.image.height,Pe=pe.convert(q.format),Oe=pe.convert(q.type);U.setTexture2D(q,0),x.pixelStorei(37440,q.flipY),x.pixelStorei(37441,q.premultiplyAlpha),x.pixelStorei(3317,q.unpackAlignment),Z.isDataTexture?x.texSubImage2D(3553,te,L.x,L.y,he,Ne,Pe,Oe,Z.image.data):Z.isCompressedTexture?x.compressedTexSubImage2D(3553,te,L.x,L.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Pe,Z.mipmaps[0].data):x.texSubImage2D(3553,te,L.x,L.y,Pe,Oe,Z.image),te===0&&q.generateMipmaps&&x.generateMipmap(3553),N.unbindTexture()},this.initTexture=function(L){U.setTexture2D(L,0),N.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Vc(e){Ui.call(this,e)}Vc.prototype=Object.assign(Object.create(Ui.prototype),{constructor:Vc,isWebGL1Renderer:!0});class Wc{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new de(e),this.density=t!==void 0?t:25e-5}clone(){return new Wc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class jc{constructor(e,t,n){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new de(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}clone(){return new jc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Is extends xe{constructor(){super();Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}function vt(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ds,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Se.generateUUID()}Object.defineProperty(vt.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(vt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Se.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new vt(t,this.stride);return n.setUsage(this.usage),n},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Se.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Kn=new T;function fn(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}Object.defineProperties(fn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(fn.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)Kn.x=this.getX(t),Kn.y=this.getY(t),Kn.z=this.getZ(t),Kn.applyMatrix4(e),this.setXYZ(t,Kn.x,Kn.y,Kn.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Te(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new fn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function Qn(e){we.call(this),this.type="SpriteMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}Qn.prototype=Object.create(we.prototype);Qn.prototype.constructor=Qn;Qn.prototype.isSpriteMaterial=!0;Qn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let zi;const Cr=new T,ki=new T,Hi=new T,Vi=new $,Pr=new $,qc=new Re,Ds=new T,Ir=new T,Ns=new T,Xc=new $,Jo=new $,Yc=new $;function Ko(e){if(xe.call(this),this.type="Sprite",zi===void 0){zi=new Ee;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new vt(t,5);zi.setIndex([0,1,2,0,2,3]),zi.setAttribute("position",new fn(n,3,0,!1)),zi.setAttribute("uv",new fn(n,2,3,!1))}this.geometry=zi,this.material=e!==void 0?e:new Qn,this.center=new $(.5,.5)}Ko.prototype=Object.assign(Object.create(xe.prototype),{constructor:Ko,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ki.setFromMatrixScale(this.matrixWorld),qc.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Hi.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ki.multiplyScalar(-Hi.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Os(Ds.set(-.5,-.5,0),Hi,s,ki,i,r),Os(Ir.set(.5,-.5,0),Hi,s,ki,i,r),Os(Ns.set(.5,.5,0),Hi,s,ki,i,r),Xc.set(0,0),Jo.set(1,0),Yc.set(1,1);let o=e.ray.intersectTriangle(Ds,Ir,Ns,!1,Cr);if(o===null&&(Os(Ir.set(-.5,.5,0),Hi,s,ki,i,r),Jo.set(0,1),o=e.ray.intersectTriangle(Ds,Ns,Ir,!1,Cr),o===null))return;const a=e.ray.origin.distanceTo(Cr);if(a<e.near||a>e.far)return;t.push({distance:a,point:Cr.clone(),uv:mt.getUV(Cr,Ds,Ir,Ns,Xc,Jo,Yc,new $),face:null,object:this})},copy:function(e){return xe.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}});function Os(e,t,n,i,r,s){Vi.subVectors(e,n).addScalar(.5).multiply(i),r!==void 0?(Pr.x=s*Vi.x-r*Vi.y,Pr.y=r*Vi.x+s*Vi.y):Pr.copy(Vi),e.copy(t),e.x+=Pr.x,e.y+=Pr.y,e.applyMatrix4(qc)}const Bs=new T,Zc=new T;function Fs(){xe.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}Fs.prototype=Object.assign(Object.create(xe.prototype),{constructor:Fs,isLOD:!0,copy:function(e){xe.prototype.copy.call(this,e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){const n=this.levels;if(n.length>0){Bs.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Bs);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){Bs.setFromMatrixPosition(e.matrixWorld),Zc.setFromMatrixPosition(this.matrixWorld);const n=Bs.distanceTo(Zc)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}});function Dr(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),qe.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Re,this.bindMatrixInverse=new Re}Dr.prototype=Object.assign(Object.create(qe.prototype),{constructor:Dr,isSkinnedMesh:!0,copy:function(e){return qe.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new ze,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==Infinity?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){qe.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new T,t=new ze,n=new ze,i=new T,r=new Re;return function(s,o){const a=this.skeleton,c=this.geometry;t.fromBufferAttribute(c.attributes.skinIndex,s),n.fromBufferAttribute(c.attributes.skinWeight,s),e.fromBufferAttribute(c.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let l=0;l<4;l++){const h=n.getComponent(l);if(h!==0){const u=t.getComponent(l);r.multiplyMatrices(a.bones[u].matrixWorld,a.boneInverses[u]),o.addScaledVector(i.copy(e).applyMatrix4(r),h)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const Jc=new Re,rg=new Re;function Nr(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Re)}}Object.assign(Nr.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const n=new Re;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const o=e[r]?e[r].matrixWorld:rg;Jc.multiplyMatrices(o,t[r]),Jc.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new Nr(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}return},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function Gs(){xe.call(this),this.type="Bone"}Gs.prototype=Object.assign(Object.create(xe.prototype),{constructor:Gs,isBone:!0});const Kc=new Re,Qc=new Re,Us=[],Or=new qe;function Qo(e,t,n){qe.call(this,e,t),this.instanceMatrix=new Te(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Qo.prototype=Object.assign(Object.create(qe.prototype),{constructor:Qo,isInstancedMesh:!0,copy:function(e){return qe.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},setColorAt:function(e,t){this.instanceColor===null&&(this.instanceColor=new Te(new Float32Array(this.count*3),3)),t.toArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){const n=this.matrixWorld,i=this.count;if(Or.geometry=this.geometry,Or.material=this.material,Or.material===void 0)return;for(let r=0;r<i;r++){this.getMatrixAt(r,Kc),Qc.multiplyMatrices(n,Kc),Or.matrixWorld=Qc,Or.raycast(e,Us);for(let s=0,o=Us.length;s<o;s++){const a=Us[s];a.instanceId=r,a.object=this,t.push(a)}Us.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function yt(e){we.call(this),this.type="LineBasicMaterial",this.color=new de(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}yt.prototype=Object.create(we.prototype);yt.prototype.constructor=yt;yt.prototype.isLineBasicMaterial=!0;yt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const $c=new T,el=new T,tl=new Re,zs=new vr,ks=new jt;function pn(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),xe.call(this),this.type="Line",this.geometry=e!==void 0?e:new Ee,this.material=t!==void 0?t:new yt,this.updateMorphTargets()}pn.prototype=Object.assign(Object.create(xe.prototype),{constructor:pn,isLine:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)$c.fromBufferAttribute(t,i-1),el.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=$c.distanceTo(el);e.setAttribute("lineDistance",new ve(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let i=1,r=t.length;i<r;i++)n[i]=n[i-1],n[i]+=t[i-1].distanceTo(t[i])}return this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),ks.copy(n.boundingSphere),ks.applyMatrix4(i),ks.radius+=r,e.ray.intersectsSphere(ks)===!1)return;tl.getInverse(i),zs.copy(e.ray).applyMatrix4(tl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new T,c=new T,l=new T,h=new T,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,d=n.attributes,m=d.position.array;if(f!==null){const y=f.array;for(let v=0,g=y.length-1;v<g;v+=u){const p=y[v],_=y[v+1];a.fromArray(m,p*3),c.fromArray(m,_*3);const E=zs.distanceSqToSegment(a,c,h,l);if(E>o)continue;h.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(h);if(R<e.near||R>e.far)continue;t.push({distance:R,point:l.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(let y=0,v=m.length/3-1;y<v;y+=u){a.fromArray(m,3*y),c.fromArray(m,3*y+3);const g=zs.distanceSqToSegment(a,c,h,l);if(g>o)continue;h.applyMatrix4(this.matrixWorld);const p=e.ray.origin.distanceTo(h);if(p<e.near||p>e.far)continue;t.push({distance:p,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,d=f.length;for(let m=0;m<d-1;m+=u){const y=zs.distanceSqToSegment(f[m],f[m+1],h,l);if(y>o)continue;h.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(h);if(v<e.near||v>e.far)continue;t.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Hs=new T,Vs=new T;function $n(e,t){pn.call(this,e,t),this.type="LineSegments"}$n.prototype=Object.assign(Object.create(pn.prototype),{constructor:$n,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Hs.fromBufferAttribute(t,i),Vs.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hs.distanceTo(Vs);e.setAttribute("lineDistance",new ve(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let i=0,r=t.length;i<r;i+=2)Hs.copy(t[i]),Vs.copy(t[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hs.distanceTo(Vs)}return this}});function Br(e,t){pn.call(this,e,t),this.type="LineLoop"}Br.prototype=Object.assign(Object.create(pn.prototype),{constructor:Br,isLineLoop:!0});function mn(e){we.call(this),this.type="PointsMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}mn.prototype=Object.create(we.prototype);mn.prototype.constructor=mn;mn.prototype.isPointsMaterial=!0;mn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const nl=new Re,$o=new vr,Ws=new jt,js=new T;function Fr(e,t){xe.call(this),this.type="Points",this.geometry=e!==void 0?e:new Ee,this.material=t!==void 0?t:new mn,this.updateMorphTargets()}Fr.prototype=Object.assign(Object.create(xe.prototype),{constructor:Fr,isPoints:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ws.copy(n.boundingSphere),Ws.applyMatrix4(i),Ws.radius+=r,e.ray.intersectsSphere(Ws)===!1)return;nl.getInverse(i),$o.copy(e.ray).applyMatrix4(nl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,c=n.attributes,l=c.position.array;if(a!==null){const h=a.array;for(let u=0,f=h.length;u<f;u++){const d=h[u];js.fromArray(l,d*3),ea(js,d,o,i,e,t,this)}}else for(let h=0,u=l.length/3;h<u;h++)js.fromArray(l,h*3),ea(js,h,o,i,e,t,this)}else{const a=n.vertices;for(let c=0,l=a.length;c<l;c++)ea(a[c],c,o,i,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function ea(e,t,n,i,r,s,o){const a=$o.distanceSqToPoint(e);if(a<n){const c=new T;$o.closestPointToPoint(e,c),c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:o})}}function il(e,t,n,i,r,s,o,a,c){Ue.call(this,e,t,n,i,r,s,o,a,c),this.format=o!==void 0?o:rn,this.minFilter=s!==void 0?s:Ke,this.magFilter=r!==void 0?r:Ke,this.generateMipmaps=!1;const l=this;function h(){l.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}il.prototype=Object.assign(Object.create(Ue.prototype),{constructor:il,isVideoTexture:!0,update:function(){const e=this.image,t="requestVideoFrameCallback"in e;t===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Gr(e,t,n,i,r,s,o,a,c,l,h,u){Ue.call(this,null,s,o,a,c,l,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}Gr.prototype=Object.create(Ue.prototype);Gr.prototype.constructor=Gr;Gr.prototype.isCompressedTexture=!0;function Wi(e,t,n,i,r,s,o,a,c){Ue.call(this,e,t,n,i,r,s,o,a,c),this.needsUpdate=!0}Wi.prototype=Object.create(Ue.prototype);Wi.prototype.constructor=Wi;Wi.prototype.isCanvasTexture=!0;function qs(e,t,n,i,r,s,o,a,c,l){if(l=l!==void 0?l:mi,l!==mi&&l!==fr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===mi&&(n=as),n===void 0&&l===fr&&(n=dr),Ue.call(this,null,i,r,s,o,a,l,n,c),this.image={width:e,height:t},this.magFilter=o!==void 0?o:et,this.minFilter=a!==void 0?a:et,this.flipY=!1,this.generateMipmaps=!1}qs.prototype=Object.create(Ue.prototype);qs.prototype.constructor=qs;qs.prototype.isDepthTexture=!0;class sg extends Ee{constructor(e){super();this.type="WireframeGeometry";const t=[],n=[0,0],i={},r=["a","b","c"];if(e&&e.isGeometry){const s=e.faces;for(let o=0,a=s.length;o<a;o++){const c=s[o];for(let l=0;l<3;l++){const h=c[r[l]],u=c[r[(l+1)%3]];n[0]=Math.min(h,u),n[1]=Math.max(h,u);const f=n[0]+","+n[1];i[f]===void 0&&(i[f]={index1:n[0],index2:n[1]})}}for(const o in i){const a=i[o];let c=e.vertices[a.index1];t.push(c.x,c.y,c.z),c=e.vertices[a.index2],t.push(c.x,c.y,c.z)}}else if(e&&e.isBufferGeometry){const s=new T;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],f=u.start,d=u.count;for(let m=f,y=f+d;m<y;m+=3)for(let v=0;v<3;v++){const g=a.getX(m+v),p=a.getX(m+(v+1)%3);n[0]=Math.min(g,p),n[1]=Math.max(g,p);const _=n[0]+","+n[1];i[_]===void 0&&(i[_]={index1:n[0],index2:n[1]})}}for(const l in i){const h=i[l];s.fromBufferAttribute(o,h.index1),t.push(s.x,s.y,s.z),s.fromBufferAttribute(o,h.index2),t.push(s.x,s.y,s.z)}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let l=0;l<3;l++){const h=3*a+l;s.fromBufferAttribute(o,h),t.push(s.x,s.y,s.z);const u=3*a+(l+1)%3;s.fromBufferAttribute(o,u),t.push(s.x,s.y,s.z)}}}this.setAttribute("position",new ve(t,3))}}function Xs(e,t,n){Ge.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Ur(e,t,n)),this.mergeVertices()}Xs.prototype=Object.create(Ge.prototype);Xs.prototype.constructor=Xs;function Ur(e,t,n){Ee.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,c=new T,l=new T,h=new T,u=new T,f=new T;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=t+1;for(let m=0;m<=n;m++){const y=m/n;for(let v=0;v<=t;v++){const g=v/t;e(g,y,l),r.push(l.x,l.y,l.z),g-a>=0?(e(g-a,y,h),u.subVectors(l,h)):(e(g+a,y,h),u.subVectors(h,l)),y-a>=0?(e(g,y-a,h),f.subVectors(l,h)):(e(g,y+a,h),f.subVectors(h,l)),c.crossVectors(u,f).normalize(),s.push(c.x,c.y,c.z),o.push(g,y)}}for(let m=0;m<n;m++)for(let y=0;y<t;y++){const v=m*d+y,g=m*d+y+1,p=(m+1)*d+y+1,_=(m+1)*d+y;i.push(v,g,_),i.push(g,p,_)}this.setIndex(i),this.setAttribute("position",new ve(r,3)),this.setAttribute("normal",new ve(s,3)),this.setAttribute("uv",new ve(o,2))}Ur.prototype=Object.create(Ee.prototype);Ur.prototype.constructor=Ur;class og extends Ge{constructor(e,t,n,i){super();this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},this.fromBufferGeometry(new ji(e,t,n,i)),this.mergeVertices()}}class ji extends Ee{constructor(e,t,n,i){super();this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},n=n||1,i=i||0;const r=[],s=[];o(i),c(n),l(),this.setAttribute("position",new ve(r,3)),this.setAttribute("normal",new ve(r.slice(),3)),this.setAttribute("uv",new ve(s,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(g){const p=new T,_=new T,E=new T;for(let R=0;R<t.length;R+=3)f(t[R+0],p),f(t[R+1],_),f(t[R+2],E),a(p,_,E,g)}function a(g,p,_,E){const R=Math.pow(2,E),w=[];for(let P=0;P<=R;P++){w[P]=[];const X=g.clone().lerp(_,P/R),B=p.clone().lerp(_,P/R),oe=R-P;for(let H=0;H<=oe;H++)H===0&&P===R?w[P][H]=X:w[P][H]=X.clone().lerp(B,H/oe)}for(let P=0;P<R;P++)for(let X=0;X<2*(R-P)-1;X++){const B=Math.floor(X/2);X%2===0?(u(w[P][B+1]),u(w[P+1][B]),u(w[P][B])):(u(w[P][B+1]),u(w[P+1][B+1]),u(w[P+1][B]))}}function c(g){const p=new T;for(let _=0;_<r.length;_+=3)p.x=r[_+0],p.y=r[_+1],p.z=r[_+2],p.normalize().multiplyScalar(g),r[_+0]=p.x,r[_+1]=p.y,r[_+2]=p.z}function l(){const g=new T;for(let p=0;p<r.length;p+=3){g.x=r[p+0],g.y=r[p+1],g.z=r[p+2];const _=y(g)/2/Math.PI+.5,E=v(g)/Math.PI+.5;s.push(_,1-E)}d(),h()}function h(){for(let g=0;g<s.length;g+=6){const p=s[g+0],_=s[g+2],E=s[g+4],R=Math.max(p,_,E),w=Math.min(p,_,E);R>.9&&w<.1&&(p<.2&&(s[g+0]+=1),_<.2&&(s[g+2]+=1),E<.2&&(s[g+4]+=1))}}function u(g){r.push(g.x,g.y,g.z)}function f(g,p){const _=g*3;p.x=e[_+0],p.y=e[_+1],p.z=e[_+2]}function d(){const g=new T,p=new T,_=new T,E=new T,R=new $,w=new $,P=new $;for(let X=0,B=0;X<r.length;X+=9,B+=6){g.set(r[X+0],r[X+1],r[X+2]),p.set(r[X+3],r[X+4],r[X+5]),_.set(r[X+6],r[X+7],r[X+8]),R.set(s[B+0],s[B+1]),w.set(s[B+2],s[B+3]),P.set(s[B+4],s[B+5]),E.copy(g).add(p).add(_).divideScalar(3);const oe=y(E);m(R,B+0,g,oe),m(w,B+2,p,oe),m(P,B+4,_,oe)}}function m(g,p,_,E){E<0&&g.x===1&&(s[p]=g.x-1),_.x===0&&_.z===0&&(s[p]=E/2/Math.PI+.5)}function y(g){return Math.atan2(g.z,-g.x)}function v(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}}class ag extends Ge{constructor(e,t){super();this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new rl(e,t)),this.mergeVertices()}}class rl extends ji{constructor(e,t){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t);this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class cg extends Ge{constructor(e,t){super();this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new sl(e,t)),this.mergeVertices()}}class sl extends ji{constructor(e,t){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t);this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class lg extends Ge{constructor(e,t){super();this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ol(e,t)),this.mergeVertices()}}class ol extends ji{constructor(e,t){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t);this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class ug extends Ge{constructor(e,t){super();this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new al(e,t)),this.mergeVertices()}}class al extends ji{constructor(e,t){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,s,e,t);this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class hg extends Ge{constructor(e,t,n,i,r,s){super();this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},s!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new cl(e,t,n,i,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}}class cl extends Ee{constructor(e,t,n,i,r){super();this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},t=t||64,n=n||1,i=i||8,r=r||!1;const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new T,a=new T,c=new $;let l=new T;const h=[],u=[],f=[],d=[];m(),this.setIndex(d),this.setAttribute("position",new ve(h,3)),this.setAttribute("normal",new ve(u,3)),this.setAttribute("uv",new ve(f,2));function m(){for(let p=0;p<t;p++)y(p);y(r===!1?t:0),g(),v()}function y(p){l=e.getPointAt(p/t,l);const _=s.normals[p],E=s.binormals[p];for(let R=0;R<=i;R++){const w=R/i*Math.PI*2,P=Math.sin(w),X=-Math.cos(w);a.x=X*_.x+P*E.x,a.y=X*_.y+P*E.y,a.z=X*_.z+P*E.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=l.x+n*a.x,o.y=l.y+n*a.y,o.z=l.z+n*a.z,h.push(o.x,o.y,o.z)}}function v(){for(let p=1;p<=t;p++)for(let _=1;_<=i;_++){const E=(i+1)*(p-1)+(_-1),R=(i+1)*p+(_-1),w=(i+1)*p+_,P=(i+1)*(p-1)+_;d.push(E,R,P),d.push(R,w,P)}}function g(){for(let p=0;p<=t;p++)for(let _=0;_<=i;_++)c.x=p/t,c.y=_/i,f.push(c.x,c.y)}}toJSON(){const e=Ee.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class dg extends Ge{constructor(e,t,n,i,r,s,o){super();this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new ll(e,t,n,i,r,s)),this.mergeVertices()}}class ll extends Ee{constructor(e,t,n,i,r,s){super();this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s},e=e||1,t=t||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,s=s||3;const o=[],a=[],c=[],l=[],h=new T,u=new T,f=new T,d=new T,m=new T,y=new T,v=new T;for(let p=0;p<=n;++p){const _=p/n*r*Math.PI*2;g(_,r,s,e,f),g(_+.01,r,s,e,d),y.subVectors(d,f),v.addVectors(d,f),m.crossVectors(y,v),v.crossVectors(m,y),m.normalize(),v.normalize();for(let E=0;E<=i;++E){const R=E/i*Math.PI*2,w=-t*Math.cos(R),P=t*Math.sin(R);h.x=f.x+(w*v.x+P*m.x),h.y=f.y+(w*v.y+P*m.y),h.z=f.z+(w*v.z+P*m.z),a.push(h.x,h.y,h.z),u.subVectors(h,f).normalize(),c.push(u.x,u.y,u.z),l.push(p/n),l.push(E/i)}}for(let p=1;p<=n;p++)for(let _=1;_<=i;_++){const E=(i+1)*(p-1)+(_-1),R=(i+1)*p+(_-1),w=(i+1)*p+_,P=(i+1)*(p-1)+_;o.push(E,R,P),o.push(R,w,P)}this.setIndex(o),this.setAttribute("position",new ve(a,3)),this.setAttribute("normal",new ve(c,3)),this.setAttribute("uv",new ve(l,2));function g(p,_,E,R,w){const P=Math.cos(p),X=Math.sin(p),B=E/_*p,oe=Math.cos(B);w.x=R*(2+oe)*.5*P,w.y=R*(2+oe)*X*.5,w.z=R*Math.sin(B)*.5}}}class fg extends Ge{constructor(e,t,n,i,r){super();this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new ul(e,t,n,i,r)),this.mergeVertices()}}class ul extends Ee{constructor(e,t,n,i,r){super();this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},e=e||1,t=t||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;const s=[],o=[],a=[],c=[],l=new T,h=new T,u=new T;for(let f=0;f<=n;f++)for(let d=0;d<=i;d++){const m=d/i*r,y=f/n*Math.PI*2;h.x=(e+t*Math.cos(y))*Math.cos(m),h.y=(e+t*Math.cos(y))*Math.sin(m),h.z=t*Math.sin(y),o.push(h.x,h.y,h.z),l.x=e*Math.cos(m),l.y=e*Math.sin(m),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(d/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let d=1;d<=i;d++){const m=(i+1)*f+d-1,y=(i+1)*(f-1)+d-1,v=(i+1)*(f-1)+d,g=(i+1)*f+d;s.push(m,y,g),s.push(y,v,g)}this.setIndex(s),this.setAttribute("position",new ve(o,3)),this.setAttribute("normal",new ve(a,3)),this.setAttribute("uv",new ve(c,2))}}const mg={triangulate:function(e,t,n){n=n||2;const i=t&&t.length,r=i?t[0]*n:e.length;let s=hl(e,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,h,u,f,d;if(i&&(s=pg(e,t,s,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let m=n;m<r;m+=n)u=e[m],f=e[m+1],u<a&&(a=u),f<c&&(c=f),u>l&&(l=u),f>h&&(h=f);d=Math.max(l-a,h-c),d=d!==0?1/d:0}return zr(s,o,n,a,c,d),o}};function hl(e,t,n,i,r){let s,o;if(r===gg(e,t,n,i)>0)for(s=t;s<n;s+=i)o=dl(s,e[s],e[s+1],o);else for(s=n-i;s>=t;s-=i)o=dl(s,e[s],e[s+1],o);return o&&Ys(o,o.next)&&(kr(o),o=o.next),o}function On(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(Ys(n,n.next)||Xe(n.prev,n,n.next)===0)){if(kr(n),n=t=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function zr(e,t,n,i,r,s,o){if(!e)return;!o&&s&&_g(e,i,r,s);let a=e,c,l;for(;e.prev!==e.next;){if(c=e.prev,l=e.next,s?yg(e,i,r,s):vg(e)){t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),kr(e),e=l.next,a=l.next;continue}if(e=l,e===a){o?o===1?(e=xg(On(e),t,n),zr(e,t,n,i,r,s,2)):o===2&&bg(e,t,n,i,r,s):zr(On(e),t,n,i,r,s,1);break}}}function vg(e){const t=e.prev,n=e,i=e.next;if(Xe(t,n,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(qi(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Xe(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function yg(e,t,n,i){const r=e.prev,s=e,o=e.next;if(Xe(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=ta(a,c,t,n,i),f=ta(l,h,t,n,i);let d=e.prevZ,m=e.nextZ;for(;d&&d.z>=u&&m&&m.z<=f;){if(d!==e.prev&&d!==e.next&&qi(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Xe(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,m!==e.prev&&m!==e.next&&qi(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Xe(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&qi(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Xe(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=f;){if(m!==e.prev&&m!==e.next&&qi(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Xe(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function xg(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;!Ys(r,s)&&fl(r,i,i.next,s)&&Hr(r,s)&&Hr(s,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(s.i/n),kr(i),kr(i.next),i=e=s),i=i.next}while(i!==e);return On(i)}function bg(e,t,n,i,r,s){let o=e;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&wg(o,a)){let c=pl(o,a);o=On(o,o.next),c=On(c,c.next),zr(o,t,n,i,r,s),zr(c,t,n,i,r,s);return}a=a.next}o=o.next}while(o!==e)}function pg(e,t,n,i){const r=[];let s,o,a,c,l;for(s=0,o=t.length;s<o;s++)a=t[s]*i,c=s<o-1?t[s+1]*i:e.length,l=hl(e,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(Sg(l));for(r.sort(Mg),s=0;s<r.length;s++)Tg(r[s],n),n=On(n,n.next);return n}function Mg(e,t){return e.x-t.x}function Tg(e,t){if(t=Eg(e,t),t){const n=pl(t,e);On(t,t.next),On(n,n.next)}}function Eg(e,t){let n=t;const i=e.x,r=e.y;let s=-Infinity,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>s){if(s=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h=Infinity,u;n=o;do i>=n.x&&n.x>=c&&i!==n.x&&qi(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),Hr(n,e)&&(u<h||u===h&&(n.x>o.x||n.x===o.x&&Ag(o,n)))&&(o=n,h=u)),n=n.next;while(n!==a);return o}function Ag(e,t){return Xe(e.prev,e,t.prev)<0&&Xe(t.next,e,e.next)<0}function _g(e,t,n,i){let r=e;do r.z===null&&(r.z=ta(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,Lg(r)}function Lg(e){let t,n,i,r,s,o,a,c,l=1;do{for(n=e,e=null,s=null,o=0;n;){for(o++,i=n,a=0,t=0;t<l&&!(a++,i=i.nextZ,!i);t++);for(c=l;a>0||c>0&&i;)a!==0&&(c===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;n=i}s.nextZ=null,l*=2}while(o>1);return e}function ta(e,t,n,i,r){return e=32767*(e-n)*r,t=32767*(t-i)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function Sg(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function qi(e,t,n,i,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function wg(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!Rg(e,t)&&(Hr(e,t)&&Hr(t,e)&&Cg(e,t)&&(Xe(e.prev,e,t.prev)||Xe(e,t.prev,t))||Ys(e,t)&&Xe(e.prev,e,e.next)>0&&Xe(t.prev,t,t.next)>0)}function Xe(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Ys(e,t){return e.x===t.x&&e.y===t.y}function fl(e,t,n,i){const r=Js(Xe(e,t,n)),s=Js(Xe(e,t,i)),o=Js(Xe(n,i,e)),a=Js(Xe(n,i,t));return r!==s&&o!==a||(r===0&&Zs(e,n,t)||(s===0&&Zs(e,i,t)||o===0&&Zs(n,e,i)))?!0:!!(a===0&&Zs(n,t,i))}function Zs(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Js(e){return e>0?1:e<0?-1:0}function Rg(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&fl(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function Hr(e,t){return Xe(e.prev,e,e.next)<0?Xe(e,t,e.next)>=0&&Xe(e,e.prev,t)>=0:Xe(e,t,e.prev)<0||Xe(e,e.next,t)<0}function Cg(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do n.y>s!==n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function pl(e,t){const n=new na(e.i,e.x,e.y),i=new na(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function dl(e,t,n,i){const r=new na(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function kr(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function na(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function gg(e,t,n,i){let r=0;for(let s=t,o=n-i;s<n;s+=i)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}const Bn={area:function(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},isClockWise:function(e){return Bn.area(e)<0},triangulateShape:function(e,t){const n=[],i=[],r=[];ml(e),gl(n,e);let s=e.length;t.forEach(ml);for(let a=0;a<t.length;a++)i.push(s),s+=t[a].length,gl(n,t[a]);const o=mg.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function ml(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function gl(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class yl extends Ge{constructor(e,t){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Ks(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return vl(t,n,e)}}class Ks extends Ee{constructor(e,t){super();this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,a=e.length;o<a;o++){const c=e[o];s(c)}this.setAttribute("position",new ve(i,3)),this.setAttribute("uv",new ve(r,2)),this.computeVertexNormals();function s(o){const a=[],c=t.curveSegments!==void 0?t.curveSegments:12,l=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:100,u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:6,d=t.bevelSize!==void 0?t.bevelSize:f-2,m=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,g=t.UVGenerator!==void 0?t.UVGenerator:Pg;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let p,_=!1,E,R,w,P;v&&(p=v.getSpacedPoints(l),_=!0,u=!1,E=v.computeFrenetFrames(l,!1),R=new T,w=new T,P=new T),u||(y=0,f=0,d=0,m=0);const X=o.extractPoints(c);let B=X.shape;const oe=X.holes,H=!Bn.isClockWise(B);if(H){B=B.reverse();for(let C=0,U=oe.length;C<U;C++){const k=oe[C];Bn.isClockWise(k)&&(oe[C]=k.reverse())}}const Y=Bn.triangulateShape(B,oe),W=B;for(let C=0,U=oe.length;C<U;C++){const k=oe[C];B=B.concat(k)}function z(C,U,k){return U||console.error("THREE.ExtrudeGeometry: vec does not exist"),U.clone().multiplyScalar(k).add(C)}const G=B.length,K=Y.length;function ie(C,U,k){let j,V,ee;const b=C.x-U.x,S=C.y-U.y,Q=k.x-C.x,J=k.y-C.y,O=b*b+S*S,ne=b*J-S*Q;if(Math.abs(ne)>Number.EPSILON){const se=Math.sqrt(O),ye=Math.sqrt(Q*Q+J*J),ce=U.x-S/se,pe=U.y+b/se,me=k.x-J/ye,Me=k.y+Q/ye,le=((me-ce)*J-(Me-pe)*Q)/(b*J-S*Q);j=ce+b*le-C.x,V=pe+S*le-C.y;const _e=j*j+V*V;if(_e<=2)return new $(j,V);ee=Math.sqrt(_e/2)}else{let se=!1;b>Number.EPSILON?Q>Number.EPSILON&&(se=!0):b<-Number.EPSILON?Q<-Number.EPSILON&&(se=!0):Math.sign(S)===Math.sign(J)&&(se=!0),se?(j=-S,V=b,ee=Math.sqrt(O)):(j=b,V=S,ee=Math.sqrt(O/2))}return new $(j/ee,V/ee)}const re=[];for(let C=0,U=W.length,k=U-1,j=C+1;C<U;C++,k++,j++)k===U&&(k=0),j===U&&(j=0),re[C]=ie(W[C],W[k],W[j]);const ue=[];let ae,ge=re.concat();for(let C=0,U=oe.length;C<U;C++){const k=oe[C];ae=[];for(let j=0,V=k.length,ee=V-1,b=j+1;j<V;j++,ee++,b++)ee===V&&(ee=0),b===V&&(b=0),ae[j]=ie(k[j],k[ee],k[b]);ue.push(ae),ge=ge.concat(ae)}for(let C=0;C<y;C++){const U=C/y,k=f*Math.cos(U*Math.PI/2),j=d*Math.sin(U*Math.PI/2)+m;for(let V=0,ee=W.length;V<ee;V++){const b=z(W[V],re[V],j);I(b.x,b.y,-k)}for(let V=0,ee=oe.length;V<ee;V++){const b=oe[V];ae=ue[V];for(let S=0,Q=b.length;S<Q;S++){const J=z(b[S],ae[S],j);I(J.x,J.y,-k)}}}const Ce=d+m;for(let C=0;C<G;C++){const U=u?z(B[C],ge[C],Ce):B[C];_?(w.copy(E.normals[0]).multiplyScalar(U.x),R.copy(E.binormals[0]).multiplyScalar(U.y),P.copy(p[0]).add(w).add(R),I(P.x,P.y,P.z)):I(U.x,U.y,0)}for(let C=1;C<=l;C++)for(let U=0;U<G;U++){const k=u?z(B[U],ge[U],Ce):B[U];_?(w.copy(E.normals[C]).multiplyScalar(k.x),R.copy(E.binormals[C]).multiplyScalar(k.y),P.copy(p[C]).add(w).add(R),I(P.x,P.y,P.z)):I(k.x,k.y,h/l*C)}for(let C=y-1;C>=0;C--){const U=C/y,k=f*Math.cos(U*Math.PI/2),j=d*Math.sin(U*Math.PI/2)+m;for(let V=0,ee=W.length;V<ee;V++){const b=z(W[V],re[V],j);I(b.x,b.y,h+k)}for(let V=0,ee=oe.length;V<ee;V++){const b=oe[V];ae=ue[V];for(let S=0,Q=b.length;S<Q;S++){const J=z(b[S],ae[S],j);_?I(J.x,J.y+p[l-1].y,p[l-1].x+k):I(J.x,J.y,h+k)}}}Ae(),M();function Ae(){const C=i.length/3;if(u){let U=0,k=G*U;for(let j=0;j<K;j++){const V=Y[j];A(V[2]+k,V[1]+k,V[0]+k)}U=l+y*2,k=G*U;for(let j=0;j<K;j++){const V=Y[j];A(V[0]+k,V[1]+k,V[2]+k)}}else{for(let U=0;U<K;U++){const k=Y[U];A(k[2],k[1],k[0])}for(let U=0;U<K;U++){const k=Y[U];A(k[0]+G*l,k[1]+G*l,k[2]+G*l)}}n.addGroup(C,i.length/3-C,0)}function M(){const C=i.length/3;let U=0;x(W,U),U+=W.length;for(let k=0,j=oe.length;k<j;k++){const V=oe[k];x(V,U),U+=V.length}n.addGroup(C,i.length/3-C,1)}function x(C,U){let k=C.length;for(;--k>=0;){const j=k;let V=k-1;V<0&&(V=C.length-1);for(let ee=0,b=l+y*2;ee<b;ee++){const S=G*ee,Q=G*(ee+1),J=U+j+S,O=U+V+S,ne=U+V+Q,se=U+j+Q;D(J,O,ne,se)}}}function I(C,U,k){a.push(C),a.push(U),a.push(k)}function A(C,U,k){N(C),N(U),N(k);const j=i.length/3,V=g.generateTopUV(n,i,j-3,j-2,j-1);F(V[0]),F(V[1]),F(V[2])}function D(C,U,k,j){N(C),N(U),N(j),N(U),N(k),N(j);const V=i.length/3,ee=g.generateSideWallUV(n,i,V-6,V-3,V-2,V-1);F(ee[0]),F(ee[1]),F(ee[3]),F(ee[1]),F(ee[2]),F(ee[3])}function N(C){i.push(a[C*3+0]),i.push(a[C*3+1]),i.push(a[C*3+2])}function F(C){r.push(C.x),r.push(C.y)}}}toJSON(){const e=Ee.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return vl(t,n,e)}}const Pg={generateTopUV:function(e,t,n,i,r){const s=t[n*3],o=t[n*3+1],a=t[i*3],c=t[i*3+1],l=t[r*3],h=t[r*3+1];return[new $(s,o),new $(a,c),new $(l,h)]},generateSideWallUV:function(e,t,n,i,r,s){const o=t[n*3],a=t[n*3+1],c=t[n*3+2],l=t[i*3],h=t[i*3+1],u=t[i*3+2],f=t[r*3],d=t[r*3+1],m=t[r*3+2],y=t[s*3],v=t[s*3+1],g=t[s*3+2];return Math.abs(a-h)<.01?[new $(o,1-c),new $(l,1-u),new $(f,1-m),new $(y,1-g)]:[new $(a,1-c),new $(h,1-u),new $(d,1-m),new $(v,1-g)]}};function vl(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}class Ig extends Ge{constructor(e,t){super();this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new xl(e,t)),this.mergeVertices()}}class xl extends Ks{constructor(e,t){t=t||{};const n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ge;const i=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(i,t),this.type="TextBufferGeometry"}}class Dg extends Ge{constructor(e,t,n,i,r,s,o){super();this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new bl(e,t,n,i,r,s,o)),this.mergeVertices()}}class bl extends Ee{constructor(e,t,n,i,r,s,o){super();this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI;const a=Math.min(s+o,Math.PI);let c=0;const l=[],h=new T,u=new T,f=[],d=[],m=[],y=[];for(let v=0;v<=n;v++){const g=[],p=v/n;let _=0;v==0&&s==0?_=.5/t:v==n&&a==Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const R=E/t;h.x=-e*Math.cos(i+R*r)*Math.sin(s+p*o),h.y=e*Math.cos(s+p*o),h.z=e*Math.sin(i+R*r)*Math.sin(s+p*o),d.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),y.push(R+_,1-p),g.push(c++)}l.push(g)}for(let v=0;v<n;v++)for(let g=0;g<t;g++){const p=l[v][g+1],_=l[v][g],E=l[v+1][g],R=l[v+1][g+1];(v!==0||s>0)&&f.push(p,_,R),(v!==n-1||a<Math.PI)&&f.push(_,E,R)}this.setIndex(f),this.setAttribute("position",new ve(d,3)),this.setAttribute("normal",new ve(m,3)),this.setAttribute("uv",new ve(y,2))}}class Ng extends Ge{constructor(e,t,n,i,r,s){super();this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},this.fromBufferGeometry(new _l(e,t,n,i,r,s)),this.mergeVertices()}}class _l extends Ee{constructor(e,t,n,i,r,s){super();this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},e=e||.5,t=t||1,r=r!==void 0?r:0,s=s!==void 0?s:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;const o=[],a=[],c=[],l=[];let h=e;const u=(t-e)/i,f=new T,d=new $;for(let m=0;m<=i;m++){for(let y=0;y<=n;y++){const v=r+y/n*s;f.x=h*Math.cos(v),f.y=h*Math.sin(v),a.push(f.x,f.y,f.z),c.push(0,0,1),d.x=(f.x/t+1)/2,d.y=(f.y/t+1)/2,l.push(d.x,d.y)}h+=u}for(let m=0;m<i;m++){const y=m*(n+1);for(let v=0;v<n;v++){const g=v+y,p=g,_=g+n+1,E=g+n+2,R=g+1;o.push(p,_,R),o.push(_,E,R)}}this.setIndex(o),this.setAttribute("position",new ve(a,3)),this.setAttribute("normal",new ve(c,3)),this.setAttribute("uv",new ve(l,2))}}class Og extends Ge{constructor(e,t,n,i){super();this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},this.fromBufferGeometry(new wl(e,t,n,i)),this.mergeVertices()}}class wl extends Ee{constructor(e,t,n,i){super();this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t)||12,n=n||0,i=i||Math.PI*2,i=Se.clamp(i,0,Math.PI*2);const r=[],s=[],o=[],a=1/t,c=new T,l=new $;for(let h=0;h<=t;h++){const u=n+h*a*i,f=Math.sin(u),d=Math.cos(u);for(let m=0;m<=e.length-1;m++)c.x=e[m].x*f,c.y=e[m].y,c.z=e[m].x*d,s.push(c.x,c.y,c.z),l.x=h/t,l.y=m/(e.length-1),o.push(l.x,l.y)}for(let h=0;h<t;h++)for(let u=0;u<e.length-1;u++){const f=u+h*e.length,d=f,m=f+e.length,y=f+e.length+1,v=f+1;r.push(d,m,v),r.push(m,y,v)}if(this.setIndex(r),this.setAttribute("position",new ve(s,3)),this.setAttribute("uv",new ve(o,2)),this.computeVertexNormals(),i===Math.PI*2){const h=this.attributes.normal.array,u=new T,f=new T,d=new T,m=t*e.length*3;for(let y=0,v=0;y<e.length;y++,v+=3)u.x=h[v+0],u.y=h[v+1],u.z=h[v+2],f.x=h[m+v+0],f.y=h[m+v+1],f.z=h[m+v+2],d.addVectors(u,f).normalize(),h[v+0]=h[m+v+0]=d.x,h[v+1]=h[m+v+1]=d.y,h[v+2]=h[m+v+2]=d.z}}}class Sl extends Ge{constructor(e,t){super();this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Ml(e,t)),this.mergeVertices()}toJSON(){const e=Ge.prototype.toJSON.call(this),t=this.parameters.shapes;return Tl(t,e)}}class Ml extends Ee{constructor(e,t){super();this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const n=[],i=[],r=[],s=[];let o=0,a=0;if(Array.isArray(e)===!1)c(e);else for(let l=0;l<e.length;l++)c(e[l]),this.addGroup(o,a,l),o+=a,a=0;this.setIndex(n),this.setAttribute("position",new ve(i,3)),this.setAttribute("normal",new ve(r,3)),this.setAttribute("uv",new ve(s,2));function c(l){const h=i.length/3,u=l.extractPoints(t);let f=u.shape;const d=u.holes;Bn.isClockWise(f)===!1&&(f=f.reverse());for(let y=0,v=d.length;y<v;y++){const g=d[y];Bn.isClockWise(g)===!0&&(d[y]=g.reverse())}const m=Bn.triangulateShape(f,d);for(let y=0,v=d.length;y<v;y++){const g=d[y];f=f.concat(g)}for(let y=0,v=f.length;y<v;y++){const g=f[y];i.push(g.x,g.y,0),r.push(0,0,1),s.push(g.x,g.y)}for(let y=0,v=m.length;y<v;y++){const g=m[y],p=g[0]+h,_=g[1]+h,E=g[2]+h;n.push(p,_,E),a+=3}}}toJSON(){const e=Ee.prototype.toJSON.call(this),t=this.parameters.shapes;return Tl(t,e)}}function Tl(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}class Bg extends Ee{constructor(e,t){super();this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;const n=[],i=Math.cos(Se.DEG2RAD*t),r=[0,0],s={};let o,a,c;const l=["a","b","c"];let h;e.isBufferGeometry?(h=new Ge,h.fromBufferGeometry(e)):h=e.clone(),h.mergeVertices(),h.computeFaceNormals();const u=h.vertices,f=h.faces;for(let d=0,m=f.length;d<m;d++){const y=f[d];for(let v=0;v<3;v++)o=y[l[v]],a=y[l[(v+1)%3]],r[0]=Math.min(o,a),r[1]=Math.max(o,a),c=r[0]+","+r[1],s[c]===void 0?s[c]={index1:r[0],index2:r[1],face1:d,face2:void 0}:s[c].face2=d}for(c in s){const d=s[c];if(d.face2===void 0||f[d.face1].normal.dot(f[d.face2].normal)<=i){let m=u[d.index1];n.push(m.x,m.y,m.z),m=u[d.index2],n.push(m.x,m.y,m.z)}}this.setAttribute("position",new ve(n,3))}}class El extends Ge{constructor(e,t,n,i,r,s,o,a){super();this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new ia(e,t,n,i,r,s,o,a)),this.mergeVertices()}}class ia extends Ee{constructor(e,t,n,i,r,s,o,a){super();this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a};const c=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,s=s!==void 0?s:!1,o=o!==void 0?o:0,a=a!==void 0?a:Math.PI*2;const l=[],h=[],u=[],f=[];let d=0;const m=[],y=n/2;let v=0;g(),s===!1&&(e>0&&p(!0),t>0&&p(!1)),this.setIndex(l),this.setAttribute("position",new ve(h,3)),this.setAttribute("normal",new ve(u,3)),this.setAttribute("uv",new ve(f,2));function g(){const _=new T,E=new T;let R=0;const w=(t-e)/n;for(let P=0;P<=r;P++){const X=[],B=P/r,oe=B*(t-e)+e;for(let H=0;H<=i;H++){const Y=H/i,W=Y*a+o,z=Math.sin(W),G=Math.cos(W);E.x=oe*z,E.y=-B*n+y,E.z=oe*G,h.push(E.x,E.y,E.z),_.set(z,w,G).normalize(),u.push(_.x,_.y,_.z),f.push(Y,1-B),X.push(d++)}m.push(X)}for(let P=0;P<i;P++)for(let X=0;X<r;X++){const B=m[X][P],oe=m[X+1][P],H=m[X+1][P+1],Y=m[X][P+1];l.push(B,oe,Y),l.push(oe,H,Y),R+=6}c.addGroup(v,R,0),v+=R}function p(_){const E=d,R=new $,w=new T;let P=0;const X=_===!0?e:t,B=_===!0?1:-1;for(let H=1;H<=i;H++)h.push(0,y*B,0),u.push(0,B,0),f.push(.5,.5),d++;const oe=d;for(let H=0;H<=i;H++){const Y=H/i,W=Y*a+o,z=Math.cos(W),G=Math.sin(W);w.x=X*G,w.y=y*B,w.z=X*z,h.push(w.x,w.y,w.z),u.push(0,B,0),R.x=z*.5+.5,R.y=G*.5*B+.5,f.push(R.x,R.y),d++}for(let H=0;H<i;H++){const Y=E+H,W=oe+H;_===!0?l.push(W,W+1,Y):l.push(W+1,W,Y),P+=3}c.addGroup(v,P,_===!0?1:2),v+=P}}}class Fg extends El{constructor(e,t,n,i,r,s,o){super(0,e,t,n,i,r,s,o);this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class Gg extends ia{constructor(e,t,n,i,r,s,o){super(0,e,t,n,i,r,s,o);this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class Ug extends Ge{constructor(e,t,n,i){super();this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new Al(e,t,n,i)),this.mergeVertices()}}class Al extends Ee{constructor(e,t,n,i){super();this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;const r=[],s=[],o=[],a=[],c=new T,l=new $;s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let h=0,u=3;h<=t;h++,u+=3){const f=n+h/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),s.push(c.x,c.y,c.z),o.push(0,0,1),l.x=(s[u]/e+1)/2,l.y=(s[u+1]/e+1)/2,a.push(l.x,l.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new ve(s,3)),this.setAttribute("normal",new ve(o,3)),this.setAttribute("uv",new ve(a,2))}}var ut=Object.freeze({__proto__:null,WireframeGeometry:sg,ParametricGeometry:Xs,ParametricBufferGeometry:Ur,TetrahedronGeometry:ag,TetrahedronBufferGeometry:rl,OctahedronGeometry:cg,OctahedronBufferGeometry:sl,IcosahedronGeometry:lg,IcosahedronBufferGeometry:ol,DodecahedronGeometry:ug,DodecahedronBufferGeometry:al,PolyhedronGeometry:og,PolyhedronBufferGeometry:ji,TubeGeometry:hg,TubeBufferGeometry:cl,TorusKnotGeometry:dg,TorusKnotBufferGeometry:ll,TorusGeometry:fg,TorusBufferGeometry:ul,TextGeometry:Ig,TextBufferGeometry:xl,SphereGeometry:Dg,SphereBufferGeometry:bl,RingGeometry:Ng,RingBufferGeometry:_l,PlaneGeometry:od,PlaneBufferGeometry:Tr,LatheGeometry:Og,LatheBufferGeometry:wl,ShapeGeometry:Sl,ShapeBufferGeometry:Ml,ExtrudeGeometry:yl,ExtrudeBufferGeometry:Ks,EdgesGeometry:Bg,ConeGeometry:Fg,ConeBufferGeometry:Gg,CylinderGeometry:El,CylinderBufferGeometry:ia,CircleGeometry:Ug,CircleBufferGeometry:Al,BoxGeometry:td,BoxBufferGeometry:Rs});function Xi(e){we.call(this),this.type="ShadowMaterial",this.color=new de(0),this.transparent=!0,this.setValues(e)}Xi.prototype=Object.create(we.prototype);Xi.prototype.constructor=Xi;Xi.prototype.isShadowMaterial=!0;Xi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this};function ei(e){gt.call(this,e),this.type="RawShaderMaterial"}ei.prototype=Object.create(gt.prototype);ei.prototype.constructor=ei;ei.prototype.isRawShaderMaterial=!0;function rt(e){we.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new de(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}rt.prototype=Object.create(we.prototype);rt.prototype.constructor=rt;rt.prototype.isMeshStandardMaterial=!0;rt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function Zt(e){rt.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}Zt.prototype=Object.create(rt.prototype);Zt.prototype.constructor=Zt;Zt.prototype.isMeshPhysicalMaterial=!0;Zt.prototype.copy=function(e){return rt.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new de).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};function ti(e){we.call(this),this.type="MeshPhongMaterial",this.color=new de(16777215),this.specular=new de(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}ti.prototype=Object.create(we.prototype);ti.prototype.constructor=ti;ti.prototype.isMeshPhongMaterial=!0;ti.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Yi(e){we.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new de(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Yi.prototype=Object.create(we.prototype);Yi.prototype.constructor=Yi;Yi.prototype.isMeshToonMaterial=!0;Yi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Zi(e){we.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Zi.prototype=Object.create(we.prototype);Zi.prototype.constructor=Zi;Zi.prototype.isMeshNormalMaterial=!0;Zi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Ji(e){we.call(this),this.type="MeshLambertMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ts,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Ji.prototype=Object.create(we.prototype);Ji.prototype.constructor=Ji;Ji.prototype.isMeshLambertMaterial=!0;Ji.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Ki(e){we.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new de(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Sn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Ki.prototype=Object.create(we.prototype);Ki.prototype.constructor=Ki;Ki.prototype.isMeshMatcapMaterial=!0;Ki.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Qi(e){yt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}Qi.prototype=Object.create(yt.prototype);Qi.prototype.constructor=Qi;Qi.prototype.isLineDashedMaterial=!0;Qi.prototype.copy=function(e){return yt.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var zg=Object.freeze({__proto__:null,ShadowMaterial:Xi,SpriteMaterial:Qn,RawShaderMaterial:ei,ShaderMaterial:gt,PointsMaterial:mn,MeshPhysicalMaterial:Zt,MeshStandardMaterial:rt,MeshPhongMaterial:ti,MeshToonMaterial:Yi,MeshNormalMaterial:Zi,MeshLambertMaterial:Ji,MeshDepthMaterial:Zn,MeshDistanceMaterial:Jn,MeshBasicMaterial:wt,MeshMatcapMaterial:Ki,LineDashedMaterial:Qi,LineBasicMaterial:yt,Material:we});const je={arraySlice:function(e,t,n){return je.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(r,s){return e[r]-e[s]}const n=e.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){const i=e.length,r=new e.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*t;for(let c=0;c!==t;++c)r[o++]=e[a+c]}return r},flattenJSON:function(e,t,n,i){let r=1,s=e[0];for(;s!==void 0&&s[i]===void 0;)s=e[r++];if(s===void 0)return;let o=s[i];if(o===void 0)return;if(Array.isArray(o))do o=s[i],o!==void 0&&(t.push(s.time),n.push.apply(n,o)),s=e[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(t.push(s.time),o.toArray(n,n.length)),s=e[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(t.push(s.time),n.push(o)),s=e[r++];while(s!==void 0)},subclip:function(e,t,n,i,r){r=r||30;const s=e.clone();s.name=t;const o=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const m=l.times[d]*r;if(m<n||m>=i)continue;u.push(l.times[d]);for(let y=0;y<h;++y)f.push(l.values[d*h+y])}if(u.length===0)continue;l.times=je.convertArray(u,l.times.constructor),l.values=je.convertArray(f,l.values.constructor),o.push(l)}s.tracks=o;let a=Infinity;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t,n,i){t===void 0&&(t=0),n===void 0&&(n=e),(i===void 0||i<=0)&&(i=30);const r=e.tracks.length,s=t/i;for(let o=0;o<r;++o){const a=n.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=e.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const m=a.times.length-1;let y;if(s<=a.times[0]){const g=h,p=u-h;y=je.arraySlice(a.values,g,p)}else if(s>=a.times[m]){const g=m*u+h,p=g+u-h;y=je.arraySlice(a.values,g,p)}else{const g=a.createInterpolant(),p=h,_=u-h;g.evaluate(s),y=je.arraySlice(g.resultBuffer,p,_)}if(c==="quaternion"){const g=new lt().fromArray(y).normalize().conjugate();g.toArray(y)}const v=l.times.length;for(let g=0;g<v;++g){const p=g*d+f;if(c==="quaternion")lt.multiplyQuaternionsFlat(l.values,p,y,0,l.values,p);else{const _=d-f*2;for(let E=0;E<_;++E)l.values[p+E]-=y[E]}}}return e.blendMode=Qa,e}};function ht(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(ht.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;e<t[o]?s=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let s=0;s!==i;++s)t[s]=n[r+s];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(ht.prototype,{beforeStart_:ht.prototype.copySampleValue_,afterEnd_:ht.prototype.copySampleValue_});function ra(e,t,n,i){ht.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}ra.prototype=Object.assign(Object.create(ht.prototype),{constructor:ra,DefaultSettings_:{endingStart:vi,endingEnd:vi},intervalChanged_:function(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case yi:r=e,o=2*t-n;break;case us:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case yi:s=e,a=2*n-t;break;case us:s=1,a=n+i[1]-i[0];break;default:s=e-1,a=t}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=s*l},interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-t)/(i-t),m=d*d,y=m*d,v=-u*y+2*u*m-u*d,g=(1+u)*y+(-1.5-2*u)*m+(-.5+u)*d+1,p=(-1-f)*y+(1.5+f)*m+.5*d,_=f*y-f*m;for(let E=0;E!==o;++E)r[E]=v*s[l+E]+g*s[c+E]+p*s[a+E]+_*s[h+E];return r}});function Qs(e,t,n,i){ht.call(this,e,t,n,i)}Qs.prototype=Object.assign(Object.create(ht.prototype),{constructor:Qs,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=(n-t)/(i-t),h=1-l;for(let u=0;u!==o;++u)r[u]=s[c+u]*h+s[a+u]*l;return r}});function sa(e,t,n,i){ht.call(this,e,t,n,i)}sa.prototype=Object.assign(Object.create(ht.prototype),{constructor:sa,interpolate_:function(e){return this.copySampleValue_(e-1)}});function ct(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=je.convertArray(t,this.TimeBufferType),this.values=je.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(ct,{toJSON:function(e){const t=e.constructor;let n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:je.convertArray(e.times,Array),values:je.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}});Object.assign(ct.prototype,{constructor:ct,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Wn,InterpolantFactoryMethodDiscrete:function(e){return new sa(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Qs(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new ra(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case gi:t=this.InterpolantFactoryMethodDiscrete;break;case Wn:t=this.InterpolantFactoryMethodLinear;break;case go:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return gi;case this.InterpolantFactoryMethodLinear:return Wn;case this.InterpolantFactoryMethodSmooth:return go}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this},scale:function(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<e;)++r;for(;s!==-1&&n[s]>t;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=je.arraySlice(n,r,s),this.values=je.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),e=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),e=!1;break}s=a}if(i!==void 0&&je.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e},optimize:function(){const e=je.arraySlice(this.times),t=je.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===go,r=e.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const c=e[o],l=e[o+1];if(c!==l&&(o!==1||c!==c[0]))if(i)a=!0;else{const h=o*n,u=h-n,f=h+n;for(let d=0;d!==n;++d){const m=t[h+d];if(m!==t[u+d]||m!==t[f+d]){a=!0;break}}}if(a){if(o!==s){e[s]=e[o];const h=o*n,u=s*n;for(let f=0;f!==n;++f)t[u+f]=t[h+f]}++s}}if(r>0){e[s]=e[r];for(let o=r*n,a=s*n,c=0;c!==n;++c)t[a+c]=t[o+c];++s}return s!==e.length?(this.times=je.arraySlice(e,0,s),this.values=je.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this},clone:function(){const e=je.arraySlice(this.times,0),t=je.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}});function oa(e,t,n){ct.call(this,e,t,n)}oa.prototype=Object.assign(Object.create(ct.prototype),{constructor:oa,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:gi,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function aa(e,t,n,i){ct.call(this,e,t,n,i)}aa.prototype=Object.assign(Object.create(ct.prototype),{constructor:aa,ValueTypeName:"color"});function ni(e,t,n,i){ct.call(this,e,t,n,i)}ni.prototype=Object.assign(Object.create(ct.prototype),{constructor:ni,ValueTypeName:"number"});function ca(e,t,n,i){ht.call(this,e,t,n,i)}ca.prototype=Object.assign(Object.create(ht.prototype),{constructor:ca,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(i-t);let c=e*o;for(let l=c+o;c!==l;c+=4)lt.slerpFlat(r,0,s,c-o,s,c,a);return r}});function $i(e,t,n,i){ct.call(this,e,t,n,i)}$i.prototype=Object.assign(Object.create(ct.prototype),{constructor:$i,ValueTypeName:"quaternion",DefaultInterpolation:Wn,InterpolantFactoryMethodLinear:function(e){return new ca(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function la(e,t,n,i){ct.call(this,e,t,n,i)}la.prototype=Object.assign(Object.create(ct.prototype),{constructor:la,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:gi,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ii(e,t,n,i){ct.call(this,e,t,n,i)}ii.prototype=Object.assign(Object.create(ct.prototype),{constructor:ii,ValueTypeName:"vector"});function St(e,t,n,i){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.blendMode=i!==void 0?i:vo,this.uuid=Se.generateUUID(),this.duration<0&&this.resetDuration()}function kg(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ni;case"vector":case"vector2":case"vector3":case"vector4":return ii;case"color":return aa;case"quaternion":return $i;case"bool":case"boolean":return oa;case"string":return la}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function Hg(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=kg(e.type);if(e.times===void 0){const n=[],i=[];je.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(St,{parse:function(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,s=n.length;r!==s;++r)t.push(Hg(n[r]).scale(i));return new St(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=n.length;r!==s;++r)t.push(ct.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){const r=t.length,s=[];for(let o=0;o<r;o++){let a=[],c=[];a.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const l=je.getKeyframeOrder(a);a=je.sortedArray(a,1,l),c=je.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),s.push(new ni(".morphTargetInfluences["+t[o].name+"]",a,c).scale(1/n))}return new St(e,-1,s)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=e.length;o<a;o++){const c=e[o],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const s=[];for(const o in i)s.push(St.CreateFromMorphTargetSequence(o,i[o],t,n));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,d,m){if(f.length!==0){const y=[],v=[];je.flattenJSON(f,y,v,d),y.length!==0&&m.push(new h(u,y,v))}},i=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!u||u.length===0)continue;if(u[0].morphTargets){const f={};let d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let m=0;m<u[d].morphTargets.length;m++)f[u[d].morphTargets[m]]=-1;for(const m in f){const y=[],v=[];for(let g=0;g!==u[d].morphTargets.length;++g){const p=u[d];y.push(p.time),v.push(p.morphTarget===m?1:0)}i.push(new ni(".morphTargetInfluence["+m+"]",y,v))}a=f.length*(s||1)}else{const f=".bones["+t[h].name+"]";n(ii,f+".position",u,"pos",i),n($i,f+".quaternion",u,"rot",i),n(ii,f+".scale",u,"scl",i)}}if(i.length===0)return null;const l=new St(r,a,i,o);return l}});Object.assign(St.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new St(this.name,this.duration,e,this.blendMode)}});const er={enabled:!1,files:{},add:function(e,t){if(this.enabled===!1)return;this.files[e]=t},get:function(e){return this.enabled===!1?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Ll(e,t,n){const i=this;let r=!1,s=0,o=0,a;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){o++,r===!1&&(i.onStart!==void 0&&i.onStart(l,s,o)),r=!0},this.itemEnd=function(l){s++,i.onProgress!==void 0&&i.onProgress(l,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],d=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return d}return null}}const Vg=new Ll;function Be(e){this.manager=e!==void 0?e:Vg,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Be.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const Vt={};function Et(e){Be.call(this,e)}Et.prototype=Object.assign(Object.create(Be.prototype),{constructor:Et,load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=er.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;if(Vt[e]!==void 0){Vt[e].push({onLoad:t,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(o);let c;if(a){const l=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const m=new Uint8Array(u.length);for(let v=0;v<u.length;v++)m[v]=u.charCodeAt(v);d==="blob"?f=new Blob([m.buffer],{type:l}):f=m.buffer;break;case"document":const y=new DOMParser;f=y.parseFromString(u,l);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){t&&t(f),r.manager.itemEnd(e)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{Vt[e]=[],Vt[e].push({onLoad:t,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",e,!0),c.addEventListener("load",function(l){const h=this.response,u=Vt[e];if(delete Vt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),er.add(e,h);for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onLoad&&m.onLoad(h)}r.manager.itemEnd(e)}else{for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onError&&m.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),c.addEventListener("progress",function(l){const h=Vt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onProgress&&d.onProgress(l)}},!1),c.addEventListener("error",function(l){const h=Vt[e];delete Vt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),c.addEventListener("abort",function(l){const h=Vt[e];delete Vt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const l in this.requestHeader)c.setRequestHeader(l,this.requestHeader[l]);c.send(null)}return r.manager.itemStart(e),c},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}});function Rl(e){Be.call(this,e)}Rl.prototype=Object.assign(Object.create(Be.prototype),{constructor:Rl,load:function(e,t,n,i){const r=this,s=new Et(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const i=St.parse(e[n]);t.push(i)}return t}});function Cl(e){Be.call(this,e)}Cl.prototype=Object.assign(Object.create(Be.prototype),{constructor:Cl,load:function(e,t,n,i){const r=this,s=[],o=new Gr;o.image=s;const a=new Et(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader);let c=0;function l(h){a.load(e[h],function(u){const f=r.parse(u,!0);s[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(o.minFilter=Ke),o.format=f.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,u=e.length;h<u;++h)l(h);else a.load(e,function(h){const u=r.parse(h,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let d=0;d<f;d++){s[d]={mipmaps:[]};for(let m=0;m<u.mipmapCount;m++)s[d].mipmaps.push(u.mipmaps[d*u.mipmapCount+m]),s[d].format=u.format,s[d].width=u.width,s[d].height=u.height}}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=Ke),o.format=u.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}});function Vr(e){Be.call(this,e)}Vr.prototype=Object.assign(Object.create(Be.prototype),{constructor:Vr,load:function(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=er.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),er.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(l){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&(this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin)),r.manager.itemStart(e),o.src=e,o}});function ua(e){Be.call(this,e)}ua.prototype=Object.assign(Object.create(Be.prototype),{constructor:ua,load:function(e,t,n,i){const r=new Dn,s=new Vr(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(c){s.load(e[c],function(l){r.images[c]=l,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)a(c);return r}});function Pl(e){Be.call(this,e)}Pl.prototype=Object.assign(Object.create(Be.prototype),{constructor:Pl,load:function(e,t,n,i){const r=this,s=new Bi,o=new Et(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.load(e,function(a){const c=r.parse(a);if(!c)return;c.image!==void 0?s.image=c.image:c.data!==void 0&&(s.image.width=c.width,s.image.height=c.height,s.image.data=c.data),s.wrapS=c.wrapS!==void 0?c.wrapS:ot,s.wrapT=c.wrapT!==void 0?c.wrapT:ot,s.magFilter=c.magFilter!==void 0?c.magFilter:Ke,s.minFilter=c.minFilter!==void 0?c.minFilter:Ke,s.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.format!==void 0&&(s.format=c.format),c.type!==void 0&&(s.type=c.type),c.mipmaps!==void 0&&(s.mipmaps=c.mipmaps,s.minFilter=wn),c.mipmapCount===1&&(s.minFilter=Ke),s.needsUpdate=!0,t&&t(s,c)},n,i),s}});function Fn(e){Be.call(this,e)}Fn.prototype=Object.assign(Object.create(Be.prototype),{constructor:Fn,load:function(e,t,n,i){const r=new Ue,s=new Vr(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){r.image=o;const a=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;r.format=a?rn:Bt,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}});function be(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(be.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;t?s=t:s=e*n[r-1];let o=0,a=r-1,c;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),c=n[i]-s,c<0)o=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const l=n[i],h=n[i+1],u=h-l,f=(s-l)/u,d=(i+f)/(r-1);return d},getTangent:function(e,t){const n=1e-4;let i=e-n,r=e+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=t||(s.isVector2?new $:new T);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new T,i=[],r=[],s=[],o=new T,a=new Re;for(let f=0;f<=e;f++){const d=f/e;i[f]=this.getTangentAt(d,new T),i[f].normalize()}r[0]=new T,s[0]=new T;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(Se.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,d))}s[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Se.clamp(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f);for(let d=1;d<=e;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function It(e,t,n,i,r,s,o,a){be.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}It.prototype=Object.create(be.prototype);It.prototype.constructor=It;It.prototype.isEllipseCurve=!0;It.prototype.getPoint=function(e,t){const n=t||new $,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)};It.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};It.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e};It.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function Wr(e,t,n,i,r,s){It.call(this,e,t,n,n,i,r,s),this.type="ArcCurve"}Wr.prototype=Object.create(It.prototype);Wr.prototype.constructor=Wr;Wr.prototype.isArcCurve=!0;function ha(){let e=0,t=0,n=0,i=0;function r(s,o,a,c){e=s,t=a,n=-3*s+3*o-2*a-c,i=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,l){r(o,a,l*(a-s),l*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,l,h,u){let f=(o-s)/l-(a-s)/(l+h)+(a-o)/h,d=(a-o)/h-(c-o)/(h+u)+(c-a)/u;f*=h,d*=h,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return e+t*s+n*o+i*a}}}const $s=new T,da=new ha,fa=new ha,pa=new ha;function dt(e,t,n,i){be.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=i!==void 0?i:.5}dt.prototype=Object.create(be.prototype);dt.prototype.constructor=dt;dt.prototype.isCatmullRomCurve3=!0;dt.prototype.getPoint=function(e,t){const n=t||new T,i=this.points,r=i.length,s=(r-(this.closed?0:1))*e;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let c,l;this.closed||o>0?c=i[(o-1)%r]:($s.subVectors(i[0],i[1]).add(i[0]),c=$s);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?l=i[(o+2)%r]:($s.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=$s),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(c.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(u),f),y=Math.pow(u.distanceToSquared(l),f);m<1e-4&&(m=1),d<1e-4&&(d=m),y<1e-4&&(y=m),da.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,d,m,y),fa.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,d,m,y),pa.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,d,m,y)}else this.curveType==="catmullrom"&&(da.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),fa.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),pa.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(da.calc(a),fa.calc(a),pa.calc(a)),n};dt.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};dt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e};dt.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new T().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function Il(e,t,n,i,r){const s=(i-t)*.5,o=(r-n)*.5,a=e*e,c=e*a;return(2*n-2*i+s+o)*c+(-3*n+3*i-2*s-o)*a+s*e+n}function Wg(e,t){const n=1-e;return n*n*t}function jg(e,t){return 2*(1-e)*e*t}function qg(e,t){return e*e*t}function jr(e,t,n,i){return Wg(e,t)+jg(e,n)+qg(e,i)}function Xg(e,t){const n=1-e;return n*n*n*t}function Yg(e,t){const n=1-e;return 3*n*n*e*t}function Zg(e,t){return 3*(1-e)*e*e*t}function Jg(e,t){return e*e*e*t}function qr(e,t,n,i,r){return Xg(e,t)+Yg(e,n)+Zg(e,i)+Jg(e,r)}function Jt(e,t,n,i){be.call(this),this.type="CubicBezierCurve",this.v0=e||new $,this.v1=t||new $,this.v2=n||new $,this.v3=i||new $}Jt.prototype=Object.create(be.prototype);Jt.prototype.constructor=Jt;Jt.prototype.isCubicBezierCurve=!0;Jt.prototype.getPoint=function(e,t){const n=t||new $,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(qr(e,i.x,r.x,s.x,o.x),qr(e,i.y,r.y,s.y,o.y)),n};Jt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};Jt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};Jt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function gn(e,t,n,i){be.call(this),this.type="CubicBezierCurve3",this.v0=e||new T,this.v1=t||new T,this.v2=n||new T,this.v3=i||new T}gn.prototype=Object.create(be.prototype);gn.prototype.constructor=gn;gn.prototype.isCubicBezierCurve3=!0;gn.prototype.getPoint=function(e,t){const n=t||new T,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(qr(e,i.x,r.x,s.x,o.x),qr(e,i.y,r.y,s.y,o.y),qr(e,i.z,r.z,s.z,o.z)),n};gn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};gn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};gn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function At(e,t){be.call(this),this.type="LineCurve",this.v1=e||new $,this.v2=t||new $}At.prototype=Object.create(be.prototype);At.prototype.constructor=At;At.prototype.isLineCurve=!0;At.prototype.getPoint=function(e,t){const n=t||new $;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};At.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};At.prototype.getTangent=function(e,t){const n=t||new $;return n.copy(this.v2).sub(this.v1).normalize(),n};At.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};At.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};At.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Kt(e,t){be.call(this),this.type="LineCurve3",this.v1=e||new T,this.v2=t||new T}Kt.prototype=Object.create(be.prototype);Kt.prototype.constructor=Kt;Kt.prototype.isLineCurve3=!0;Kt.prototype.getPoint=function(e,t){const n=t||new T;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Kt.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Kt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Kt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Kt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Qt(e,t,n){be.call(this),this.type="QuadraticBezierCurve",this.v0=e||new $,this.v1=t||new $,this.v2=n||new $}Qt.prototype=Object.create(be.prototype);Qt.prototype.constructor=Qt;Qt.prototype.isQuadraticBezierCurve=!0;Qt.prototype.getPoint=function(e,t){const n=t||new $,i=this.v0,r=this.v1,s=this.v2;return n.set(jr(e,i.x,r.x,s.x),jr(e,i.y,r.y,s.y)),n};Qt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Qt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Qt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function vn(e,t,n){be.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new T,this.v1=t||new T,this.v2=n||new T}vn.prototype=Object.create(be.prototype);vn.prototype.constructor=vn;vn.prototype.isQuadraticBezierCurve3=!0;vn.prototype.getPoint=function(e,t){const n=t||new T,i=this.v0,r=this.v1,s=this.v2;return n.set(jr(e,i.x,r.x,s.x),jr(e,i.y,r.y,s.y),jr(e,i.z,r.z,s.z)),n};vn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};vn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};vn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function $t(e){be.call(this),this.type="SplineCurve",this.points=e||[]}$t.prototype=Object.create(be.prototype);$t.prototype.constructor=$t;$t.prototype.isSplineCurve=!0;$t.prototype.getPoint=function(e,t){const n=t||new $,i=this.points,r=(i.length-1)*e,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],c=i[s],l=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Il(o,a.x,c.x,l.x,h.x),Il(o,a.y,c.y,l.y,h.y)),n};$t.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this};$t.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e};$t.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new $().fromArray(i))}return this};var ma=Object.freeze({__proto__:null,ArcCurve:Wr,CatmullRomCurve3:dt,CubicBezierCurve:Jt,CubicBezierCurve3:gn,EllipseCurve:It,LineCurve:At,LineCurve3:Kt,QuadraticBezierCurve:Qt,QuadraticBezierCurve3:vn,SplineCurve:$t});function Gn(){be.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}Gn.prototype=Object.assign(Object.create(be.prototype),{constructor:Gn,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new At(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const r=n[i]-t,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?e*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let c=0;c<a.length;c++){const l=a[c];if(n&&n.equals(l))continue;t.push(l),n=l}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){be.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=be.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){be.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new ma[i.type]().fromJSON(i))}return this}});function en(e){Gn.call(this),this.type="Path",this.currentPoint=new $,e&&this.setFromPoints(e)}en.prototype=Object.assign(Object.create(Gn.prototype),{constructor:en,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new At(this.currentPoint.clone(),new $(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,i){const r=new Qt(this.currentPoint.clone(),new $(e,t),new $(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(e,t,n,i,r,s){const o=new Jt(this.currentPoint.clone(),new $(e,t),new $(n,i),new $(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),n=new $t(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,n,i,r,s),this},absarc:function(e,t,n,i,r,s){return this.absellipse(e,t,n,n,i,r,s),this},ellipse:function(e,t,n,i,r,s,o,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,i,r,s,o,a),this},absellipse:function(e,t,n,i,r,s,o,a){const c=new It(e,t,n,i,r,s,o,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return Gn.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Gn.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Gn.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function ri(e){en.call(this,e),this.uuid=Se.generateUUID(),this.type="Shape",this.holes=[]}ri.prototype=Object.assign(Object.create(en.prototype),{constructor:ri,getPointsHoles:function(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){en.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=en.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){en.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new en().fromJSON(i))}return this}});function We(e,t){xe.call(this),this.type="Light",this.color=new de(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}We.prototype=Object.assign(Object.create(xe.prototype),{constructor:We,isLight:!0,copy:function(e){return xe.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function Xr(e,t,n){We.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(xe.DefaultUp),this.updateMatrix(),this.groundColor=new de(t)}Xr.prototype=Object.assign(Object.create(We.prototype),{constructor:Xr,isHemisphereLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function yn(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new $(512,512),this.map=null,this.mapPass=null,this.matrix=new Re,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ps,this._frameExtents=new $(1,1),this._viewportCount=1,this._viewports=[new ze(0,0,1,1)]}Object.assign(yn.prototype,{_projScreenMatrix:new Re,_lightPositionWorld:new T,_lookTarget:new T,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function ga(){yn.call(this,new Ye(50,1,.5,500))}ga.prototype=Object.assign(Object.create(yn.prototype),{constructor:ga,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=Se.RAD2DEG*2*e.angle,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),yn.prototype.updateMatrices.call(this,e)}});function Yr(e,t,n,i,r,s){We.call(this,e,t),this.type="SpotLight",this.position.copy(xe.DefaultUp),this.updateMatrix(),this.target=new xe,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new ga}Yr.prototype=Object.assign(Object.create(We.prototype),{constructor:Yr,isSpotLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function va(){yn.call(this,new Ye(90,1,.5,500)),this._frameExtents=new $(4,2),this._viewportCount=6,this._viewports=[new ze(2,1,1,1),new ze(0,1,1,1),new ze(3,1,1,1),new ze(1,1,1,1),new ze(3,0,1,1),new ze(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}va.prototype=Object.assign(Object.create(yn.prototype),{constructor:va,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Zr(e,t,n,i){We.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new va}Zr.prototype=Object.assign(Object.create(We.prototype),{constructor:Zr,isPointLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function si(e,t,n,i,r,s){dn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=s!==void 0?s:2e3,this.updateProjectionMatrix()}si.prototype=Object.assign(Object.create(dn.prototype),{constructor:si,isOrthographicCamera:!0,copy:function(e,t){return dn.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,o=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,s=r+c*this.view.width,o-=l*this.view.offsetY,a=o-l*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=xe.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function ya(){yn.call(this,new si(-5,5,5,-5,.5,500))}ya.prototype=Object.assign(Object.create(yn.prototype),{constructor:ya,isDirectionalLightShadow:!0,updateMatrices:function(e){yn.prototype.updateMatrices.call(this,e)}});function Un(e,t){We.call(this,e,t),this.type="DirectionalLight",this.position.copy(xe.DefaultUp),this.updateMatrix(),this.target=new xe,this.shadow=new ya}Un.prototype=Object.assign(Object.create(We.prototype),{constructor:Un,isDirectionalLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Jr(e,t){We.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}Jr.prototype=Object.assign(Object.create(We.prototype),{constructor:Jr,isAmbientLight:!0});function xa(e,t,n,i){We.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}xa.prototype=Object.assign(Object.create(We.prototype),{constructor:xa,isRectAreaLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=We.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class Kg{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*i),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*n),t.addScaledVector(s[4],1.092548*(n*i)),t.addScaledVector(s[5],1.092548*(i*r)),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],1.092548*(n*r)),t.addScaledVector(s[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],2*.511664*i),t.addScaledVector(s[2],2*.511664*r),t.addScaledVector(s[3],2*.511664*n),t.addScaledVector(s[4],2*.429043*n*i),t.addScaledVector(s[5],2*.429043*i*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],2*.429043*n*r),t.addScaledVector(s[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t){t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}function Wt(e,t){We.call(this,void 0,t),this.type="LightProbe",this.sh=e!==void 0?e:new Kg}Wt.prototype=Object.assign(Object.create(We.prototype),{constructor:Wt,isLightProbe:!0,copy:function(e){return We.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=We.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}});function ba(e){Be.call(this,e),this.textures={}}ba.prototype=Object.assign(Object.create(Be.prototype),{constructor:ba,load:function(e,t,n,i){const r=this,s=new Et(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=new zg[e.type];if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=new de().setHex(e.sheen)),e.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(i.morphNormals=e.morphNormals),e.dithering!==void 0&&(i.dithering=e.dithering),e.vertexTangents!==void 0&&(i.vertexTangents=e.vertexTangents),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const s=e.uniforms[r];i.uniforms[r]={};switch(s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new de().setHex(s.value);break;case"v2":i.uniforms[r].value=new $().fromArray(s.value);break;case"v3":i.uniforms[r].value=new T().fromArray(s.value);break;case"v4":i.uniforms[r].value=new ze().fromArray(s.value);break;case"m3":i.uniforms[r].value=new pt().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Re().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new $().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new $().fromArray(e.clearcoatNormalScale)),e.transmission!==void 0&&(i.transmission=e.transmission),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),i},setTextures:function(e){return this.textures=e,this}});const zn={decodeText:function(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function eo(){Ee.call(this),this.type="InstancedBufferGeometry",this.instanceCount=Infinity}eo.prototype=Object.assign(Object.create(Ee.prototype),{constructor:eo,isInstancedBufferGeometry:!0,copy:function(e){return Ee.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=Ee.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}});function _a(e,t,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Te.call(this,e,t,n),this.meshPerAttribute=i||1}_a.prototype=Object.assign(Object.create(Te.prototype),{constructor:_a,isInstancedBufferAttribute:!0,copy:function(e){return Te.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Te.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function wa(e){Be.call(this,e)}wa.prototype=Object.assign(Object.create(Be.prototype),{constructor:wa,load:function(e,t,n,i){const r=this,s=new Et(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t={},n={};function i(f,d){if(t[d]!==void 0)return t[d];const m=f.interleavedBuffers,y=m[d],v=r(f,y.buffer),g=new to[y.type](v),p=new vt(g,y.stride);return p.uuid=y.uuid,t[d]=p,p}function r(f,d){if(n[d]!==void 0)return n[d];const m=f.arrayBuffers,y=m[d],v=new Uint32Array(y).buffer;return n[d]=v,v}const s=e.isInstancedBufferGeometry?new eo:new Ee,o=e.data.index;if(o!==void 0){const f=new to[o.type](o.array);s.setIndex(new Te(f,1))}const a=e.data.attributes;for(const f in a){const d=a[f];let m;if(d.isInterleavedBufferAttribute){const y=i(e.data,d.data);m=new fn(y,d.itemSize,d.offset,d.normalized)}else{const y=new to[d.type](d.array),v=d.isInstancedBufferAttribute?_a:Te;m=new v(y,d.itemSize,d.normalized)}d.name!==void 0&&(m.name=d.name),s.setAttribute(f,m)}const c=e.data.morphAttributes;if(c)for(const f in c){const d=c[f],m=[];for(let y=0,v=d.length;y<v;y++){const g=d[y];let p;if(g.isInterleavedBufferAttribute){const _=i(e.data,g.data);p=new fn(_,g.itemSize,g.offset,g.normalized)}else{const _=new to[g.type](g.array);p=new Te(_,g.itemSize,g.normalized)}g.name!==void 0&&(p.name=g.name),m.push(p)}s.morphAttributes[f]=m}const l=e.data.morphTargetsRelative;l&&(s.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,d=h.length;f!==d;++f){const m=h[f];s.addGroup(m.start,m.count,m.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const f=new T;u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new jt(f,u.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}});const to={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ma(e){Be.call(this,e)}Ma.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ma,load:function(e,t,n,i){const r=this,s=this.path===""?zn.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const o=new Et(r.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.load(e,function(a){let c=null;try{c=JSON.parse(a)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const l=c.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)},parse:function(e,t){const n=this.parseShape(e.shapes),i=this.parseGeometries(e.geometries,n),r=this.parseImages(e.images,function(){t!==void 0&&t(a)}),s=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,s),a=this.parseObject(e.object,i,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&(t!==void 0&&t(a)),a},parseShape:function(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new ri().fromJSON(e[n]);t[r.uuid]=r}return t},parseGeometries:function(e,t){const n={};let i;if(e!==void 0){const r=new wa;for(let s=0,o=e.length;s<o;s++){let a;const c=e[s];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new ut[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new ut[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new ut[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new ut[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new ut[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new ut[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new ut[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new ut[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new ut[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new ut[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new ut[c.type](new ma[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new ut[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new ut[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}a=new ut[c.type](i,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}const l=c.options.extrudePath;l!==void 0&&(c.options.extrudePath=new ma[l.type]().fromJSON(l)),a=new ut[c.type](i,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n},parseMaterials:function(e,t){const n={},i={};if(e!==void 0){const r=new ba;r.setTextures(t);for(let s=0,o=e.length;s<o;s++){const a=e[s];if(a.type==="MultiMaterial"){const c=[];for(let l=0;l<a.materials.length;l++){const h=a.materials[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),c.push(n[h.uuid])}i[a.uuid]=c}else n[a.uuid]===void 0&&(n[a.uuid]=r.parse(a)),i[a.uuid]=n[a.uuid]}}return i},parseAnimations:function(e){const t=[];for(let n=0;n<e.length;n++){const i=e[n],r=St.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),t.push(r)}return t},parseImages:function(e,t){const n=this,i={};let r;function s(o){return n.manager.itemStart(o),r.load(o,function(){n.manager.itemEnd(o)},void 0,function(){n.manager.itemError(o),n.manager.itemEnd(o)})}if(e!==void 0&&e.length>0){const o=new Ll(t);r=new Vr(o),r.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const l=e[a],h=l.url;if(Array.isArray(h)){i[l.uuid]=[];for(let u=0,f=h.length;u<f;u++){const d=h[u],m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[l.uuid].push(s(m))}}else{const u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.resourcePath+l.url;i[l.uuid]=s(u)}}}return i},parseTextures:function(e,t){function n(r,s){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),s[r])}const i={};if(e!==void 0)for(let r=0,s=e.length;r<s;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let a;Array.isArray(t[o.image])?a=new Dn(t[o.image]):a=new Ue(t[o.image]),a.needsUpdate=!0,a.uuid=o.uuid,o.name!==void 0&&(a.name=o.name),o.mapping!==void 0&&(a.mapping=n(o.mapping,Qg)),o.offset!==void 0&&a.offset.fromArray(o.offset),o.repeat!==void 0&&a.repeat.fromArray(o.repeat),o.center!==void 0&&a.center.fromArray(o.center),o.rotation!==void 0&&(a.rotation=o.rotation),o.wrap!==void 0&&(a.wrapS=n(o.wrap[0],Dl),a.wrapT=n(o.wrap[1],Dl)),o.format!==void 0&&(a.format=o.format),o.type!==void 0&&(a.type=o.type),o.encoding!==void 0&&(a.encoding=o.encoding),o.minFilter!==void 0&&(a.minFilter=n(o.minFilter,Nl)),o.magFilter!==void 0&&(a.magFilter=n(o.magFilter,Nl)),o.anisotropy!==void 0&&(a.anisotropy=o.anisotropy),o.flipY!==void 0&&(a.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(a.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(a.unpackAlignment=o.unpackAlignment),i[o.uuid]=a}return i},parseObject:function(e,t,n){let i;function r(c){return t[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",c),t[c]}function s(c){if(c===void 0)return;if(Array.isArray(c)){const l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h];n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),l.push(n[f])}return l}return n[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",c),n[c]}let o,a;switch(e.type){case"Scene":i=new Is,e.background!==void 0&&(Number.isInteger(e.background)&&(i.background=new de(e.background))),e.fog!==void 0&&(e.fog.type==="Fog"?i.fog=new jc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(i.fog=new Wc(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new Ye(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(i.focus=e.focus),e.zoom!==void 0&&(i.zoom=e.zoom),e.filmGauge!==void 0&&(i.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(i.filmOffset=e.filmOffset),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new si(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(i.zoom=e.zoom),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new Jr(e.color,e.intensity);break;case"DirectionalLight":i=new Un(e.color,e.intensity);break;case"PointLight":i=new Zr(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new xa(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new Yr(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new Xr(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=new Wt().fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":o=r(e.geometry),a=s(e.material),i=new qe(o,a);break;case"InstancedMesh":o=r(e.geometry),a=s(e.material);const c=e.count,l=e.instanceMatrix;i=new Qo(o,a,c),i.instanceMatrix=new Te(new Float32Array(l.array),16);break;case"LOD":i=new Fs;break;case"Line":i=new pn(r(e.geometry),s(e.material),e.mode);break;case"LineLoop":i=new Br(r(e.geometry),s(e.material));break;case"LineSegments":i=new $n(r(e.geometry),s(e.material));break;case"PointCloud":case"Points":i=new Fr(r(e.geometry),s(e.material));break;case"Sprite":i=new Ko(s(e.material));break;case"Group":i=new Ht;break;default:i=new xe}if(i.uuid=e.uuid,e.name!==void 0&&(i.name=e.name),e.matrix!==void 0?(i.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(e.position!==void 0&&i.position.fromArray(e.position),e.rotation!==void 0&&i.rotation.fromArray(e.rotation),e.quaternion!==void 0&&i.quaternion.fromArray(e.quaternion),e.scale!==void 0&&i.scale.fromArray(e.scale)),e.castShadow!==void 0&&(i.castShadow=e.castShadow),e.receiveShadow!==void 0&&(i.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(i.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(i.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(i.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(i.visible=e.visible),e.frustumCulled!==void 0&&(i.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(i.renderOrder=e.renderOrder),e.userData!==void 0&&(i.userData=e.userData),e.layers!==void 0&&(i.layers.mask=e.layers),e.children!==void 0){const c=e.children;for(let l=0;l<c.length;l++)i.add(this.parseObject(c[l],t,n))}if(e.type==="LOD"){e.autoUpdate!==void 0&&(i.autoUpdate=e.autoUpdate);const c=e.levels;for(let l=0;l<c.length;l++){const h=c[l],u=i.getObjectByProperty("uuid",h.object);u!==void 0&&i.addLevel(u,h.distance)}}return i}});const Qg={UVMapping:fo,CubeReflectionMapping:ns,CubeRefractionMapping:is,EquirectangularReflectionMapping:lr,EquirectangularRefractionMapping:po,CubeUVReflectionMapping:rs,CubeUVRefractionMapping:ss},Dl={RepeatWrapping:_n,ClampToEdgeWrapping:ot,MirroredRepeatWrapping:pi},Nl={NearestFilter:et,NearestMipmapNearestFilter:ur,NearestMipmapLinearFilter:hr,LinearFilter:Ke,LinearMipmapNearestFilter:os,LinearMipmapLinearFilter:wn};function no(e){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Be.call(this,e),this.options={premultiplyAlpha:"none"}}no.prototype=Object.assign(Object.create(Be.prototype),{constructor:no,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=er.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;fetch(e).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,r.options)}).then(function(o){er.add(e,o),t&&t(o),r.manager.itemEnd(e)}).catch(function(o){i&&i(o),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});function Ol(){this.type="ShapePath",this.color=new de,this.subPaths=[],this.currentPath=null}Object.assign(Ol.prototype,{moveTo:function(e,t){return this.currentPath=new en,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this},bezierCurveTo:function(e,t,n,i,r,s){return this.currentPath.bezierCurveTo(e,t,n,i,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(g){const p=[];for(let _=0,E=g.length;_<E;_++){const R=g[_],w=new ri;w.curves=R.curves,p.push(w)}return p}function i(g,p){const _=p.length;let E=!1;for(let R=_-1,w=0;w<_;R=w++){let P=p[R],X=p[w],B=X.x-P.x,oe=X.y-P.y;if(Math.abs(oe)>Number.EPSILON){if(oe<0&&(P=p[w],B=-B,X=p[R],oe=-oe),g.y<P.y||g.y>X.y)continue;if(g.y===P.y){if(g.x===P.x)return!0}else{const H=oe*(g.x-P.x)-B*(g.y-P.y);if(H===0)return!0;if(H<0)continue;E=!E}}else{if(g.y!==P.y)continue;if(X.x<=g.x&&g.x<=P.x||P.x<=g.x&&g.x<=X.x)return!0}}return E}const r=Bn.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);let o,a,c;const l=[];if(s.length===1)return a=s[0],c=new ri,c.curves=a.curves,l.push(c),l;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],m=0,y;f[m]=void 0,d[m]=[];for(let g=0,p=s.length;g<p;g++)a=s[g],y=a.getPoints(),o=r(y),o=e?!o:o,o?(!h&&f[m]&&m++,f[m]={s:new ri,p:y},f[m].s.curves=a.curves,h&&m++,d[m]=[]):d[m].push({h:a,p:y[0]});if(!f[0])return n(s);if(f.length>1){let g=!1;const p=[];for(let _=0,E=f.length;_<E;_++)u[_]=[];for(let _=0,E=f.length;_<E;_++){const R=d[_];for(let w=0;w<R.length;w++){const P=R[w];let X=!0;for(let B=0;B<f.length;B++)i(P.p,f[B].p)&&(_!==B&&p.push({froms:_,tos:B,hole:w}),X?(X=!1,u[B].push(P)):g=!0);X&&u[_].push(P)}}p.length>0&&(g||(d=u))}let v;for(let g=0,p=f.length;g<p;g++){c=f[g].s,l.push(c),v=d[g];for(let _=0,E=v.length;_<E;_++)c.holes.push(v[_].h)}return l}});function Bl(e){this.type="Font",this.data=e}Object.assign(Bl.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);const n=[],i=$g(e,t,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function $g(e,t,n){const i=Array.from?Array.from(e):String(e).split(""),r=t/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,c=0;for(let l=0;l<i.length;l++){const h=i[l];if(h===`
`)a=0,c-=s;else{const u=ev(h,r,a,c,n);a+=u.offsetX,o.push(u.path)}}return o}function ev(e,t,n,i,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}const o=new Ol;let a,c,l,h,u,f,d,m;if(s.o){const y=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let v=0,g=y.length;v<g;){const p=y[v++];switch(p){case"m":a=y[v++]*t+n,c=y[v++]*t+i,o.moveTo(a,c);break;case"l":a=y[v++]*t+n,c=y[v++]*t+i,o.lineTo(a,c);break;case"q":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,o.quadraticCurveTo(u,f,l,h);break;case"b":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,d=y[v++]*t+n,m=y[v++]*t+i,o.bezierCurveTo(u,f,d,m,l,h);break}}}return{offsetX:s.ha*t,path:o}}function Fl(e){Be.call(this,e)}Fl.prototype=Object.assign(Object.create(Be.prototype),{constructor:Fl,load:function(e,t,n,i){const r=this,s=new Et(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.load(e,function(o){let a;try{a=JSON.parse(o)}catch(l){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const c=r.parse(a);t&&t(c)},n,i)},parse:function(e){return new Bl(e)}});let io;const tv={getContext:function(){return io===void 0&&(io=new(window.AudioContext||window.webkitAudioContext)),io},setContext:function(e){io=e}};function Ta(e){Be.call(this,e)}Ta.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ta,load:function(e,t,n,i){const r=this,s=new Et(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{const a=o.slice(0),c=tv.getContext();c.decodeAudioData(a,function(l){t(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}});function Gl(e,t,n){Wt.call(this,void 0,n);const i=new de().set(e),r=new de().set(t),s=new T(i.r,i.g,i.b),o=new T(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}Gl.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Gl,isHemisphereLightProbe:!0,copy:function(e){return Wt.prototype.copy.call(this,e),this},toJSON:function(e){const t=Wt.prototype.toJSON.call(this,e);return t}});function Ul(e,t){Wt.call(this,void 0,t);const n=new de().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Ul.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Ul,isAmbientLightProbe:!0,copy:function(e){return Wt.prototype.copy.call(this,e),this},toJSON:function(e){const t=Wt.prototype.toJSON.call(this,e);return t}});const zl=new Re,kl=new Re;function nv(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ye,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ye,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(nv.prototype,{update:function(e){const t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(Se.DEG2RAD*t.fov*.5)/t.zoom;let a,c;kl.elements[12]=-r,zl.elements[12]=r,a=-o*t.aspect+s,c=o*t.aspect+s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(i),a=-o*t.aspect-s,c=o*t.aspect-s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(kl),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(zl)}});const Av=new T,Lv=new lt,Rv=new T,Cv=new T;class iv extends xe{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this}setDetune(e){return this.detune=e,this.source.detune===void 0?void 0:(this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this)}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Pv=new T,Iv=new lt,Dv=new T,Nv=new T;class rv{constructor(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}function Hl(e,t,n){this.binding=e,this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Hl.prototype,{accumulate:function(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,c=t+t;a!==c;++a)if(n[a]!==n[a+t]){o.setValue(n,i);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,s=i;r!==s;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)e[t+s]=e[n+s]},_slerp:function(e,t,n,i){lt.slerpFlat(e,t,e,t,e,n,i)},_slerpAdditive:function(e,t,n,i,r){const s=this._workIndex*r;lt.multiplyQuaternionsFlat(e,s,e,t,e,n),lt.slerpFlat(e,t,e,t,e,s,i)},_lerp:function(e,t,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]*s+e[n+o]*i}},_lerpAdditive:function(e,t,n,i,r){for(let s=0;s!==r;++s){const o=t+s;e[o]=e[o]+e[n+s]*i}}});const Sa="\\[\\]\\.:\\/",sv=new RegExp("["+Sa+"]","g"),Ea="[^"+Sa+"]",ov="[^"+Sa.replace("\\.","")+"]",av=/((?:WC+[\/:])*)/.source.replace("WC",Ea),cv=/(WCOD+)?/.source.replace("WCOD",ov),lv=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ea),uv=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ea),hv=new RegExp("^"+av+cv+lv+uv+"$"),dv=["material","materials","bones"];function Vl(e,t,n){const i=n||st.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}Object.assign(Vl.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function st(e,t,n){this.path=t,this.parsedPath=n||st.parseTrackName(t),this.node=st.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(st,{Composite:Vl,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new st.Composite(e,t,n):new st(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(sv,"")},parseTrackName:function(e){const t=hv.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);dv.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===t||o.uuid===t)return o;const a=n(o.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}});Object.assign(st.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=st.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let l=0;l<e.length;l++)if(e[l].name===c){c=l;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const s=e[i];if(s===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(st.prototype,{_getValue_unbound:st.prototype.getValue,_setValue_unbound:st.prototype.setValue});function fv(){this.uuid=Se.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(fv.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const u=arguments[l],f=u.uuid;let d=t[f];if(d===void 0){d=a++,t[f]=d,e.push(u);for(let m=0,y=s;m!==y;++m)r[m].push(new st(u,n[m],i[m]))}else if(d<c){o=e[d];const m=--c,y=e[m];t[y.uuid]=d,e[d]=y,t[f]=m,e[m]=u;for(let v=0,g=s;v!==g;++v){const p=r[v],_=p[m];let E=p[d];p[d]=_,E===void 0&&(E=new st(u,n[v],i[v])),p[m]=E}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],c=a.uuid,l=t[c];if(l!==void 0&&l>=r){const h=r++,u=e[h];t[u.uuid]=l,e[l]=u,t[c]=h,e[h]=a;for(let f=0,d=i;f!==d;++f){const m=n[f],y=m[h],v=m[l];m[l]=y,m[h]=v}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,h=t[l];if(h!==void 0)if(delete t[l],h<r){const u=--r,f=e[u],d=--s,m=e[d];t[f.uuid]=h,e[h]=f,t[m.uuid]=u,e[u]=m,e.pop();for(let y=0,v=i;y!==v;++y){const g=n[y],p=g[u],_=g[d];g[h]=p,g[u]=_,g.pop()}}else{const u=--s,f=e[u];t[f.uuid]=h,e[h]=f,e.pop();for(let d=0,m=i;d!==m;++d){const y=n[d];y[h]=y[u],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,s.push(e),o.push(t),r.push(h);for(let u=l,f=a.length;u!==f;++u){const d=a[u];h[u]=new st(d,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],c=e[o];t[c]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class pv{constructor(e,t,n,i){this._mixer=e,this._clip=t,this._localRoot=n||null,this.blendMode=i||t.blendMode;const r=t.tracks,s=r.length,o=new Array(s),a={endingStart:vi,endingEnd:vi};for(let c=0;c!==s;++c){const l=r[c].createInterpolant(null);o[c]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ih,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,s=r/i,o=i/r;e.warp(1,s,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,s=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=r,a[1]=r+n,c[0]=e/s,c[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const a=(e-r)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const a=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Qa:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(s),c[l].accumulateAdditive(o);break;case vo:default:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(s),c[l].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const s=n===Dh;if(e===0)return r===-1?i:s&&(r&1)===1?t-i:i;if(n===Ph){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(a===1){const c=e<0;this._setEndings(c,!c,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(s&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=yi,i.endingEnd=yi):(e?i.endingStart=this.zeroSlopeAtStart?yi:vi:i.endingStart=us,t?i.endingEnd=this.zeroSlopeAtEnd?yi:vi:i.endingEnd=us)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;s===null&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=r,a[0]=t,o[1]=r+e,a[1]=n,this}}function Wl(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Wl.prototype=Object.assign(Object.create(sn.prototype),{constructor:Wl,_bindAction:function(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,o=e._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let d=l[f];if(d!==void 0)s[h]=d;else{if(d=s[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;d=new Hl(st.create(n,f,m),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),s[h]=d}o[h].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];s===void 0&&(s={},i[t]=s),s[n]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c,t[c]=a,t.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Qs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e=="string"?St.findByName(i,e):e;const o=s!==null?s.uuid:e,a=this._actionsByClip[o];let c=null;if(n===void 0&&(s!==null?n=s.blendMode:n=vo),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const l=new pv(this,s,t,n);return this._bindAction(l,c),this._addInactiveAction(l,o,r),l},existingAction:function(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?St.findByName(n,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let c=0;c!==n;++c){const l=t[c];l._update(i,e,r,s)}const o=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)o[c].apply(s);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const c=s[o];this._deactivateAction(c);const l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class jl{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new jl(this.value.clone===void 0?this.value:this.value.clone())}}function ql(e,t,n){vt.call(this,e,t),this.meshPerAttribute=n||1}ql.prototype=Object.assign(Object.create(vt.prototype),{constructor:ql,isInstancedInterleavedBuffer:!0,copy:function(e){return vt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=vt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=vt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}});function Xl(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(Xl.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Xl.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}});function Yl(e,t,n,i){this.ray=new vr(e,t),this.near=n||0,this.far=i||Infinity,this.camera=null,this.layers=new lc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Zl(e,t){return e.distance-t.distance}function Aa(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),i===!0){const r=e.children;for(let s=0,o=r.length;s<o;s++)Aa(r[s],t,n,!0)}}Object.assign(Yl.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){const i=n||[];return Aa(e,this,i,t),i.sort(Zl),i},intersectObjects:function(e,t,n){const i=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=e.length;r<s;r++)Aa(e[r],this,i,t);return i.sort(Zl),i}});const Jl=new $;class mv{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new $(Infinity,Infinity),this.max=t!==void 0?t:new $(-Infinity,-Infinity)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Jl.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new $),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new $),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new $),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new $),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Jl.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Kl=new T,ro=new T;class gv{constructor(e,t){this.start=e!==void 0?e:new T,this.end=t!==void 0?t:new T}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new T),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new T),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new T),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Kl.subVectors(e,this.start),ro.subVectors(this.end,this.start);const n=ro.dot(ro),i=ro.dot(Kl);let r=i/n;return t&&(r=Se.clamp(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new T),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function so(e){xe.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}so.prototype=Object.create(xe.prototype);so.prototype.constructor=so;so.prototype.isImmediateRenderObject=!0;const Ov=new T,kn=new T,oo=new Re,La=new Re;class vv extends $n{constructor(e){const t=Ql(e),n=new Ee,i=[],r=[],s=new de(0,0,1),o=new de(0,1,0);for(let c=0;c<t.length;c++){const l=t[c];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new ve(i,3)),n.setAttribute("color",new ve(r,3));const a=new yt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");La.getInverse(this.root.matrixWorld);for(let r=0,s=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(oo.multiplyMatrices(La,o.matrixWorld),kn.setFromMatrixPosition(oo),i.setXYZ(s,kn.x,kn.y,kn.z),oo.multiplyMatrices(La,o.parent.matrixWorld),kn.setFromMatrixPosition(oo),i.setXYZ(s+1,kn.x,kn.y,kn.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Ql(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,Ql(e.children[n]));return t}const Bv=new T,Fv=new de,Gv=new de;class yv extends $n{constructor(e,t,n,i){e=e||10,t=t||10,n=new de(n!==void 0?n:4473924),i=new de(i!==void 0?i:8947848);const r=t/2,s=e/t,o=e/2,a=[],c=[];for(let u=0,f=0,d=-o;u<=t;u++,d+=s){a.push(-o,0,d,o,0,d),a.push(d,0,-o,d,0,o);const m=u===r?n:i;m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3}const l=new Ee;l.setAttribute("position",new ve(a,3)),l.setAttribute("color",new ve(c,3));const h=new yt({vertexColors:!0,toneMapped:!1});super(l,h);this.type="GridHelper"}}const Uv=new T,zv=new T,kv=new T,Hv=new T,Vv=new dn,Wv=new Gt,jv=new T,ao=4,Kr=8,qv=Math.pow(2,Kr),$l=[.125,.215,.35,.446,.526,.582],xv=Kr-ao+1+$l.length,Xv={[xi]:0,[Tn]:1,[ec]:2,[tc]:3,[nc]:4,[ic]:5,[hs]:6},Yv=new si,{_lodPlanes:Zv,_sizeLods:Jv,_sigmas:Kv}=bv(),oi=(1+Math.sqrt(5))/2,tr=1/oi,Qv=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,oi,tr),new T(0,oi,-tr),new T(tr,0,oi),new T(-tr,0,oi),new T(oi,tr,0),new T(-oi,tr,0)];function bv(){const e=[],t=[],n=[];let i=Kr;for(let r=0;r<xv;r++){const s=Math.pow(2,i);t.push(s);let o=1/s;r>Kr-ao?o=$l[r-Kr+ao-1]:r==0&&(o=0),n.push(o);const a=1/(s-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,f=6,d=3,m=2,y=1,v=new Float32Array(d*f*u),g=new Float32Array(m*f*u),p=new Float32Array(y*f*u);for(let E=0;E<u;E++){const R=E%3*2/3-1,w=E>2?0:-1,P=[R,w,0,R+2/3,w,0,R+2/3,w+1,0,R,w,0,R+2/3,w+1,0,R,w+1,0];v.set(P,d*f*E),g.set(h,m*f*E);const X=[E,E,E,E,E,E];p.set(X,y*f*E)}const _=new Ee;_.setAttribute("position",new Te(v,d)),_.setAttribute("uv",new Te(g,m)),_.setAttribute("faceIndex",new Te(p,y)),e.push(_),i>ao&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}be.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(be.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};Object.assign(Gn.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Ge;for(let n=0,i=e.length;n<i;n++){const r=e[n];t.vertices.push(new T(r.x,r.y,r.z||0))}return t}});Object.assign(en.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});function _v(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),dt.call(this,e),this.type="catmullrom",this.closed=!0}_v.prototype=Object.create(dt.prototype);function wv(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),dt.call(this,e),this.type="catmullrom"}wv.prototype=Object.create(dt.prototype);function eu(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),dt.call(this,e),this.type="catmullrom"}eu.prototype=Object.create(dt.prototype);Object.assign(eu.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});yv.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};vv.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Be.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),zn.extractUrlBase(e)}});Be.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(Ma.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}});Object.assign(mv.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(Gt.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(jt.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ps.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)};gv.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)};Object.assign(Se,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Se.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Se.ceilPowerOfTwo(e)}});Object.assign(pt.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Re.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new T().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,s)}});ln.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};lt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)};Object.assign(vr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(mt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}});Object.assign(mt,{barycoordFromPoint:function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),mt.getBarycoord(e,t,n,i,r)},normal:function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),mt.getNormal(e,t,n,i)}});Object.assign(ri.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new yl(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Sl(this,e)}});Object.assign($.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(T.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(ze.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ge.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.assign(xe.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(xe.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(qe.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(qe.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Nh},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(Fs.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Nr.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Dr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(be.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}});Ye.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(We.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(Te.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===pr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(pr)}}});Object.assign(Te.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?pr:ds),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ee.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Te(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(Ee.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(eo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}});Object.defineProperties(Yl.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}});Object.defineProperties(vt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===pr},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}});Object.assign(vt.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?pr:ds),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ks.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(Is.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(jl.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(we.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new de}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Na}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}});Object.defineProperties(ti.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Zt.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}});Object.defineProperties(gt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Object.assign(Ui.prototype,{clearTarget:function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Ui.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?Tn:xi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(kc.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ft.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});Object.defineProperties(iv.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,n=new Ta;return n.load(e,function(i){t.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});rv.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Mr.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};jn.crossOrigin=void 0;jn.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Fn;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};jn.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new ua;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};jn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};jn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:uu}}));class Lt{}Lt.ANIMATION_DURATION=400,Lt.DAMPING_DURATION=2e3,Lt.MOUSE_BUTTON={LEFT:0,MIDDLE:1,RIGHT:2};class xt{static clamp(e,t,n){return e<=t?t:e>=n?n:e}}var Rt;(function(e){e[e.EASE_OUT=0]="EASE_OUT",e[e.EASE_IN_OUT=1]="EASE_IN_OUT"})(Rt||(Rt={}));class Ct{constructor(e,t,n=0,i=Lt.ANIMATION_DURATION,r=!0){this._timeStampAtSetEnd=0;this._min=-Infinity;this._max=Infinity;this._hasChanged=!1;this._prevDeltaValue=0;this._prevTimeStamp=1;this._prevDeltaTime=1;this._easing=0;this._timeoutId=-1;this._originalStart=e,this._start=e,this._originalEnd=t,this._end=t,this._value=this._start,this._originalAnimationDuration=this._animationDuration=i,this._easing=n,this._triggerRender=r}static removeFromActiveOnes(e){Ct._activeInstances=Ct._activeInstances.filter(t=>t!==e)}static addToActiveOnes(e){Ct._activeInstances.includes(e)||Ct._activeInstances.push(e)}static updateActiveOnes(e){let t=!1;for(const n of Ct._activeInstances)t=t||n._triggerRender,n.update(e);return t}smoothStep(e){if(e<this._animationDuration){const t=e/this._animationDuration;return xt.clamp(t**2*(3-2*t)*(this._end-this._start)+this._start,this._min,this._max)}else return this._end=xt.clamp(this._end,this._min,this._max),this._end}exponentialOut(e){if(e<this._animationDuration){const t=e/this._animationDuration;return xt.clamp((1-2**(-10*t))*(1024/1023)*(this._end-this._start)+this._start,this._min,this._max)}else return this._end=xt.clamp(this._end,this._min,this._max),this._end}getNextValue(e){return this._easing===1?this.smoothStep(e):this.exponentialOut(e)}increaseEndBy(e,t=!1){this.setEnd(this._end+e,t)}decreaseEndBy(e,t=!1){this.setEnd(this._end-e,t)}setEnd(e,t=!1,n=this._originalAnimationDuration){this._animationDuration=n;const i=t?xt.clamp(e,this._min,this._max):e;Ct.addToActiveOnes(this),this._start=this._value,this._end=i,this._timeStampAtSetEnd=nn.timeStamp,t||(clearTimeout(this._timeoutId),this._timeoutId=setTimeout(()=>{this._end=xt.clamp(this._end,this._min,this._max)},this._animationDuration))}reset(e,t,n=this._originalAnimationDuration){this._animationDuration=n,Ct.addToActiveOnes(this),this._start=e!=null?e:this._originalStart,this._end=t!=null?t:this._originalEnd,this._timeStampAtSetEnd=nn.timeStamp}update(e){this._prevDeltaTime=e-this._prevTimeStamp;const t=e-this._timeStampAtSetEnd,n=this._value;this._value=this.getNextValue(t),this._prevDeltaValue=this._value-n,this._prevTimeStamp=e,this._value===n?(this._start=this._end,this._hasChanged=!1,Ct.removeFromActiveOnes(this)):this._hasChanged=!0}get animationDuration(){return this._animationDuration}get originalAnimationDuration(){return this._originalAnimationDuration}get start(){return this._start}get value(){return this._value}get end(){return this._end}get hasChangedSinceLastTick(){return this._hasChanged}get prevDeltaValue(){return this._prevDeltaValue}get prevDeltaTime(){return this._prevDeltaTime}get derivateAt0(){return this._easing===0?6.938247437862991:0}}Ct._activeInstances=[];class Qr extends Ct{constructor(e,t,n,i,r=Rt.EASE_OUT,s=Lt.ANIMATION_DURATION,o=!0){super(e,t,r,s,o);this._originalMin=this._min=n,this._originalMax=this._max=i}get min(){return this._min}get max(){return this._max}get originalMin(){return this._originalMin}get originalMax(){return this._originalMax}setMin(e){this._min=e;const t=xt.clamp(this._start,this._min,this._max),n=xt.clamp(this._end,this._min,this._max);super.reset(t,n)}setMax(e){this._max=e;const t=xt.clamp(this._start,this._min,this._max),n=xt.clamp(this._end,this._min,this._max);super.reset(t,n)}reset(e,t,n,i,r=!1){this._min=n!=null?n:this._min,this._max=i!=null?i:this._max;const s=e!=null?e:this._originalStart,o=r?xt.clamp(s,this._min,this._max):s,a=t!=null?t:this._originalEnd,c=r?xt.clamp(a,this._min,this._max):a;super.reset(o,c)}isPlaying(){return this.value!==this.end}}class ai{static lengthOfSquared(e){let t=0;for(const n of e)t+=n*n;return t}static lengthOf(e){return Math.sqrt(ai.lengthOfSquared(e))}static normalize(e){const t=ai.lengthOf(e);for(let n=0;n<e.length;++n)e[n]/=t;return e}static getWorldPositionFromUV(e,t){const n=[Math.cos(e)*Math.sin(t),Math.cos(t),Math.sin(e)*Math.sin(t)];return ai.normalize(n)}}class tu{constructor(e,t){this._isPointerDown=!1;this._mouseMoved=!0;this._triggerClickThreshold={deltaCursor:3,deltaTime:1e3};this._pointer={downTimeStamp:null,startX:null,startY:null,prevX:null,prevY:null,prevDeltaX:0,prevDeltaY:0,prevTimeStamp:0,prevDeltaTime:1,triggerClickOnPointerUp:!1};this._u=new Qr(0,0,-Infinity,Infinity,Rt.EASE_OUT,Lt.DAMPING_DURATION);this._v=new Qr(Math.PI/2,Math.PI/2,.01,3.14,Rt.EASE_OUT,Lt.DAMPING_DURATION);this._pinch={startValue:{touchDistance:null,distanceValue:null},currentValue:{touchDistance:null,distanceValue:null}};this._cameraNormalizedPosition=ai.normalize([0,.3,1]);this._timeoutID=null;this._dampOnPointerUp=!1;this._enabled=!1;this._autoRotate=!0;this.SENSITIVITY=1.2;this._prevSpeed=[];this.onWheel=e=>{e.preventDefault();const t=1.1,n=this._sceneManager.distance,i=Math.sign(-e.deltaY)>0?n.end/t:n.end*t;n.setEnd(i,!0)};this.onMouseDown=e=>{e.button===Lt.MOUSE_BUTTON.LEFT&&this.onPointerDown(e.clientX,e.clientY)};this.onTouchStart=e=>{e.preventDefault(),e.touches.length===1?this.onPointerDown(e.touches[0].clientX,e.touches[0].clientY):e.touches.length===2?(this._isPointerDown=!1,this._pinch.startValue.touchDistance=this.getTouchDistance(e),this._pinch.startValue.distanceValue=this._sceneManager.distance.value):this.onPointerUp(e)};this.onMouseMove=e=>{this.onPointerMove(e.clientX,e.clientY)};this.onTouchMove=e=>{e.touches.length===1?this.onPointerMove(e.touches[0].clientX,e.touches[0].clientY):e.touches.length===2&&this._pinch.startValue.touchDistance?(this._pinch.currentValue.touchDistance=this.getTouchDistance(e),this._pinch.currentValue.distanceValue=this._pinch.startValue.touchDistance/this._pinch.currentValue.touchDistance*this._pinch.startValue.distanceValue,this._sceneManager.distance.setEnd(this._pinch.currentValue.distanceValue)):this.onPointerUp(e)};this.onPointerUp=e=>{if(this._isPointerDown){const t=performance.now();this._domElement.classList.remove("rotating");const n=this._prevSpeed,i=ai.lengthOfSquared(n);if(this._dampOnPointerUp&&!isNaN(i)&&0<i&&i<Infinity){this._dampOnPointerUp=!1;const r=this._u.derivateAt0,s=this._u.originalAnimationDuration,o=[s*n[0]/r,s*n[1]/r];this._u.setEnd(this._u.value+o[0]),this._v.setEnd(this._v.value+o[1])}this._triggerClickThreshold.deltaTime<t-this._pointer.downTimeStamp&&(this._pointer.triggerClickOnPointerUp=!1),this._pointer.triggerClickOnPointerUp}this._isPointerDown=!1,this._pointer.triggerClickOnPointerUp=!1,this._pointer.downTimeStamp=null,this._pointer.startX=null,this._pointer.startY=null,this._pointer.prevX=null,this._pointer.prevY=null,this._pointer.prevTimeStamp=0,this._pointer.prevDeltaX=0,this._pointer.prevDeltaY=0,this._pointer.prevDeltaTime=1,this._pinch.startValue.touchDistance=this._pinch.startValue.distanceValue=this._pinch.currentValue.touchDistance=this._pinch.currentValue.distanceValue=null};this.cancelDamping=()=>{this._dampOnPointerUp=!1};this._domElement=e,this._sceneManager=t}getTouchDistance(e){const t={x:e.touches[0].clientX,y:e.touches[0].clientY},n={x:e.touches[1].clientX,y:e.touches[1].clientY},i={x:n.x-t.x,y:n.y-t.y},r=Math.sqrt(i.x*i.x+i.y*i.y);return r}onPointerDown(e,t){this.stopRotating(),this._isPointerDown=!0,this._mouseMoved=!1,this._pointer.startX=this._pointer.prevX=e,this._pointer.startY=this._pointer.prevY=t,this._pointer.downTimeStamp=performance.now(),this._pointer.prevTimeStamp=this._pointer.downTimeStamp,this._pointer.triggerClickOnPointerUp=!0,this._domElement.classList.add("rotating"),this._u.reset(this._u.value,this._u.value),this._v.reset(this._v.value,this._v.value)}onPointerMove(e,t){if(this._isPointerDown&&(this._mouseMoved=e!==this._pointer.prevX||t!==this._pointer.prevY,this._mouseMoved)){if(this._domElement.classList.add("rotating"),this._pointer.prevX!=null&&this._pointer.prevY!=null){const i=this._pointer.prevX-e,r=t-this._pointer.prevY,s=i*this.SENSITIVITY/window.innerHeight,o=r*this.SENSITIVITY/window.innerHeight,a=this._pointer.startX-e,c=this._pointer.startY-t;(this._triggerClickThreshold.deltaCursor<Math.abs(a)||this._triggerClickThreshold.deltaCursor<Math.abs(c))&&(this._pointer.triggerClickOnPointerUp=!1),this._pointer.prevDeltaX=this._pointer.prevX-e,this._pointer.prevDeltaY=t-this._pointer.prevY,this._u.reset(this._u.end-s,this._u.end-s),this._v.reset(this._v.end-o,this._v.end-o)}this._pointer.prevX=e,this._pointer.prevY=t;const n=performance.now();this._triggerClickThreshold.deltaTime<n-this._pointer.downTimeStamp&&(this._pointer.triggerClickOnPointerUp=!1),this._pointer.prevDeltaTime=n-this._pointer.prevTimeStamp,this._pointer.prevTimeStamp=n,this._dampOnPointerUp=!0,clearTimeout(this._timeoutID),this._timeoutID=setTimeout(this.cancelDamping,100)}}setUVFromSphereSufracePoint(e){const t=Math.PI-Math.atan2(e[2],e[0]);this._u.reset(t,t);const n=Math.PI/2-Math.asin(e[1]);this._v.reset(n,n)}activate(){this._enabled||(this._enabled=!0,this.setUVFromSphereSufracePoint(this._cameraNormalizedPosition),this._domElement.addEventListener("mousedown",this.onMouseDown),this._domElement.addEventListener("touchstart",this.onTouchStart),this._domElement.addEventListener("wheel",this.onWheel),window.addEventListener("mousemove",this.onMouseMove),window.addEventListener("touchmove",this.onTouchMove),window.addEventListener("mouseup",this.onPointerUp),window.addEventListener("touchend",this.onPointerUp),window.addEventListener("touchcancel",this.onPointerUp))}deactivate(){this._enabled&&(this._enabled=!1,this._isPointerDown=!1,this._domElement.classList.remove("rotating"),this._domElement.removeEventListener("mousedown",this.onMouseDown),this._domElement.removeEventListener("touchstart",this.onTouchStart),this._domElement.removeEventListener("wheel",this.onWheel),window.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("touchmove",this.onTouchMove),window.removeEventListener("mouseup",this.onPointerUp),window.removeEventListener("touchend",this.onPointerUp),window.removeEventListener("touchcancel",this.onPointerUp))}stopRotating(){this._autoRotate=!1,this._u.reset(this._u.value,this._u.value),this._v.reset(this._v.value,this._v.value)}update(){if(this._enabled)return this._autoRotate&&this._u.reset(this._u.end+5e-4,this._u.end+5e-4),(this._u.hasChangedSinceLastTick||this._v.hasChangedSinceLastTick)&&(this._prevSpeed[0]=this._u.prevDeltaValue/this._u.prevDeltaTime,this._prevSpeed[1]=this._v.prevDeltaValue/this._v.prevDeltaTime,this._cameraNormalizedPosition=ai.getWorldPositionFromUV(this._u.value,this._v.value),this._sceneManager.needsRender=!0),this._cameraNormalizedPosition}}var nu=function(){function e(M){Be.call(this,M),this.dracoLoader=null,this.ddsLoader=null,this.ktx2Loader=null,this.pluginCallbacks=[],this.register(function(x){return new o(x)}),this.register(function(x){return new c(x)}),this.register(function(x){return new a(x)})}e.prototype=Object.assign(Object.create(Be.prototype),{constructor:e,load:function(M,x,I,A){var D=this,N;this.resourcePath!==""?N=this.resourcePath:this.path!==""?N=this.path:N=zn.extractUrlBase(M),D.manager.itemStart(M);var F=function(U){A?A(U):console.error(U),D.manager.itemError(M),D.manager.itemEnd(M)},C=new Et(D.manager);C.setPath(this.path),C.setResponseType("arraybuffer"),C.setRequestHeader(this.requestHeader),D.crossOrigin==="use-credentials"&&C.setWithCredentials(!0),C.load(M,function(U){try{D.parse(U,N,function(k){x(k),D.manager.itemEnd(M)},F)}catch(k){F(k)}},I,F)},setDRACOLoader:function(M){return this.dracoLoader=M,this},setDDSLoader:function(M){return this.ddsLoader=M,this},setKTX2Loader:function(M){return this.ktx2Loader=M,this},register:function(M){return this.pluginCallbacks.indexOf(M)===-1&&this.pluginCallbacks.push(M),this},unregister:function(M){return this.pluginCallbacks.indexOf(M)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(M),1),this},parse:function(M,x,I,A){var D,N={},F={};if(typeof M=="string")D=M;else{var C=zn.decodeText(new Uint8Array(M,0,4));if(C===l){try{N[n.KHR_BINARY_GLTF]=new f(M)}catch(S){A&&A(S);return}D=N[n.KHR_BINARY_GLTF].content}else D=zn.decodeText(new Uint8Array(M))}var U=JSON.parse(D);if(U.asset===void 0||U.asset.version[0]<2){A&&A(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}var k=new ae(U,{path:x||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager,ktx2Loader:this.ktx2Loader});k.fileLoader.setRequestHeader(this.requestHeader);for(var j=0;j<this.pluginCallbacks.length;j++){var V=this.pluginCallbacks[j](k);F[V.name]=V,N[V.name]=!0}if(U.extensionsUsed)for(var j=0;j<U.extensionsUsed.length;++j){var ee=U.extensionsUsed[j],b=U.extensionsRequired||[];switch(ee){case n.KHR_LIGHTS_PUNCTUAL:N[ee]=new r(U);break;case n.KHR_MATERIALS_UNLIT:N[ee]=new s;break;case n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:N[ee]=new v;break;case n.KHR_DRACO_MESH_COMPRESSION:N[ee]=new d(U,this.dracoLoader);break;case n.MSFT_TEXTURE_DDS:N[ee]=new i(this.ddsLoader);break;case n.KHR_TEXTURE_TRANSFORM:N[ee]=new m;break;case n.KHR_MESH_QUANTIZATION:N[ee]=new g;break;default:b.indexOf(ee)>=0&&F[ee]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+ee+'".')}}k.setExtensions(N),k.setPlugins(F),k.parse(I,A)}});function t(){var M={};return{get:function(x){return M[x]},add:function(x,I){M[x]=I},remove:function(x){delete M[x]},removeAll:function(){M={}}}}var n={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function i(M){if(!M)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader");this.name=n.MSFT_TEXTURE_DDS,this.ddsLoader=M}function r(M){this.name=n.KHR_LIGHTS_PUNCTUAL;var x=M.extensions&&M.extensions[n.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=x.lights||[]}r.prototype.loadLight=function(M){var x=this.lightDefs[M],I,A=new de(16777215);x.color!==void 0&&A.fromArray(x.color);var D=x.range!==void 0?x.range:0;switch(x.type){case"directional":I=new Un(A),I.target.position.set(0,0,-1),I.add(I.target);break;case"point":I=new Zr(A),I.distance=D;break;case"spot":I=new Yr(A),I.distance=D,x.spot=x.spot||{},x.spot.innerConeAngle=x.spot.innerConeAngle!==void 0?x.spot.innerConeAngle:0,x.spot.outerConeAngle=x.spot.outerConeAngle!==void 0?x.spot.outerConeAngle:Math.PI/4,I.angle=x.spot.outerConeAngle,I.penumbra=1-x.spot.innerConeAngle/x.spot.outerConeAngle,I.target.position.set(0,0,-1),I.add(I.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+x.type+'".')}return I.position.set(0,0,0),I.decay=2,x.intensity!==void 0&&(I.intensity=x.intensity),I.name=x.name||"light_"+M,Promise.resolve(I)};function s(){this.name=n.KHR_MATERIALS_UNLIT}s.prototype.getMaterialType=function(){return wt},s.prototype.extendParams=function(M,x,I){var A=[];M.color=new de(1,1,1),M.opacity=1;var D=x.pbrMetallicRoughness;if(D){if(Array.isArray(D.baseColorFactor)){var N=D.baseColorFactor;M.color.fromArray(N),M.opacity=N[3]}D.baseColorTexture!==void 0&&A.push(I.assignTexture(M,"map",D.baseColorTexture))}return Promise.all(A)};function o(M){this.parser=M,this.name=n.KHR_MATERIALS_CLEARCOAT}o.prototype.getMaterialType=function(M){var x=this.parser,I=x.json.materials[M];return!I.extensions||!I.extensions[this.name]?null:Zt},o.prototype.extendMaterialParams=function(M,x){var I=this.parser,A=I.json.materials[M];if(!A.extensions||!A.extensions[this.name])return Promise.resolve();var D=[],N=A.extensions[this.name];if(N.clearcoatFactor!==void 0&&(x.clearcoat=N.clearcoatFactor),N.clearcoatTexture!==void 0&&D.push(I.assignTexture(x,"clearcoatMap",N.clearcoatTexture)),N.clearcoatRoughnessFactor!==void 0&&(x.clearcoatRoughness=N.clearcoatRoughnessFactor),N.clearcoatRoughnessTexture!==void 0&&D.push(I.assignTexture(x,"clearcoatRoughnessMap",N.clearcoatRoughnessTexture)),N.clearcoatNormalTexture!==void 0&&(D.push(I.assignTexture(x,"clearcoatNormalMap",N.clearcoatNormalTexture)),N.clearcoatNormalTexture.scale!==void 0)){var F=N.clearcoatNormalTexture.scale;x.clearcoatNormalScale=new $(F,F)}return Promise.all(D)};function a(M){this.parser=M,this.name=n.KHR_MATERIALS_TRANSMISSION}a.prototype.getMaterialType=function(M){var x=this.parser,I=x.json.materials[M];return!I.extensions||!I.extensions[this.name]?null:Zt},a.prototype.extendMaterialParams=function(M,x){var I=this.parser,A=I.json.materials[M];if(!A.extensions||!A.extensions[this.name])return Promise.resolve();var D=[],N=A.extensions[this.name];return N.transmissionFactor!==void 0&&(x.transmission=N.transmissionFactor),N.transmissionTexture!==void 0&&D.push(I.assignTexture(x,"transmissionMap",N.transmissionTexture)),Promise.all(D)};function c(M){this.parser=M,this.name=n.KHR_TEXTURE_BASISU}c.prototype.loadTexture=function(M){var x=this.parser,I=x.json,A=I.textures[M];if(!A.extensions||!A.extensions[this.name])return null;var D=A.extensions[this.name],N=I.images[D.source],F=x.options.ktx2Loader;if(!F)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return x.loadTextureImage(M,N,F)};var l="glTF",h=12,u={JSON:1313821514,BIN:5130562};function f(M){this.name=n.KHR_BINARY_GLTF,this.content=null,this.body=null;var x=new DataView(M,0,h);if(this.header={magic:zn.decodeText(new Uint8Array(M.slice(0,4))),version:x.getUint32(4,!0),length:x.getUint32(8,!0)},this.header.magic!==l)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");for(var I=new DataView(M,h),A=0;A<I.byteLength;){var D=I.getUint32(A,!0);A+=4;var N=I.getUint32(A,!0);if(A+=4,N===u.JSON){var F=new Uint8Array(M,h+A,D);this.content=zn.decodeText(F)}else if(N===u.BIN){var C=h+A;this.body=M.slice(C,C+D)}A+=D}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}function d(M,x){if(!x)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=n.KHR_DRACO_MESH_COMPRESSION,this.json=M,this.dracoLoader=x,this.dracoLoader.preload()}d.prototype.decodePrimitive=function(M,x){var I=this.json,A=this.dracoLoader,D=M.extensions[this.name].bufferView,N=M.extensions[this.name].attributes,F={},C={},U={};for(var k in N){var j=X[k]||k.toLowerCase();F[j]=N[k]}for(k in M.attributes){var j=X[k]||k.toLowerCase();if(N[k]!==void 0){var V=I.accessors[M.attributes[k]],ee=E[V.componentType];U[j]=ee,C[j]=V.normalized===!0}}return x.getDependency("bufferView",D).then(function(b){return new Promise(function(S){A.decodeDracoFile(b,function(Q){for(var J in Q.attributes){var O=Q.attributes[J],ne=C[J];ne!==void 0&&(O.normalized=ne)}S(Q)},F,U)})})};function m(){this.name=n.KHR_TEXTURE_TRANSFORM}m.prototype.extendTexture=function(M,x){return M=M.clone(),x.offset!==void 0&&M.offset.fromArray(x.offset),x.rotation!==void 0&&(M.rotation=x.rotation),x.scale!==void 0&&M.repeat.fromArray(x.scale),x.texCoord!==void 0&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),M.needsUpdate=!0,M};function y(M){rt.call(this),this.isGLTFSpecularGlossinessMaterial=!0;var x=["#ifdef USE_SPECULARMAP","	uniform sampler2D specularMap;","#endif"].join(`
`),I=["#ifdef USE_GLOSSINESSMAP","	uniform sampler2D glossinessMap;","#endif"].join(`
`),A=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","	vec4 texelSpecular = texture2D( specularMap, vUv );","	texelSpecular = sRGBToLinear( texelSpecular );","	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","	specularFactor *= texelSpecular.rgb;","#endif"].join(`
`),D=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","	vec4 texelGlossiness = texture2D( glossinessMap, vUv );","	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","	glossinessFactor *= texelGlossiness.a;","#endif"].join(`
`),N=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );","material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.","material.specularRoughness += geometryRoughness;","material.specularRoughness = min( material.specularRoughness, 1.0 );","material.specularColor = specularFactor.rgb;"].join(`
`),F={specular:{value:new de().setHex(16777215)},glossiness:{value:1},specularMap:{value:null},glossinessMap:{value:null}};this._extraUniforms=F,this.onBeforeCompile=function(C){for(var U in F)C.uniforms[U]=F[U];C.fragmentShader=C.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;"),C.fragmentShader=C.fragmentShader.replace("uniform float metalness;","uniform float glossiness;"),C.fragmentShader=C.fragmentShader.replace("#include <roughnessmap_pars_fragment>",x),C.fragmentShader=C.fragmentShader.replace("#include <metalnessmap_pars_fragment>",I),C.fragmentShader=C.fragmentShader.replace("#include <roughnessmap_fragment>",A),C.fragmentShader=C.fragmentShader.replace("#include <metalnessmap_fragment>",D),C.fragmentShader=C.fragmentShader.replace("#include <lights_physical_fragment>",N)},Object.defineProperties(this,{specular:{get:function(){return F.specular.value},set:function(C){F.specular.value=C}},specularMap:{get:function(){return F.specularMap.value},set:function(C){F.specularMap.value=C}},glossiness:{get:function(){return F.glossiness.value},set:function(C){F.glossiness.value=C}},glossinessMap:{get:function(){return F.glossinessMap.value},set:function(C){F.glossinessMap.value=C,C?(this.defines.USE_GLOSSINESSMAP="",this.defines.USE_ROUGHNESSMAP=""):(delete this.defines.USE_ROUGHNESSMAP,delete this.defines.USE_GLOSSINESSMAP)}}}),delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this.setValues(M)}y.prototype=Object.create(rt.prototype),y.prototype.constructor=y,y.prototype.copy=function(M){return rt.prototype.copy.call(this,M),this.specularMap=M.specularMap,this.specular.copy(M.specular),this.glossinessMap=M.glossinessMap,this.glossiness=M.glossiness,delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this};function v(){return{name:n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return y},extendParams:function(M,x,I){var A=x.extensions[this.name];M.color=new de(1,1,1),M.opacity=1;var D=[];if(Array.isArray(A.diffuseFactor)){var N=A.diffuseFactor;M.color.fromArray(N),M.opacity=N[3]}if(A.diffuseTexture!==void 0&&D.push(I.assignTexture(M,"map",A.diffuseTexture)),M.emissive=new de(0,0,0),M.glossiness=A.glossinessFactor!==void 0?A.glossinessFactor:1,M.specular=new de(1,1,1),Array.isArray(A.specularFactor)&&M.specular.fromArray(A.specularFactor),A.specularGlossinessTexture!==void 0){var F=A.specularGlossinessTexture;D.push(I.assignTexture(M,"glossinessMap",F)),D.push(I.assignTexture(M,"specularMap",F))}return Promise.all(D)},createMaterial:function(M){var x=new y(M);return x.fog=!0,x.color=M.color,x.map=M.map===void 0?null:M.map,x.lightMap=null,x.lightMapIntensity=1,x.aoMap=M.aoMap===void 0?null:M.aoMap,x.aoMapIntensity=1,x.emissive=M.emissive,x.emissiveIntensity=1,x.emissiveMap=M.emissiveMap===void 0?null:M.emissiveMap,x.bumpMap=M.bumpMap===void 0?null:M.bumpMap,x.bumpScale=1,x.normalMap=M.normalMap===void 0?null:M.normalMap,x.normalMapType=Sn,M.normalScale&&(x.normalScale=M.normalScale),x.displacementMap=null,x.displacementScale=1,x.displacementBias=0,x.specularMap=M.specularMap===void 0?null:M.specularMap,x.specular=M.specular,x.glossinessMap=M.glossinessMap===void 0?null:M.glossinessMap,x.glossiness=M.glossiness,x.alphaMap=null,x.envMap=M.envMap===void 0?null:M.envMap,x.envMapIntensity=1,x.refractionRatio=.98,x}}}function g(){this.name=n.KHR_MESH_QUANTIZATION}function p(M,x,I,A){ht.call(this,M,x,I,A)}p.prototype=Object.create(ht.prototype),p.prototype.constructor=p,p.prototype.copySampleValue_=function(M){for(var x=this.resultBuffer,I=this.sampleValues,A=this.valueSize,D=M*A*3+A,N=0;N!==A;N++)x[N]=I[D+N];return x},p.prototype.beforeStart_=p.prototype.copySampleValue_,p.prototype.afterEnd_=p.prototype.copySampleValue_,p.prototype.interpolate_=function(M,x,I,A){for(var D=this.resultBuffer,N=this.sampleValues,F=this.valueSize,C=F*2,U=F*3,k=A-x,j=(I-x)/k,V=j*j,ee=V*j,b=M*U,S=b-U,Q=-2*ee+3*V,J=ee-V,O=1-Q,ne=J-V+j,se=0;se!==F;se++){var ye=N[S+se+F],ce=N[S+se+C]*k,pe=N[b+se+F],me=N[b+se]*k;D[se]=O*ye+ne*ce+Q*pe+J*me}return D};var _={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},E={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},R={9728:et,9729:Ke,9984:ur,9985:os,9986:hr,9987:wn},w={33071:ot,33648:pi,10497:_n},P={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},X={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},B={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},oe={CUBICSPLINE:void 0,LINEAR:Wn,STEP:gi},H={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function Y(M,x){return typeof M!="string"||M===""?"":(/^https?:\/\//i.test(x)&&/^\//.test(M)&&(x=x.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(M)||(/^data:.*,.*$/i.test(M)||/^blob:.*$/i.test(M))?M:x+M)}function W(M){return M.DefaultMaterial===void 0&&(M.DefaultMaterial=new rt({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:bn})),M.DefaultMaterial}function z(M,x,I){for(var A in I.extensions)M[A]===void 0&&(x.userData.gltfExtensions=x.userData.gltfExtensions||{},x.userData.gltfExtensions[A]=I.extensions[A])}function G(M,x){x.extras!==void 0&&(typeof x.extras=="object"?Object.assign(M.userData,x.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+x.extras))}function K(M,x,I){for(var A=!1,D=!1,N=0,F=x.length;N<F;N++){var C=x[N];if(C.POSITION!==void 0&&(A=!0),C.NORMAL!==void 0&&(D=!0),A&&D)break}if(!A&&!D)return Promise.resolve(M);for(var U=[],k=[],N=0,F=x.length;N<F;N++){var C=x[N];if(A){var j=C.POSITION!==void 0?I.getDependency("accessor",C.POSITION):M.attributes.position;U.push(j)}if(D){var j=C.NORMAL!==void 0?I.getDependency("accessor",C.NORMAL):M.attributes.normal;k.push(j)}}return Promise.all([Promise.all(U),Promise.all(k)]).then(function(V){var ee=V[0],b=V[1];return A&&(M.morphAttributes.position=ee),D&&(M.morphAttributes.normal=b),M.morphTargetsRelative=!0,M})}function ie(M,x){if(M.updateMorphTargets(),x.weights!==void 0)for(var I=0,A=x.weights.length;I<A;I++)M.morphTargetInfluences[I]=x.weights[I];if(x.extras&&Array.isArray(x.extras.targetNames)){var D=x.extras.targetNames;if(M.morphTargetInfluences.length===D.length){M.morphTargetDictionary={};for(var I=0,A=D.length;I<A;I++)M.morphTargetDictionary[D[I]]=I}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function re(M){var x=M.extensions&&M.extensions[n.KHR_DRACO_MESH_COMPRESSION],I;return x?I="draco:"+x.bufferView+":"+x.indices+":"+ue(x.attributes):I=M.indices+":"+ue(M.attributes)+":"+M.mode,I}function ue(M){for(var x="",I=Object.keys(M).sort(),A=0,D=I.length;A<D;A++)x+=I[A]+":"+M[I[A]]+";";return x}function ae(M,x){this.json=M||{},this.extensions={},this.plugins={},this.options=x||{},this.cache=new t,this.associations=new Map,this.primitiveCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},typeof createImageBitmap!="undefined"&&/Firefox/.test(navigator.userAgent)===!1?this.textureLoader=new no(this.options.manager):this.textureLoader=new Fn(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new Et(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}ae.prototype.setExtensions=function(M){this.extensions=M},ae.prototype.setPlugins=function(M){this.plugins=M},ae.prototype.parse=function(M,x){var I=this,A=this.json,D=this.extensions;this.cache.removeAll(),this._markDefs(),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then(function(N){var F={scene:N[0][A.scene||0],scenes:N[0],animations:N[1],cameras:N[2],asset:A.asset,parser:I,userData:{}};z(D,F,A),G(F,A),M(F)}).catch(x)},ae.prototype._markDefs=function(){for(var M=this.json.nodes||[],x=this.json.skins||[],I=this.json.meshes||[],A=0,D=x.length;A<D;A++)for(var N=x[A].joints,F=0,C=N.length;F<C;F++)M[N[F]].isBone=!0;for(var U=0,k=M.length;U<k;U++){var j=M[U];j.mesh!==void 0&&(this._addNodeRef(this.meshCache,j.mesh),j.skin!==void 0&&(I[j.mesh].isSkinnedMesh=!0)),j.camera!==void 0&&this._addNodeRef(this.cameraCache,j.camera),j.extensions&&j.extensions[n.KHR_LIGHTS_PUNCTUAL]&&j.extensions[n.KHR_LIGHTS_PUNCTUAL].light!==void 0&&this._addNodeRef(this.lightCache,j.extensions[n.KHR_LIGHTS_PUNCTUAL].light)}},ae.prototype._addNodeRef=function(M,x){if(x===void 0)return;M.refs[x]===void 0&&(M.refs[x]=M.uses[x]=0),M.refs[x]++},ae.prototype._getNodeRef=function(M,x,I){if(M.refs[x]<=1)return I;var A=I.clone();return A.name+="_instance_"+M.uses[x]++,A},ae.prototype._invokeOne=function(M){var x=Object.values(this.plugins);x.push(this);for(var I=0;I<x.length;I++){var A=M(x[I]);if(A)return A}},ae.prototype._invokeAll=function(M){var x=Object.values(this.plugins);x.unshift(this);for(var I=[],A=0;A<x.length;A++)I.push(M(x[A]));return Promise.all(I)},ae.prototype.getDependency=function(M,x){var I=M+":"+x,A=this.cache.get(I);if(!A){switch(M){case"scene":A=this.loadScene(x);break;case"node":A=this.loadNode(x);break;case"mesh":A=this._invokeOne(function(D){return D.loadMesh&&D.loadMesh(x)});break;case"accessor":A=this.loadAccessor(x);break;case"bufferView":A=this._invokeOne(function(D){return D.loadBufferView&&D.loadBufferView(x)});break;case"buffer":A=this.loadBuffer(x);break;case"material":A=this._invokeOne(function(D){return D.loadMaterial&&D.loadMaterial(x)});break;case"texture":A=this._invokeOne(function(D){return D.loadTexture&&D.loadTexture(x)});break;case"skin":A=this.loadSkin(x);break;case"animation":A=this.loadAnimation(x);break;case"camera":A=this.loadCamera(x);break;case"light":A=this.extensions[n.KHR_LIGHTS_PUNCTUAL].loadLight(x);break;default:throw new Error("Unknown type: "+M)}this.cache.add(I,A)}return A},ae.prototype.getDependencies=function(M){var x=this.cache.get(M);if(!x){var I=this,A=this.json[M+(M==="mesh"?"es":"s")]||[];x=Promise.all(A.map(function(D,N){return I.getDependency(M,N)})),this.cache.add(M,x)}return x},ae.prototype.loadBuffer=function(M){var x=this.json.buffers[M],I=this.fileLoader;if(x.type&&x.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+x.type+" buffer type is not supported.");if(x.uri===void 0&&M===0)return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);var A=this.options;return new Promise(function(D,N){I.load(Y(x.uri,A.path),D,void 0,function(){N(new Error('THREE.GLTFLoader: Failed to load buffer "'+x.uri+'".'))})})},ae.prototype.loadBufferView=function(M){var x=this.json.bufferViews[M];return this.getDependency("buffer",x.buffer).then(function(I){var A=x.byteLength||0,D=x.byteOffset||0;return I.slice(D,D+A)})},ae.prototype.loadAccessor=function(M){var x=this,I=this.json,A=this.json.accessors[M];if(A.bufferView===void 0&&A.sparse===void 0)return Promise.resolve(null);var D=[];return A.bufferView!==void 0?D.push(this.getDependency("bufferView",A.bufferView)):D.push(null),A.sparse!==void 0&&(D.push(this.getDependency("bufferView",A.sparse.indices.bufferView)),D.push(this.getDependency("bufferView",A.sparse.values.bufferView))),Promise.all(D).then(function(N){var F=N[0],C=P[A.type],U=E[A.componentType],k=U.BYTES_PER_ELEMENT,j=k*C,V=A.byteOffset||0,ee=A.bufferView!==void 0?I.bufferViews[A.bufferView].byteStride:void 0,b=A.normalized===!0,S,Q;if(ee&&ee!==j){var J=Math.floor(V/ee),O="InterleavedBuffer:"+A.bufferView+":"+A.componentType+":"+J+":"+A.count,ne=x.cache.get(O);ne||(S=new U(F,J*ee,A.count*ee/k),ne=new vt(S,ee/k),x.cache.add(O,ne)),Q=new fn(ne,C,V%ee/k,b)}else F===null?S=new U(A.count*C):S=new U(F,V,A.count*C),Q=new Te(S,C,b);if(A.sparse!==void 0){var se=P.SCALAR,ye=E[A.sparse.indices.componentType],ce=A.sparse.indices.byteOffset||0,pe=A.sparse.values.byteOffset||0,me=new ye(N[1],ce,A.sparse.count*se),Me=new U(N[2],pe,A.sparse.count*C);F!==null&&(Q=new Te(Q.array.slice(),Q.itemSize,Q.normalized));for(var le=0,_e=me.length;le<_e;le++){var Fe=me[le];if(Q.setX(Fe,Me[le*C]),C>=2&&Q.setY(Fe,Me[le*C+1]),C>=3&&Q.setZ(Fe,Me[le*C+2]),C>=4&&Q.setW(Fe,Me[le*C+3]),C>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return Q})},ae.prototype.loadTexture=function(M){var x=this,I=this.json,A=this.options,D=I.textures[M],N=D.extensions||{},F;N[n.MSFT_TEXTURE_DDS]?F=I.images[N[n.MSFT_TEXTURE_DDS].source]:F=I.images[D.source];var C;return F.uri&&(C=A.manager.getHandler(F.uri)),C||(C=N[n.MSFT_TEXTURE_DDS]?x.extensions[n.MSFT_TEXTURE_DDS].ddsLoader:this.textureLoader),this.loadTextureImage(M,F,C)},ae.prototype.loadTextureImage=function(M,x,I){var A=this,D=this.json,N=this.options,F=D.textures[M],C=self.URL||self.webkitURL,U=x.uri,k=!1,j=!0;return x.mimeType==="image/jpeg"&&(j=!1),x.bufferView!==void 0&&(U=A.getDependency("bufferView",x.bufferView).then(function(V){x.mimeType==="image/png"&&(j=new DataView(V,25,1).getUint8(0,!1)===6),k=!0;var ee=new Blob([V],{type:x.mimeType});return U=C.createObjectURL(ee),U})),Promise.resolve(U).then(function(V){return new Promise(function(ee,b){var S=ee;I.isImageBitmapLoader===!0&&(S=function(Q){ee(new Wi(Q))}),I.load(Y(V,N.path),S,void 0,b)})}).then(function(V){k===!0&&C.revokeObjectURL(U),V.flipY=!1,F.name&&(V.name=F.name),j||(V.format=rn);var ee=D.samplers||{},b=ee[F.sampler]||{};return V.magFilter=R[b.magFilter]||Ke,V.minFilter=R[b.minFilter]||wn,V.wrapS=w[b.wrapS]||_n,V.wrapT=w[b.wrapT]||_n,A.associations.set(V,{type:"textures",index:M}),V})},ae.prototype.assignTexture=function(M,x,I){var A=this;return this.getDependency("texture",I.index).then(function(D){if(I.texCoord!==void 0&&I.texCoord!=0&&!(x==="aoMap"&&I.texCoord==1)&&console.warn("THREE.GLTFLoader: Custom UV set "+I.texCoord+" for texture "+x+" not yet supported."),A.extensions[n.KHR_TEXTURE_TRANSFORM]){var N=I.extensions!==void 0?I.extensions[n.KHR_TEXTURE_TRANSFORM]:void 0;if(N){var F=A.associations.get(D);D=A.extensions[n.KHR_TEXTURE_TRANSFORM].extendTexture(D,N),A.associations.set(D,F)}}M[x]=D})},ae.prototype.assignFinalMaterial=function(M){var x=M.geometry,I=M.material,A=x.attributes.tangent!==void 0,D=x.attributes.color!==void 0,N=x.attributes.normal===void 0,F=M.isSkinnedMesh===!0,C=Object.keys(x.morphAttributes).length>0,U=C&&x.morphAttributes.normal!==void 0;if(M.isPoints){var k="PointsMaterial:"+I.uuid,j=this.cache.get(k);j||(j=new mn,we.prototype.copy.call(j,I),j.color.copy(I.color),j.map=I.map,j.sizeAttenuation=!1,this.cache.add(k,j)),I=j}else if(M.isLine){var k="LineBasicMaterial:"+I.uuid,V=this.cache.get(k);V||(V=new yt,we.prototype.copy.call(V,I),V.color.copy(I.color),this.cache.add(k,V)),I=V}if(A||D||N||F||C){var k="ClonedMaterial:"+I.uuid+":";I.isGLTFSpecularGlossinessMaterial&&(k+="specular-glossiness:"),F&&(k+="skinning:"),A&&(k+="vertex-tangents:"),D&&(k+="vertex-colors:"),N&&(k+="flat-shading:"),C&&(k+="morph-targets:"),U&&(k+="morph-normals:");var ee=this.cache.get(k);ee||(ee=I.clone(),F&&(ee.skinning=!0),A&&(ee.vertexTangents=!0),D&&(ee.vertexColors=!0),N&&(ee.flatShading=!0),C&&(ee.morphTargets=!0),U&&(ee.morphNormals=!0),this.cache.add(k,ee),this.associations.set(ee,this.associations.get(I))),I=ee}I.aoMap&&x.attributes.uv2===void 0&&x.attributes.uv!==void 0&&x.setAttribute("uv2",x.attributes.uv),I.normalScale&&!A&&(I.normalScale.y=-I.normalScale.y),I.clearcoatNormalScale&&!A&&(I.clearcoatNormalScale.y=-I.clearcoatNormalScale.y),M.material=I},ae.prototype.getMaterialType=function(){return rt},ae.prototype.loadMaterial=function(M){var x=this,I=this.json,A=this.extensions,D=I.materials[M],N,F={},C=D.extensions||{},U=[];if(C[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var k=A[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];N=k.getMaterialType(),U.push(k.extendParams(F,D,x))}else if(C[n.KHR_MATERIALS_UNLIT]){var j=A[n.KHR_MATERIALS_UNLIT];N=j.getMaterialType(),U.push(j.extendParams(F,D,x))}else{var V=D.pbrMetallicRoughness||{};if(F.color=new de(1,1,1),F.opacity=1,Array.isArray(V.baseColorFactor)){var ee=V.baseColorFactor;F.color.fromArray(ee),F.opacity=ee[3]}V.baseColorTexture!==void 0&&U.push(x.assignTexture(F,"map",V.baseColorTexture)),F.metalness=V.metallicFactor!==void 0?V.metallicFactor:1,F.roughness=V.roughnessFactor!==void 0?V.roughnessFactor:1,V.metallicRoughnessTexture!==void 0&&(U.push(x.assignTexture(F,"metalnessMap",V.metallicRoughnessTexture)),U.push(x.assignTexture(F,"roughnessMap",V.metallicRoughnessTexture))),N=this._invokeOne(function(S){return S.getMaterialType&&S.getMaterialType(M)}),U.push(this._invokeAll(function(S){return S.extendMaterialParams&&S.extendMaterialParams(M,F)}))}D.doubleSided===!0&&(F.side=di);var b=D.alphaMode||H.OPAQUE;return b===H.BLEND?(F.transparent=!0,F.depthWrite=!1):(F.transparent=!1,b===H.MASK&&(F.alphaTest=D.alphaCutoff!==void 0?D.alphaCutoff:.5)),D.normalTexture!==void 0&&N!==wt&&(U.push(x.assignTexture(F,"normalMap",D.normalTexture)),F.normalScale=new $(1,1),D.normalTexture.scale!==void 0&&F.normalScale.set(D.normalTexture.scale,D.normalTexture.scale)),D.occlusionTexture!==void 0&&N!==wt&&(U.push(x.assignTexture(F,"aoMap",D.occlusionTexture)),D.occlusionTexture.strength!==void 0&&(F.aoMapIntensity=D.occlusionTexture.strength)),D.emissiveFactor!==void 0&&N!==wt&&(F.emissive=new de().fromArray(D.emissiveFactor)),D.emissiveTexture!==void 0&&N!==wt&&U.push(x.assignTexture(F,"emissiveMap",D.emissiveTexture)),Promise.all(U).then(function(){var S;return N===y?S=A[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(F):S=new N(F),D.name&&(S.name=D.name),S.map&&(S.map.encoding=Tn),S.emissiveMap&&(S.emissiveMap.encoding=Tn),G(S,D),x.associations.set(S,{type:"materials",index:M}),D.extensions&&z(A,S,D),S})};function ge(M,x,I){var A=x.attributes,D=new Gt;if(A.POSITION!==void 0){var N=I.json.accessors[A.POSITION],F=N.min,C=N.max;if(F!==void 0&&C!==void 0)D.set(new T(F[0],F[1],F[2]),new T(C[0],C[1],C[2]));else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;var U=x.targets;if(U!==void 0){for(var k=new T,j=new T,V=0,ee=U.length;V<ee;V++){var b=U[V];if(b.POSITION!==void 0){var N=I.json.accessors[b.POSITION],F=N.min,C=N.max;F!==void 0&&C!==void 0?(j.setX(Math.max(Math.abs(F[0]),Math.abs(C[0]))),j.setY(Math.max(Math.abs(F[1]),Math.abs(C[1]))),j.setZ(Math.max(Math.abs(F[2]),Math.abs(C[2]))),k.max(j)):console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}D.expandByVector(k)}M.boundingBox=D;var S=new jt;D.getCenter(S.center),S.radius=D.min.distanceTo(D.max)/2,M.boundingSphere=S}function Ce(M,x,I){var A=x.attributes,D=[];function N(k,j){return I.getDependency("accessor",k).then(function(V){M.setAttribute(j,V)})}for(var F in A){var C=X[F]||F.toLowerCase();if(C in M.attributes)continue;D.push(N(A[F],C))}if(x.indices!==void 0&&!M.index){var U=I.getDependency("accessor",x.indices).then(function(k){M.setIndex(k)});D.push(U)}return G(M,x),ge(M,x,I),Promise.all(D).then(function(){return x.targets!==void 0?K(M,x.targets,I):M})}function Ae(M,x){var I=M.getIndex();if(I===null){var A=[],D=M.getAttribute("position");if(D!==void 0){for(var N=0;N<D.count;N++)A.push(N);M.setIndex(A),I=M.getIndex()}else return console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),M}var F=I.count-2,C=[];if(x===yo)for(var N=1;N<=F;N++)C.push(I.getX(0)),C.push(I.getX(N)),C.push(I.getX(N+1));else for(var N=0;N<F;N++)N%2===0?(C.push(I.getX(N)),C.push(I.getX(N+1)),C.push(I.getX(N+2))):(C.push(I.getX(N+2)),C.push(I.getX(N+1)),C.push(I.getX(N)));C.length/3!==F&&console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");var U=M.clone();return U.setIndex(C),U}return ae.prototype.loadGeometries=function(M){var x=this,I=this.extensions,A=this.primitiveCache;function D(ee){return I[n.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(ee,x).then(function(b){return Ce(b,ee,x)})}for(var N=[],F=0,C=M.length;F<C;F++){var U=M[F],k=re(U),j=A[k];if(j)N.push(j.promise);else{var V;U.extensions&&U.extensions[n.KHR_DRACO_MESH_COMPRESSION]?V=D(U):V=Ce(new Ee,U,x),A[k]={primitive:U,promise:V},N.push(V)}}return Promise.all(N)},ae.prototype.loadMesh=function(M){for(var x=this,I=this.json,A=I.meshes[M],D=A.primitives,N=[],F=0,C=D.length;F<C;F++){var U=D[F].material===void 0?W(this.cache):this.getDependency("material",D[F].material);N.push(U)}return N.push(x.loadGeometries(D)),Promise.all(N).then(function(k){for(var j=k.slice(0,k.length-1),V=k[k.length-1],ee=[],b=0,S=V.length;b<S;b++){var Q=V[b],J=D[b],O,ne=j[b];if(J.mode===_.TRIANGLES||J.mode===_.TRIANGLE_STRIP||J.mode===_.TRIANGLE_FAN||J.mode===void 0)O=A.isSkinnedMesh===!0?new Dr(Q,ne):new qe(Q,ne),O.isSkinnedMesh===!0&&!O.geometry.attributes.skinWeight.normalized&&O.normalizeSkinWeights(),J.mode===_.TRIANGLE_STRIP?O.geometry=Ae(O.geometry,$a):J.mode===_.TRIANGLE_FAN&&(O.geometry=Ae(O.geometry,yo));else if(J.mode===_.LINES)O=new $n(Q,ne);else if(J.mode===_.LINE_STRIP)O=new pn(Q,ne);else if(J.mode===_.LINE_LOOP)O=new Br(Q,ne);else if(J.mode===_.POINTS)O=new Fr(Q,ne);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+J.mode);Object.keys(O.geometry.morphAttributes).length>0&&ie(O,A),O.name=A.name||"mesh_"+M,V.length>1&&(O.name+="_"+b),G(O,A),x.assignFinalMaterial(O),ee.push(O)}if(ee.length===1)return ee[0];for(var se=new Ht,b=0,S=ee.length;b<S;b++)se.add(ee[b]);return se})},ae.prototype.loadCamera=function(M){var x,I=this.json.cameras[M],A=I[I.type];if(!A){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return I.type==="perspective"?x=new Ye(Se.radToDeg(A.yfov),A.aspectRatio||1,A.znear||1,A.zfar||2e6):I.type==="orthographic"&&(x=new si(-A.xmag,A.xmag,A.ymag,-A.ymag,A.znear,A.zfar)),I.name&&(x.name=I.name),G(x,I),Promise.resolve(x)},ae.prototype.loadSkin=function(M){var x=this.json.skins[M],I={joints:x.joints};return x.inverseBindMatrices===void 0?Promise.resolve(I):this.getDependency("accessor",x.inverseBindMatrices).then(function(A){return I.inverseBindMatrices=A,I})},ae.prototype.loadAnimation=function(M){for(var x=this.json,I=x.animations[M],A=[],D=[],N=[],F=[],C=[],U=0,k=I.channels.length;U<k;U++){var j=I.channels[U],V=I.samplers[j.sampler],ee=j.target,b=ee.node!==void 0?ee.node:ee.id,S=I.parameters!==void 0?I.parameters[V.input]:V.input,Q=I.parameters!==void 0?I.parameters[V.output]:V.output;A.push(this.getDependency("node",b)),D.push(this.getDependency("accessor",S)),N.push(this.getDependency("accessor",Q)),F.push(V),C.push(ee)}return Promise.all([Promise.all(A),Promise.all(D),Promise.all(N),Promise.all(F),Promise.all(C)]).then(function(J){for(var O=J[0],ne=J[1],se=J[2],ye=J[3],ce=J[4],pe=[],me=0,Me=O.length;me<Me;me++){var le=O[me],_e=ne[me],Fe=se[me],Qe=ye[me],ci=ce[me];if(le===void 0)continue;le.updateMatrix(),le.matrixAutoUpdate=!0;var li;switch(B[ci.path]){case B.weights:li=ni;break;case B.rotation:li=$i;break;case B.position:case B.scale:default:li=ii;break}var $r=le.name?le.name:le.uuid,co=Qe.interpolation!==void 0?oe[Qe.interpolation]:Wn,xn=[];B[ci.path]===B.weights?le.traverse(function(Hn){Hn.isMesh===!0&&Hn.morphTargetInfluences&&xn.push(Hn.name?Hn.name:Hn.uuid)}):xn.push($r);var Dt=Fe.array;if(Fe.normalized){var Nt;if(Dt.constructor===Int8Array)Nt=1/127;else if(Dt.constructor===Uint8Array)Nt=1/255;else if(Dt.constructor==Int16Array)Nt=1/32767;else if(Dt.constructor===Uint16Array)Nt=1/65535;else throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");for(var nr=new Float32Array(Dt.length),Ot=0,ui=Dt.length;Ot<ui;Ot++)nr[Ot]=Dt[Ot]*Nt;Dt=nr}for(var Ot=0,ui=xn.length;Ot<ui;Ot++){var bt=new li(xn[Ot]+"."+B[ci.path],_e.array,Dt,co);Qe.interpolation==="CUBICSPLINE"&&(bt.createInterpolant=function(Z){return new p(this.times,this.values,this.getValueSize()/3,Z)},bt.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),pe.push(bt)}}var es=I.name?I.name:"animation_"+M;return new St(es,void 0,pe)})},ae.prototype.loadNode=function(M){var x=this.json,I=this.extensions,A=this,D=x.nodes[M];return function(){var N=[];if(D.mesh!==void 0&&N.push(A.getDependency("mesh",D.mesh).then(function(C){var U=A._getNodeRef(A.meshCache,D.mesh,C);return D.weights!==void 0&&U.traverse(function(k){if(!k.isMesh)return;for(var j=0,V=D.weights.length;j<V;j++)k.morphTargetInfluences[j]=D.weights[j]}),U})),D.camera!==void 0&&N.push(A.getDependency("camera",D.camera).then(function(C){return A._getNodeRef(A.cameraCache,D.camera,C)})),D.extensions&&D.extensions[n.KHR_LIGHTS_PUNCTUAL]&&D.extensions[n.KHR_LIGHTS_PUNCTUAL].light!==void 0){var F=D.extensions[n.KHR_LIGHTS_PUNCTUAL].light;N.push(A.getDependency("light",F).then(function(C){return A._getNodeRef(A.lightCache,F,C)}))}return Promise.all(N)}().then(function(N){var F;if(D.isBone===!0?F=new Gs:N.length>1?F=new Ht:N.length===1?F=N[0]:F=new xe,F!==N[0])for(var C=0,U=N.length;C<U;C++)F.add(N[C]);if(D.name&&(F.userData.name=D.name,F.name=st.sanitizeNodeName(D.name)),G(F,D),D.extensions&&z(I,F,D),D.matrix!==void 0){var k=new Re;k.fromArray(D.matrix),F.applyMatrix4(k)}else D.translation!==void 0&&F.position.fromArray(D.translation),D.rotation!==void 0&&F.quaternion.fromArray(D.rotation),D.scale!==void 0&&F.scale.fromArray(D.scale);return A.associations.set(F,{type:"nodes",index:M}),F})},ae.prototype.loadScene=function(){function M(x,I,A,D){var N=A.nodes[x];return D.getDependency("node",x).then(function(F){if(N.skin===void 0)return F;var C;return D.getDependency("skin",N.skin).then(function(U){C=U;for(var k=[],j=0,V=C.joints.length;j<V;j++)k.push(D.getDependency("node",C.joints[j]));return Promise.all(k)}).then(function(U){return F.traverse(function(k){if(!k.isMesh)return;for(var j=[],V=[],ee=0,b=U.length;ee<b;ee++){var S=U[ee];if(S){j.push(S);var Q=new Re;C.inverseBindMatrices!==void 0&&Q.fromArray(C.inverseBindMatrices.array,ee*16),V.push(Q)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',C.joints[ee])}k.bind(new Nr(j,V),k.matrixWorld)}),F})}).then(function(F){I.add(F);var C=[];if(N.children)for(var U=N.children,k=0,j=U.length;k<j;k++){var V=U[k];C.push(M(V,F,A,D))}return Promise.all(C)})}return function(I){var A=this.json,D=this.extensions,N=this.json.scenes[I],F=this,C=new Ht;N.name&&(C.name=N.name),G(C,N),N.extensions&&z(D,C,N);for(var U=N.nodes||[],k=[],j=0,V=U.length;j<V;j++)k.push(M(U[j],C,A,F));return Promise.all(k).then(function(){return C})}}(),e}();class iu{constructor(e,t,n){this.loadScene=e=>{const t=new nu;t.load(e,this.onLoad)};this.onLoad=e=>{const t=e.scene;t.traverse(n=>{n instanceof qe&&(n.material instanceof rt&&(n.material.envMap=this._envMap,n.material.name==="Canvas"&&(n.material.map=new Fn().load(this._img.src),n.material.map.flipY=!1)))}),this._sceneManager.scene.add(t),this._sceneManager.needsRender=!0};this._sceneManager=e,this._url=t,this._img=n,this.init()}init(){this.initEnvMap(),this.loadScene(this._url)}initEnvMap(){this._envMap=new Fn().load(`${this._sceneManager.pathToAssets}/images/envMap.jpg`),this._envMap.mapping=lr,this._envMap.encoding=Tn}}class ru{constructor(e){e=e||{};const t=e.geometry||new Tr(2,2),n=new ei({vertexShader:`#define GLSLIFY 1
attribute vec3 position;
uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
varying vec2 vUv;
void main() {
  gl_Position = vec4(position, 1.0);
  vUv = vec2(position.x, position.y) * 0.5 + 0.5;
}`,fragmentShader:`precision mediump float;
#define GLSLIFY 1
//
// GLSL textureless classic 3D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-10-11
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec3 mod289_1604150559(vec3 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 mod289_1604150559(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute_1604150559(vec4 x)
{
  return mod289_1604150559(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt_1604150559(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec3 fade_1604150559(vec3 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise, periodic variant
float pnoise_1604150559(vec3 P, vec3 rep)
{
  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period
  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period
  Pi0 = mod289_1604150559(Pi0);
  Pi1 = mod289_1604150559(Pi1);
  vec3 Pf0 = fract(P); // Fractional part for interpolation
  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0
  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
  vec4 iy = vec4(Pi0.yy, Pi1.yy);
  vec4 iz0 = Pi0.zzzz;
  vec4 iz1 = Pi1.zzzz;

  vec4 ixy = permute_1604150559(permute_1604150559(ix) + iy);
  vec4 ixy0 = permute_1604150559(ixy + iz0);
  vec4 ixy1 = permute_1604150559(ixy + iz1);

  vec4 gx0 = ixy0 * (1.0 / 7.0);
  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
  gx0 = fract(gx0);
  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
  vec4 sz0 = step(gz0, vec4(0.0));
  gx0 -= sz0 * (step(0.0, gx0) - 0.5);
  gy0 -= sz0 * (step(0.0, gy0) - 0.5);

  vec4 gx1 = ixy1 * (1.0 / 7.0);
  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
  gx1 = fract(gx1);
  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
  vec4 sz1 = step(gz1, vec4(0.0));
  gx1 -= sz1 * (step(0.0, gx1) - 0.5);
  gy1 -= sz1 * (step(0.0, gy1) - 0.5);

  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);

  vec4 norm0 = taylorInvSqrt_1604150559(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
  g000 *= norm0.x;
  g010 *= norm0.y;
  g100 *= norm0.z;
  g110 *= norm0.w;
  vec4 norm1 = taylorInvSqrt_1604150559(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
  g001 *= norm1.x;
  g011 *= norm1.y;
  g101 *= norm1.z;
  g111 *= norm1.w;

  float n000 = dot(g000, Pf0);
  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
  float n111 = dot(g111, Pf1);

  vec3 fade_xyz = fade_1604150559(Pf0);
  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
  return 2.2 * n_xyz;
}

//
// Description : Array and textureless GLSL 2D/3D/4D simplex
//               noise functions.
//      Author : Ian McEwan, Ashima Arts.
//  Maintainer : ijm
//     Lastmod : 20110822 (ijm)
//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.
//               Distributed under the MIT License. See LICENSE file.
//               https://github.com/ashima/webgl-noise
//

vec3 mod289_1117569599(vec3 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 mod289_1117569599(vec4 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute_1117569599(vec4 x) {
     return mod289_1117569599(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt_1117569599(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

float snoise_1117569599(vec3 v)
  {
  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
  const vec4  D_1117569599 = vec4(0.0, 0.5, 1.0, 2.0);

// First corner
  vec3 i  = floor(v + dot(v, C.yyy) );
  vec3 x0 =   v - i + dot(i, C.xxx) ;

// Other corners
  vec3 g_1117569599 = step(x0.yzx, x0.xyz);
  vec3 l = 1.0 - g_1117569599;
  vec3 i1 = min( g_1117569599.xyz, l.zxy );
  vec3 i2 = max( g_1117569599.xyz, l.zxy );

  //   x0 = x0 - 0.0 + 0.0 * C.xxx;
  //   x1 = x0 - i1  + 1.0 * C.xxx;
  //   x2 = x0 - i2  + 2.0 * C.xxx;
  //   x3 = x0 - 1.0 + 3.0 * C.xxx;
  vec3 x1 = x0 - i1 + C.xxx;
  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y
  vec3 x3 = x0 - D_1117569599.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y

// Permutations
  i = mod289_1117569599(i);
  vec4 p = permute_1117569599( permute_1117569599( permute_1117569599(
             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))
           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));

// Gradients: 7x7 points over a square, mapped onto an octahedron.
// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)
  float n_ = 0.142857142857; // 1.0/7.0
  vec3  ns = n_ * D_1117569599.wyz - D_1117569599.xzx;

  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)

  vec4 x_ = floor(j * ns.z);
  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)

  vec4 x = x_ *ns.x + ns.yyyy;
  vec4 y = y_ *ns.x + ns.yyyy;
  vec4 h = 1.0 - abs(x) - abs(y);

  vec4 b0 = vec4( x.xy, y.xy );
  vec4 b1 = vec4( x.zw, y.zw );

  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;
  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;
  vec4 s0 = floor(b0)*2.0 + 1.0;
  vec4 s1 = floor(b1)*2.0 + 1.0;
  vec4 sh = -step(h, vec4(0.0));

  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
  vec4 a1_1117569599 = b1.xzyw + s1.xzyw*sh.zzww ;

  vec3 p0_1117569599 = vec3(a0.xy,h.x);
  vec3 p1 = vec3(a0.zw,h.y);
  vec3 p2 = vec3(a1_1117569599.xy,h.z);
  vec3 p3 = vec3(a1_1117569599.zw,h.w);

//Normalise gradients
  vec4 norm = taylorInvSqrt_1117569599(vec4(dot(p0_1117569599,p0_1117569599), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
  p0_1117569599 *= norm.x;
  p1 *= norm.y;
  p2 *= norm.z;
  p3 *= norm.w;

// Mix final noise value
  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
  m = m * m;
  return 42.0 * dot( m*m, vec4( dot(p0_1117569599,x0), dot(p1,x1),
                                dot(p2,x2), dot(p3,x3) ) );
  }

float grain_2281831123(vec2 texCoord, vec2 resolution, float frame, float multiplier) {
    vec2 mult = texCoord * resolution;
    float offset = snoise_1117569599(vec3(mult / multiplier, frame));
    float n1 = pnoise_1604150559(vec3(mult, offset), vec3(1.0/texCoord * resolution, 1.0));
    return n1 / 2.0 + 0.5;
}

float grain_2281831123(vec2 texCoord, vec2 resolution, float frame) {
    return grain_2281831123(texCoord, resolution, frame, 2.5);
}

float grain_2281831123(vec2 texCoord, vec2 resolution) {
    return grain_2281831123(texCoord, resolution, 0.0);
}

vec3 blendSoftLight_1540259130(vec3 base, vec3 blend) {
    return mix(
        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), 
        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), 
        step(base, vec3(0.5))
    );
}

// Using conditionals
// vec3 blendSoftLight(vec3 base, vec3 blend) {
//     return vec3(
//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),
//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),
//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))
//     );
// }

uniform vec3 color1;
uniform vec3 color2;
uniform float aspect;
uniform vec2 offset;
uniform vec2 scale;
uniform float noiseAlpha;
uniform bool aspectCorrection;
uniform float grainScale;
uniform float grainTime;
uniform vec2 smooth;

varying vec2 vUv;

void main() {
  vec2 q = vec2(vUv - 0.5);
  if (aspectCorrection) {
    q.x *= aspect;
  }
  q /= scale;
  q -= offset;
  float dst = length(q);
  dst = smoothstep(smooth.x, smooth.y, dst);
  vec3 color = mix(color1, color2, dst);
  
  if (noiseAlpha > 0.0 && grainScale > 0.0) {
    float gSize = 1.0 / grainScale;
    float g = grain_2281831123(vUv, vec2(gSize * aspect, gSize), grainTime);
    vec3 noiseColor = blendSoftLight_1540259130(color, vec3(g));
    gl_FragColor.rgb = mix(color, noiseColor, noiseAlpha);
  } else {
    gl_FragColor.rgb = color;
  }
  gl_FragColor.a = 1.0;
}`,side:bn,uniforms:{aspectCorrection:{value:!1},aspect:{value:1},grainScale:{value:.005},grainTime:{value:0},noiseAlpha:{value:.25},offset:{value:new $(0,0)},scale:{value:new $(1,1)},smooth:{value:new $(0,1)},color1:{value:new de("#fff")},color2:{value:new de("#283844")}},depthTest:!1}),i=new qe(t,n);i.frustumCulled=!1,i.style=r,e&&i.style(e),this._mesh=i;function r(o){if(o=o||{},Array.isArray(o.colors)){const h=o.colors.map(function(u){return typeof u=="string"||typeof u=="number"?new de(u):u});n.uniforms.color1.value.copy(h[0]),n.uniforms.color2.value.copy(h[1])}if(typeof o.aspect=="number"&&(n.uniforms.aspect.value=o.aspect),typeof o.grainScale=="number"&&(n.uniforms.grainScale.value=o.grainScale),typeof o.grainTime=="number"&&(n.uniforms.grainTime.value=o.grainTime),o.smooth){var a=s(o.smooth,$);n.uniforms.smooth.value.copy(a)}if(o.offset){var c=s(o.offset,$);n.uniforms.offset.value.copy(c)}if(typeof o.noiseAlpha=="number"&&(n.uniforms.noiseAlpha.value=o.noiseAlpha),typeof o.scale!="undefined"){var l=o.scale;typeof l=="number"&&(l=[l,l]),l=s(l,$),n.uniforms.scale.value.copy(l)}typeof o.aspectCorrection!="undefined"&&(n.uniforms.aspectCorrection.value=Boolean(o.aspectCorrection))}const s=(o,a)=>Array.isArray(o)?new a().fromArray(o):o}get mesh(){return this._mesh}}class nn{constructor(e,t){this._distance=new Qr(15,15,1,30,Rt.EASE_OUT,Lt.ANIMATION_DURATION);this._normalizedCameraPosition=[0,0,1];this._pathToAssets="";this.needsRender=!0;this.onWindowResize=()=>{this._canvas.width=0,this._canvas.height=0;const e=window.innerWidth,t=window.innerHeight;this._renderer.setSize(e,t),this._camera.aspect=e/t,this._camera.updateProjectionMatrix()};this.onContextLost=e=>{e.preventDefault(),alert("Unfortunately WebGL has crashed. Please reload the page to continue!")};this.update=e=>{nn._timeStamp=performance.now(),this.needsRender=Ct.updateActiveOnes(nn._timeStamp)||this.needsRender,this.needsRender&&(this._normalizedCameraPosition=this._controls.update(),this._camera.position.set(this._normalizedCameraPosition[0]*this._distance.value,this._normalizedCameraPosition[1]*this._distance.value,this._normalizedCameraPosition[2]*this._distance.value),this._camera.lookAt(0,0,0),this._renderer.render(this._scene,this._camera),this.needsRender=!1)};this.animate=e=>{this.update(e),this._renderer.setAnimationLoop(this.update)};this._canvas=document.createElement("canvas"),this._canvas.classList.remove("hidden"),this._scene=new Is,this._camera=new Ye(60,window.innerWidth/window.innerHeight,.05,70),this._pathToAssets=t,document.getElementById(e).appendChild(this._canvas)}init(e){this.initBackground(),this.initLights(),this.initControls(),this.initRenderer(),this.initMeshes(e),this.onWindowResize(),this.animate(0)}initBackground(){const e=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream;this._scene.add(new ru({aspect:this._camera.aspect,grainScale:e?0:.001,colors:["#ffffff","#353535"]}).mesh)}initLights(){const e=new Jr(16777215,.3),t=new Un(16777215,1);t.position.set(.5,.2,.5);const n=new Un(16777215,.6);n.position.set(-.1,.3,-.5);const i=new Xr(16777147,526368,.8);this._scene.add(e,t,n,i)}initControls(){this._controls=new tu(this._canvas,this),this._controls.activate()}initMeshes(e){const t=e.width>e.height?"landscape":"portrait";this._sceneLoader=new iu(this,`${this._pathToAssets}/models/${t}.glb`,e)}initRenderer(){const e={alpha:!1,antialias:!0},t=this._canvas.getContext("webgl2",e)||this._canvas.getContext("experimental-webgl2",e);this._renderer=new Ui(Ca({canvas:this._canvas,context:t},e)),this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.setClearColor(15530239),this._renderer.outputEncoding=hs,this._canvas.addEventListener("webglcontextlost",this.onContextLost),window.addEventListener("resize",this.onWindowResize)}get scene(){return this._scene}static get timeStamp(){return nn._timeStamp}get distance(){return this._distance}get pathToAssets(){return this._pathToAssets}}nn._timeStamp=0;Pa();})();
